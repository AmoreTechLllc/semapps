{"version":3,"file":"index.es.js","sources":["../src/MultiServerAutocompleteArrayInput.js"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { AutocompleteArrayInput } from 'react-admin';\nimport { useDataServers } from '@semapps/semantic-data-provider';\n\nconst MultiServerAutocompleteArrayInput = ({ optionText, ...rest }) => {\n  const dataServers = useDataServers();\n  const optionTextWithServerName = useCallback(\n    record => {\n      if (record) {\n        const server = Object.values(dataServers).find(server => record.id.startsWith(server.baseUrl));\n        return (\n          <span>\n            {record[optionText]}\n            {server && (\n              <em className=\"serverName\" style={{ color: 'grey' }}>\n                &nbsp;({server.name})\n              </em>\n            )}\n          </span>\n        );\n      }\n    },\n    [optionText, dataServers]\n  );\n  const matchSuggestion = useCallback(\n    (filterValue, choice) => choice[optionText].toLowerCase().match(filterValue.toLocaleString()),\n    [optionText]\n  );\n  return <AutocompleteArrayInput matchSuggestion={matchSuggestion} optionText={optionTextWithServerName} {...rest} />;\n};\n\nexport default MultiServerAutocompleteArrayInput;\n"],"names":["MultiServerAutocompleteArrayInput","optionText","rest","dataServers","useDataServers","optionTextWithServerName","useCallback","record","server","Object","values","find","id","startsWith","baseUrl","React","className","style","color","name","matchSuggestion","filterValue","choice","toLowerCase","match","toLocaleString","AutocompleteArrayInput"],"mappings":"qvBAIMA,EAAoC,gBAAGC,IAAAA,WAAeC,SACpDC,EAAcC,IACdC,EAA2BC,GAC/B,SAAAC,MACMA,EAAQ,KACJC,EAASC,OAAOC,OAAOP,GAAaQ,MAAK,SAAAH,UAAUD,EAAOK,GAAGC,WAAWL,EAAOM,mBAEnFC,4BACGR,EAAON,GACPO,GACCO,sBAAIC,UAAU,aAAaC,MAAO,CAAEC,MAAO,cACjCV,EAAOW,cAO3B,CAAClB,EAAYE,IAETiB,EAAkBd,GACtB,SAACe,EAAaC,UAAWA,EAAOrB,GAAYsB,cAAcC,MAAMH,EAAYI,oBAC5E,CAACxB,WAEIc,gBAACW,KAAuBN,gBAAiBA,EAAiBnB,WAAYI,GAA8BH"}