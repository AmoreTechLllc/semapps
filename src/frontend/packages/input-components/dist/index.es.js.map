{"version":3,"file":"index.es.js","sources":["../src/MultiServerAutocompleteArrayInput.js"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport { AutocompleteArrayInput } from \"react-admin\";\nimport { useDataServers } from '@semapps/semantic-data-provider';\n\nconst MultiServerAutocompleteArrayInput = ({ optionText, ...rest }) => {\n  const dataServers = useDataServers();\n  const optionTextWithServerName = useCallback(record => {\n    if( record ) {\n      const server = Object.values(dataServers).find(server => record.id.startsWith(server.baseUrl));\n      return <span>{record[optionText]}{server && <em className=\"serverName\" style={{ color: 'grey' }}>&nbsp;({server.name})</em>}</span>;\n    }\n  }, [optionText, dataServers]);\n  const matchSuggestion = useCallback(\n    (filterValue, choice) => choice[optionText].toLowerCase().match(filterValue.toLocaleString()),\n    [optionText]\n  );\n  return(\n    <AutocompleteArrayInput\n      matchSuggestion={matchSuggestion}\n      optionText={optionTextWithServerName}\n      {...rest}\n    />\n  )\n};\n\nexport default MultiServerAutocompleteArrayInput;\n"],"names":["MultiServerAutocompleteArrayInput","optionText","rest","dataServers","useDataServers","optionTextWithServerName","useCallback","record","server","Object","values","find","id","startsWith","baseUrl","React","className","style","color","name","matchSuggestion","filterValue","choice","toLowerCase","match","toLocaleString","AutocompleteArrayInput"],"mappings":"qvBAIMA,EAAoC,gBAAGC,IAAAA,WAAeC,SACpDC,EAAcC,IACdC,EAA2BC,GAAY,SAAAC,MACvCA,EAAS,KACLC,EAASC,OAAOC,OAAOP,GAAaQ,MAAK,SAAAH,UAAUD,EAAOK,GAAGC,WAAWL,EAAOM,mBAC9EC,4BAAOR,EAAON,GAAaO,GAAUO,sBAAIC,UAAU,aAAaC,MAAO,CAAEC,MAAO,cAAkBV,EAAOW,cAEjH,CAAClB,EAAYE,IACViB,EAAkBd,GACtB,SAACe,EAAaC,UAAWA,EAAOrB,GAAYsB,cAAcC,MAAMH,EAAYI,oBAC5E,CAACxB,WAGDc,gBAACW,KACCN,gBAAiBA,EACjBnB,WAAYI,GACRH"}