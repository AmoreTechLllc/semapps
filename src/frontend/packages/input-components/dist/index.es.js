import t,{useCallback as e}from"react";import{AutocompleteArrayInput as r,AutocompleteInput as n,TextInput as o}from"react-admin";import{useDataServers as a}from"@semapps/semantic-data-provider";function i(){return(i=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t}).apply(this,arguments)}function c(t,e){if(null==t)return{};var r,n,o=function(t,e){if(null==t)return{};var r,n,o={},a=Object.keys(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||(o[r]=t[r]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(n=0;n<a.length;n++)r=a[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(o[r]=t[r])}return o}var u=function(e){var r=e.record,n=e.optionText,o=e.dataServers,a=o&&Object.values(o).find((function(t){return r.id.startsWith(t.baseUrl)}));return t.createElement("span",null,r[n],a&&t.createElement("em",{className:"serverName",style:{color:"grey"}},"Â (",a.name,")"))},l=["optionText"],s=function(n){var o=n.optionText,s=c(n,l),f=a(),p=e((function(t,e){return e[o].toLowerCase().match(t.toLowerCase())}),[o]);return t.createElement(r,i({matchSuggestion:p,optionText:t.createElement(u,{optionText:o,dataServers:f})},s))},f=["optionText"],p=function(r){var o=r.optionText,u=c(r,f),l=a(),s=e((function(t){if(t&&l){var e=Object.values(l).find((function(e){return t.id.startsWith(e.baseUrl)}));return t[o]+(e?" (".concat(e.name,")"):"")}}),[o,l]);return t.createElement(n,i({optionText:s},u))},m=function(e){return t.createElement(o,i({multiline:!0,minRows:2,format:function(t){return t?Array.isArray(t)?t.join("\n"):t:""},parse:function(t){return t.split(/\r?\n/)}},e))};export{m as MultiLinesInput,s as MultiServerAutocompleteArrayInput,p as MultiServerAutocompleteInput};
//# sourceMappingURL=index.es.js.map
