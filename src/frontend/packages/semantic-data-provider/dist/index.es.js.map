{"version":3,"file":"index.es.js","sources":["../src/fields/ImageField.js","../src/fields/ReferenceArrayField.js","../src/fields/ReferenceField.js","../src/dataHandling/FilterHandler.js","../src/dataHandling/GroupedReferenceHandler.js","../src/inputs/DateTimeInput.js","../src/inputs/ReferenceArrayInput.js","../src/inputs/ReferenceInput.js","../src/inputs/ReificationArrayInput.js","../src/hooks/useDataModel.js","../src/hooks/useDataServers.js","../../../node_modules/url-join/lib/url-join.js","../src/dataProvider/utils/getServerKeyFromType.js","../src/dataProvider/utils/parseServerKeys.js","../src/dataProvider/utils/findContainersWithTypes.js","../src/hooks/useContainers.js","../src/dataProvider/utils/findCreateContainerWithTypes.js","../src/hooks/useCreateContainer.js","../src/hooks/useDataModels.js","../src/dataProvider/utils/getServerKeyFromUri.js","../src/dataProvider/utils/fetchResource.js","../src/dataProvider/methods/getOne.js","../src/dataProvider/utils/uploadAllFiles.js","../src/dataProvider/methods/create.js","../src/dataProvider/methods/delete.js","../src/dataProvider/methods/deleteMany.js","../src/dataProvider/methods/getDataServers.js","../src/dataProvider/methods/getDataModels.js","../src/dataProvider/utils/fetchContainers.js","../src/dataProvider/utils/getEmbedFrame.js","../../../node_modules/crypto-js/core.js","../../../node_modules/crypto-js/md5.js","../src/dataProvider/utils/buildBlankNodesQuery.js","../src/dataProvider/utils/buildSparqlQuery.js","../src/dataProvider/utils/getBlankNodesFromDataServers.js","../src/dataProvider/utils/fetchSparqlEndpoints.js","../src/dataProvider/utils/findContainersWithPath.js","../src/dataProvider/methods/getList.js","../src/dataProvider/methods/getMany.js","../src/dataProvider/methods/getManyReference.js","../src/dataProvider/methods/update.js","../../../node_modules/jwt-decode/build/jwt-decode.esm.js","../src/dataProvider/utils/fetchUserConfig.js","../src/dataProvider/utils/fetchVoidEndpoints.js","../src/dataProvider/dataProvider.js","../src/httpClient.js"],"sourcesContent":["import React from 'react';\nimport { ImageField as RaImageField } from 'react-admin';\n\nconst ImageField = ({ record, source, ...otherProps }) => {\n  // For the display, we need to have the URI in a src property\n  if (typeof record === 'string') record = { [source]: record };\n  return <RaImageField record={record} source={source} {...otherProps} />;\n};\n\nexport default ImageField;\n","import React from 'react';\nimport { ReferenceArrayField as RaReferenceArrayField } from 'react-admin';\n\nconst ReferenceArrayField = ({ record, source, ...otherProps }) => {\n  if (record?.[source]) {\n    if (!Array.isArray(record[source])) {\n      record[source] = [record[source]];\n    }\n    record[source] = record[source].map(i => i['@id'] || i.id || i);\n  }\n  return <RaReferenceArrayField record={record} source={source} {...otherProps} />;\n};\n\nReferenceArrayField.defaultProps = {\n  addLabel: true\n};\n\nexport default ReferenceArrayField;\n","import React from 'react';\nimport { ReferenceField as RaReferenceField } from 'react-admin';\n\nconst ReferenceField = ({ record, source, ...otherProps }) => {\n  if (record[source]) {\n    if (typeof record[source] === 'object') {\n      record[source] = record[source]['@id'] || record[source].id;\n    }\n  }\n  return <RaReferenceField record={record} source={source} {...otherProps} />;\n};\n\nReferenceField.defaultProps = {\n  addLabel: true\n};\n\nexport default ReferenceField;\n","import React, { useState, useEffect } from 'react';\n\n/**\n * @example\n * <Show>\n *   <FilterHandler\n *     source=\"property\" // ex pair:organizationOfMembership\n *     filter={{\n *       'propertyToFilter':'value'\n *     }} // ex {{'pair:membershipRole':'http://localhost:3000/membership-roles/role-1'}}\n *     >\n *     <SingleFieldList>\n *    </SingleFieldList>\n *   </FilterHandler>\n * </Show>\n */\n\nconst FilterHandler = ({ children, record, filter, source, ...otherProps }) => {\n  const [filtered, setFiltered] = useState();\n  useEffect(() => {\n    if (record && source && Array.isArray(record?.[source])) {\n      const filteredData = record?.[source].filter(r => {\n        let eq = true;\n        for (const key in filter) {\n          const value = r[key];\n          if (Array.isArray(value)) {\n            if (!value.includes(filter[key])) {\n              eq = false;\n            }\n          } else {\n            if (value !== filter[key]) {\n              eq = false;\n            }\n          }\n        }\n        return eq;\n      });\n      let newRecord = {\n        ...record\n      };\n      //undefined setted if no data to obtain no render in RightLabel or equivalent\n      newRecord[source] = filteredData.length > 0 ? filteredData : undefined;\n      setFiltered(newRecord);\n    }\n  }, [record, source, filter]);\n\n  return (\n    <>\n      {React.Children.map(children, (child, i) => {\n        return React.cloneElement(child, {\n          ...otherProps,\n          record: filtered,\n          addLabel: true,\n          source\n        });\n      })}\n    </>\n  );\n};\nexport default FilterHandler;\n","import React from 'react';\nimport { useQueryWithStore } from 'react-admin';\nimport { default as FilterHandler } from './FilterHandler';\n\n/*\n * @example Label used in examples\n *  const Label = ({label, ...otherProps})=>{\n *     return <h2>{label}</h2>\n *  }\n *\n * @example show header for each group with group property thanks to groupHeader\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupHeader={({group,...otherProps}) => <Label {...otherProps} label={group['pair:label']}></Label> }\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n * </GroupedReferenceHandler>\n *\n * @example call chhildren with label thanks to groupLabel\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupLabel=\"property of RAresource display\" // property of React-Admin resource to display. children call whith props \"label\" filled by groupLabel property of groupReference\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *   <Label>\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n * </GroupedReferenceHandler>\n *\n * @example conditional show of group if no data in source. Conditionale groupHeader is not possible because GroupedArrayField define group before filter ; need use chhildren.\n * const ConditionalSourceDefinedHandler = ({record,source,children,...otherProps})=>{\n *   if (record?.[source] && (!Array.isArray(record[source])||record[source].length>0)){\n *     return  React.Children.map(children, (child, i) => {\n *         return React.cloneElement(child, {...otherProps,record,source});\n *       })\n *   }else{\n *     return <></>\n *   }\n * }\n *\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupLabel=\"property of RAresource display\" // property of React-Admin resource to display. children call whith props \"label\" filled by groupLabel property of groupReference\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *  <ConditionalSourceDefinedHandler>\n *   <Label>\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n *  </ConditionalSourceDefinedHandler>\n * </GroupedReferenceHandler>\n *\n *\n */\nconst GroupedReferenceHandler = ({\n  children,\n  groupReference,\n  groupLabel,\n  groupHeader,\n  filterProperty,\n  ...otherProps\n}) => {\n  const { data } = useQueryWithStore({\n    type: 'getList',\n    resource: groupReference,\n    payload: {}\n  });\n\n  return (\n    <>\n      {data?.map((data, index) => {\n        let filter = {};\n        filter[filterProperty] = data.id;\n        return (\n          <>\n            {groupHeader && groupHeader({ ...otherProps, group: data })}\n            <FilterHandler {...otherProps} filter={filter} label={data[groupLabel]}>\n              {children}\n            </FilterHandler>\n          </>\n        );\n      })}\n    </>\n  );\n};\n\nexport default GroupedReferenceHandler;\n","import React from 'react';\nimport { DateTimeInput as RaDateTimeInput } from 'react-admin';\n\n/**\n * @deprecated Use the component from the @semapps/date-components instead\n */\nconst DateTimeInput = props => (\n  <RaDateTimeInput {...props} format={value => value && value.replace(' ', 'T').replace('Z', '')} />\n);\n\nexport default DateTimeInput;\n","import React from 'react';\nimport { ReferenceArrayInput as RaReferenceArrayInput, useResourceContext } from 'react-admin';\n\nconst ReferenceArrayInput = props => {\n  const resource = useResourceContext({});\n  return (\n    <RaReferenceArrayInput\n      {...props}\n      resource={resource}\n      format={value => {\n        // If there is no value, return immediately\n        if (!value) return value;\n        // if the linked field value is not an array, turns it into an array.\n        // Necessary as JSON-LD are sometimes arrays, sometimes not (when there is one value)\n        // and the ReferenceArrayInput component only accept arrays\n        if (!Array.isArray(value)) value = [value];\n        // If a format prop was defined, apply it to the array\n        if (props.format) value = props.format(value);\n        // If the values are objects with @id field, turn it to a simple string\n        return value.map(v => (typeof v === 'object' ? v.id || v['@id'] : v));\n      }}\n    />\n  );\n};\n\nexport default ReferenceArrayInput;\n","import React from 'react';\nimport { ReferenceInput as RaReferenceInput, useResourceContext } from 'react-admin';\n\nconst ReferenceInput = props => {\n  const resource = useResourceContext({});\n  return (\n    <RaReferenceInput\n      {...props}\n      resource={resource}\n      format={value => {\n        // If there is no value, return immediately\n        if (!value) return value;\n        // If a format prop was defined, apply it\n        if (props.format) value = props.format(value);\n        // If the value is an object with an @id field, return the uri\n        return typeof value === 'object' ? value.id || value['@id'] : value;\n      }}\n    />\n  );\n};\n\nexport default ReferenceInput;\n","import React, { useEffect, useState } from 'react';\nimport { ArrayInput, SimpleFormIterator, TextInput } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useReferenceInputStyles = makeStyles({\n  form: {\n    display: 'flex'\n  },\n  input: {\n    paddingRight: '20px'\n  }\n});\n\nconst useHideInputStyles = makeStyles({\n  root: {\n    display: 'none'\n  }\n});\n\nconst ReificationArrayInput = props => {\n  const { reificationClass, children, ...otherProps } = props;\n  const flexFormClasses = useReferenceInputStyles();\n  const hideInputStyles = useHideInputStyles();\n\n  return (\n    <ArrayInput {...otherProps}>\n      <SimpleFormIterator classes={{ form: flexFormClasses.form }}>\n        {React.Children.map(props.children, (child, i) => {\n          return React.cloneElement(child, {\n            className: flexFormClasses.input\n          });\n        })}\n        <TextInput className={hideInputStyles.root} source=\"type\" initialValue={reificationClass} />\n      </SimpleFormIterator>\n    </ArrayInput>\n  );\n};\n\nexport default ReificationArrayInput;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataModel = resourceId => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataModel, setDataModel] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataModels().then(results => setDataModel(results[resourceId]));\n  }, [dataProvider, resourceId, setDataModel]);\n\n  return dataModel;\n};\n\nexport default useDataModel;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataServers = () => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataServers, setDataServers] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataServers().then(results => setDataServers(results));\n  }, [dataProvider, setDataServers]);\n\n  return dataServers;\n};\n\nexport default useDataServers;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) { return ''; }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","const getServerKeyFromType = (type, dataServers) => {\n  return Object.keys(dataServers).find(key => {\n    return dataServers[key][type];\n  });\n};\n\nexport default getServerKeyFromType;\n","import getServerKeyFromType from './getServerKeyFromType';\n\nconst parseServerKey = (serverKey, dataServers) => {\n  switch (serverKey) {\n    case '@default':\n      return getServerKeyFromType('default', dataServers);\n    case '@pod':\n      return getServerKeyFromType('pod', dataServers);\n    case '@authServer':\n      return getServerKeyFromType('authServer', dataServers);\n    default:\n      return serverKey;\n  }\n};\n\n// Return the list of servers keys in an array\n// parsing keywords like @all, @default, @pod and @authServer\nconst parseServerKeys = (serverKeys, dataServers) => {\n  if (Array.isArray(serverKeys)) {\n    if (serverKeys.includes('@all')) {\n      return Object.keys(dataServers);\n    } else {\n      return serverKeys.map(serverKey => parseServerKey(serverKey, dataServers));\n    }\n  } else if (typeof serverKeys === 'string') {\n    if (serverKeys === '@all') {\n      return Object.keys(dataServers);\n    } else if (serverKeys === '@remote') {\n      const defaultServerKey = getServerKeyFromType('default', dataServers);\n      return Object.keys(dataServers).filter(serverKey => serverKey !== defaultServerKey);\n    } else {\n      return [parseServerKey(serverKeys, dataServers)];\n    }\n  } else {\n    // If server key is empty\n    return false;\n  }\n};\n\nexport default parseServerKeys;\n","import urlJoin from 'url-join';\nimport parseServerKeys from './parseServerKeys';\n\nconst findContainersWithTypes = (types, serverKeys, dataServers) => {\n  let containers = {};\n  let existingContainers = [];\n\n  serverKeys = parseServerKeys(serverKeys, dataServers);\n\n  Object.keys(dataServers).forEach(key1 => {\n    Object.keys(dataServers[key1].containers).forEach(key2 => {\n      if (!serverKeys || serverKeys.includes(key2)) {\n        Object.keys(dataServers[key1].containers[key2]).forEach(type => {\n          if (types.includes(type)) {\n            dataServers[key1].containers[key2][type].map(path => {\n              const containerUri = urlJoin(dataServers[key2].baseUrl, path);\n\n              // Avoid returning the same container several times\n              if (!existingContainers.includes(containerUri)) {\n                existingContainers.push(containerUri);\n\n                if (!containers[key1]) containers[key1] = [];\n                containers[key1].push(containerUri);\n              }\n            });\n          }\n        });\n      }\n    });\n  });\n  return containers;\n};\n\nexport default findContainersWithTypes;\n","import { useState, useEffect } from 'react';\nimport useDataModel from './useDataModel';\nimport useDataServers from './useDataServers';\nimport findContainersWithTypes from '../dataProvider/utils/findContainersWithTypes';\n\nconst useContainers = (resourceId, serverKeys = '@all') => {\n  const dataModel = useDataModel(resourceId);\n  const dataServers = useDataServers();\n  const [containers, setContainers] = useState();\n\n  useEffect(() => {\n    if (dataModel && dataServers) {\n      setContainers(findContainersWithTypes(dataModel.types, serverKeys, dataServers));\n    }\n  }, [dataModel, dataServers, serverKeys]);\n\n  return containers;\n};\n\nexport default useContainers;\n","import urlJoin from 'url-join';\n\nconst findCreateContainerWithTypes = (types, createServerKey, dataServers) => {\n  let containers = [];\n  Object.keys(dataServers[createServerKey].containers[createServerKey]).forEach(type => {\n    if (types.includes(type)) {\n      dataServers[createServerKey].containers[createServerKey][type].map(path => {\n        const containerUri = urlJoin(dataServers[createServerKey].baseUrl, path);\n        if (!containers.includes(containerUri)) {\n          containers.push(containerUri);\n        }\n      });\n    }\n  });\n\n  if (containers.length === 0) {\n    throw new Error(\n      `No container found matching with types ${JSON.stringify(\n        types\n      )}. You can set explicitely the create.container property of the resource.`\n    );\n  } else if (containers.length > 1) {\n    throw new Error(\n      `More than one container found matching with types ${JSON.stringify(\n        types\n      )}. You must set the create.server or create.container property for the resource.`\n    );\n  }\n\n  return containers[0];\n};\n\nexport default findCreateContainerWithTypes;\n","import { useState, useEffect } from 'react';\nimport urlJoin from 'url-join';\nimport useDataModel from './useDataModel';\nimport useDataServers from './useDataServers';\nimport findCreateContainerWithTypes from '../dataProvider/utils/findCreateContainerWithTypes';\nimport getServerKeyFromType from '../dataProvider/utils/getServerKeyFromType';\n\nconst useCreateContainer = resourceId => {\n  const dataModel = useDataModel(resourceId);\n  const dataServers = useDataServers();\n  const [createContainer, setCreateContainer] = useState();\n\n  useEffect(() => {\n    if (dataModel && dataServers) {\n      if (dataModel.create?.container) {\n        const [serverKey, path] = Object.entries(dataModel.create.container)[0];\n        if (!serverKey || !dataServers[serverKey]) {\n          throw new Error('Wrong key for the dataModel.create.container config of resource ' + resourceId);\n        }\n        setCreateContainer(urlJoin(dataServers[serverKey].baseUrl, path));\n      } else if (dataModel.create?.server) {\n        setCreateContainer(findCreateContainerWithTypes(dataModel.types, dataModel.create?.server, dataServers));\n      } else {\n        const defaultServerKey = getServerKeyFromType('default', dataServers);\n        setCreateContainer(findCreateContainerWithTypes(dataModel.types, defaultServerKey, dataServers));\n      }\n    }\n  }, [dataModel, dataServers, setCreateContainer]);\n\n  return createContainer;\n};\n\nexport default useCreateContainer;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataModels = () => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataModels, setDataModels] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataModels().then(results => setDataModels(results));\n  }, [dataProvider, setDataModels]);\n\n  return dataModels;\n};\n\nexport default useDataModels;\n","// Return the first server matching with the baseUrl\nconst getServerKeyFromUri = (uri, dataServers) => {\n  return Object.keys(dataServers).find(key => {\n    return uri.startsWith(dataServers[key].baseUrl);\n  });\n};\n\nexport default getServerKeyFromUri;\n","import getServerKeyFromType from './getServerKeyFromType';\nimport getServerKeyFromUri from './getServerKeyFromUri';\nimport jsonld from 'jsonld';\n\nconst fetchResource = async (resourceUri, config) => {\n  const { dataServers, httpClient, jsonContext } = config;\n\n  const authServerKey = getServerKeyFromType('authServer', dataServers);\n  const serverKey = getServerKeyFromUri(resourceUri, dataServers);\n\n  // Fetch through proxy server if it is available\n  let { json: data } =\n    serverKey !== authServerKey && dataServers[authServerKey]?.proxyUrl && dataServers[serverKey]?.noProxy !== true\n      ? await httpClient(dataServers[authServerKey].proxyUrl, {\n          method: 'POST',\n          headers: new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' }),\n          body: new URLSearchParams({ id: resourceUri })\n        })\n      : await httpClient(resourceUri, {\n          noToken: serverKey !== authServerKey\n        });\n\n  data.id = data.id || data['@id'];\n\n  // We compact only if the context is different between the frontend and the middleware\n  // TODO deep compare if the context is an object\n  if (data['@context'] !== jsonContext) {\n    data = await jsonld.compact(data, jsonContext);\n  }\n\n  return data;\n};\n\nexport default fetchResource;\n","import fetchResource from '../utils/fetchResource';\n\nconst getOneMethod = config => async (resourceId, params) => {\n  const { resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  const data = await fetchResource(params.id, config);\n\n  // Transform single value into array if forceArray is set\n  if (dataModel.list?.forceArray) {\n    for (const forceArrayItem of dataModel.list?.forceArray) {\n      if (data[forceArrayItem] && !Array.isArray(data[forceArrayItem])) {\n        data[forceArrayItem] = [data[forceArrayItem]];\n      }\n    }\n  }\n\n  // TODO activate defaultFetchPlan option\n  // if (dataModel.list?.defaultFetchPlan) {\n  //   for (const node of dataModel.list?.defaultFetchPlan) {\n  //     if (\n  //       data[node] &&\n  //       typeof data[node] === 'string' &&\n  //       data[node].startsWith('http')\n  //     ) {\n  //       try {\n  //         const dataToEmbed = await fetchResource(data[node], config);\n  //         delete dataToEmbed['@context'];\n  //         data[node] = dataToEmbed;\n  //       } catch (e) {\n  //         // Ignore errors (this may happen if user does not have rights to see the resource)\n  //       }\n  //     }\n  //   }\n  // }\n\n  return { data };\n};\n\nexport default getOneMethod;\n","import createSlug from 'speakingurl';\nimport urlJoin from 'url-join';\n\nexport const getSlugWithExtension = fileName => {\n  let fileExtension = '';\n  let splitFileName = fileName.split('.');\n  if (splitFileName.length > 1) {\n    fileExtension = splitFileName.pop();\n    fileName = splitFileName.join('.');\n  }\n  return createSlug(fileName, { lang: 'fr' }) + '.' + fileExtension;\n};\n\nexport const isFile = o => o && o.rawFile && o.rawFile instanceof File;\n\nconst getUploadsContainerUri = config => {\n  const serverKey = Object.keys(config.dataServers).find(key => config.dataServers[key].uploadsContainer);\n  if (serverKey) {\n    return urlJoin(config.dataServers[serverKey].baseUrl, config.dataServers[serverKey].uploadsContainer);\n  }\n};\n\nconst uploadFile = async (rawFile, config) => {\n  const uploadsContainerUri = getUploadsContainerUri(config);\n  if (!uploadsContainerUri) throw new Error(\"You must define an uploadsContainer in one of the server's configuration\");\n\n  const response = await config.httpClient(uploadsContainerUri, {\n    method: 'POST',\n    body: rawFile,\n    headers: new Headers({\n      // We must sluggify the file name, because we can't use non-ASCII characters in the header\n      // However we keep the extension apart (if it exists) so that it is not replaced with a -\n      // TODO let the middleware guess the extension based on the content type\n      Slug: getSlugWithExtension(rawFile.name),\n      'Content-Type': rawFile.type\n    })\n  });\n\n  if (response.status === 201) {\n    return response.headers.get('Location');\n  }\n};\n\n/*\n * Look for raw files in the record data.\n * If there are any, upload them and replace the file by its URL.\n */\nconst uploadAllFiles = async (record, config) => {\n  for (let property in record) {\n    if (record.hasOwnProperty(property)) {\n      if (Array.isArray(record[property])) {\n        for (let i = 0; i < record[property].length; i++) {\n          if (isFile(record[property][i])) {\n            record[property][i] = await uploadFile(record[property][i].rawFile, config);\n          }\n        }\n      } else {\n        if (isFile(record[property])) {\n          record[property] = await uploadFile(record[property].rawFile, config);\n        }\n      }\n    }\n  }\n  return record;\n};\n\nexport default uploadAllFiles;\n","import urlJoin from 'url-join';\nimport getOne from './getOne';\nimport uploadAllFiles from '../utils/uploadAllFiles';\nimport findContainersWithTypes from '../utils/findContainersWithTypes';\n\nconst createMethod = config => async (resourceId, params) => {\n  const { dataServers, resources, httpClient, jsonContext } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  const headers = new Headers();\n\n  let containerUri, serverKey;\n  if (dataModel.create?.container) {\n    serverKey = Object.keys(dataModel.create.container)[0];\n    containerUri = urlJoin(dataServers[serverKey].baseUrl, Object.values(dataModel.create.container)[0]);\n  } else {\n    serverKey = dataModel.create?.server || Object.keys(dataServers).find(key => dataServers[key].default === true);\n    if (!serverKey) throw new Error('You must define a server for the creation, or a container, or a default server');\n\n    const containers = findContainersWithTypes(dataModel.types, [serverKey], dataServers);\n    // Extract the containerUri from the results (and ensure there is only one)\n    const serverKeys = Object.keys(containers);\n\n    if (!serverKeys || serverKeys.length === 0)\n      throw new Error(`No container with types ${JSON.stringify(dataModel.types)} found on server ${serverKey}`);\n    if (serverKeys.length > 1 || containers[serverKeys[0]].length > 1)\n      throw new Error(\n        `More than one container detected with types ${JSON.stringify(dataModel.types)} on server ${serverKey}`\n      );\n    containerUri = containers[serverKeys[0]][0];\n  }\n\n  if (params.data) {\n    if (dataModel.fieldsMapping?.title) {\n      if (Array.isArray(dataModel.fieldsMapping.title)) {\n        headers.set('Slug', dataModel.fieldsMapping.title.map(f => params.data[f]).join(' '));\n      } else {\n        headers.set('Slug', params.data[dataModel.fieldsMapping.title]);\n      }\n    }\n\n    // Upload files, if there are any\n    params.data = await uploadAllFiles(params.data, config);\n\n    const { headers: responseHeaders } = await httpClient(containerUri, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({\n        '@context': jsonContext,\n        '@type': dataModel.types,\n        ...params.data\n      }),\n      noToken: dataServers[serverKey].authServer !== true\n    });\n\n    // Retrieve newly-created resource\n    const resourceUri = responseHeaders.get('Location');\n    return await getOne(config)(resourceId, { id: resourceUri });\n  } else if (params.id) {\n    headers.set('Content-Type', 'application/sparql-update');\n\n    await httpClient(containerUri, {\n      method: 'PATCH',\n      headers,\n      body: `\n        PREFIX ldp: <http://www.w3.org/ns/ldp#>\n        INSERT DATA { <${containerUri}> ldp:contains <${params.id}>. };\n      `,\n      noToken: dataServers[serverKey].authServer !== true\n    });\n\n    // Create must return the new data, so get them from the remote URI\n    return await getOne(config)(resourceId, { id: params.id });\n  }\n};\n\nexport default createMethod;\n","import getServerKeyFromUri from '../utils/getServerKeyFromUri';\n\nconst deleteMethod = config => async (resourceId, params) => {\n  const { dataServers, httpClient } = config;\n  const serverKey = getServerKeyFromUri(params.id, dataServers);\n\n  await httpClient(params.id, {\n    method: 'DELETE',\n    noToken: !serverKey || dataServers[serverKey].authServer !== true\n  });\n\n  return { data: { id: params.id } };\n};\n\nexport default deleteMethod;\n","const deleteManyMethod = config => async (resourceId, params) => {\n  const { httpClient } = config;\n  let ids = [];\n\n  for (let id of params.ids) {\n    try {\n      await httpClient(id, {\n        method: 'DELETE'\n      });\n      ids.push(id);\n    } catch (e) {\n      // Do nothing if we fail to delete a resource\n    }\n  }\n\n  return { data: ids };\n};\n\nexport default deleteManyMethod;\n","const getDataServers = config => () => {\n  return config.dataServers;\n};\n\nexport default getDataServers;\n","const getDataModels = config => () => {\n  return config.resources;\n};\n\nexport default getDataModels;\n","import jsonld from 'jsonld';\n\nexport const isType = (type, resource) => {\n  const resourceType = resource.type || resource['@type'];\n  return Array.isArray(resourceType) ? resourceType.includes(type) : resourceType === type;\n};\n\nconst fetchContainers = async (containers, resourceId, params, config) => {\n  const { dataServers, httpClient, jsonContext } = config;\n\n  // Transform in an containerUri:serverKey object\n  const containersServers = Object.keys(containers).reduce(\n    (acc, serverKey) => ({\n      ...acc,\n      ...Object.fromEntries(containers[serverKey].map(containerUri => [containerUri, serverKey]))\n    }),\n    {}\n  );\n\n  const fetchPromises = Object.keys(containersServers).map(containerUri =>\n    httpClient(containerUri, {\n      noToken: !containersServers[containerUri] || dataServers[containersServers[containerUri]].authServer !== true\n    })\n      .then(({ json }) => {\n        // If container's context is different, compact it to have an uniform result\n        // TODO deep compare if the context is an object\n        if (json['@context'] !== jsonContext) {\n          return jsonld.compact(json, jsonContext);\n        } else {\n          return json;\n        }\n      })\n      .then(json => {\n        if (isType('ldp:Container', json)) {\n          return json['ldp:contains'];\n        } else {\n          throw new Error(containerUri + ' is not a LDP container');\n        }\n      })\n  );\n\n  // Fetch simultaneously all containers\n  let results = await Promise.all(fetchPromises);\n\n  if (results.length === 0) {\n    return { data: [], total: 0 };\n  } else {\n    // Merge all results in one array\n    results = [].concat.apply(...results);\n\n    let returnData = results.map(item => {\n      item.id = item.id || item['@id'];\n      return item;\n    });\n\n    // Apply filter to results\n    if (params.filter) {\n      // For SPARQL queries, we use \"a\" to filter types, but in containers it must be \"type\"\n      if (params.filter.a) {\n        params.filter.type = params.filter.a;\n        delete params.filter.a;\n      }\n\n      // Remove search params from filter\n      if (params.filter.q) {\n        delete params.filter.q;\n      }\n      if (Object.keys(params.filter).length > 0) {\n        returnData = returnData.filter(resource =>\n          Object.entries(params.filter).some(([k, v]) =>\n            Array.isArray(resource[k]) ? resource[k].includes(v) : resource[k] === v\n          )\n        );\n      }\n    }\n\n    if (params.sort) {\n      returnData = returnData.sort((a, b) => {\n        if (a[params.sort.field] && b[params.sort.field]) {\n          if (params.sort.order === 'ASC') {\n            return a[params.sort.field].localeCompare(b[params.sort.field]);\n          } else {\n            return b[params.sort.field].localeCompare(a[params.sort.field]);\n          }\n        } else {\n          return true;\n        }\n      });\n    }\n    if (params.pagination) {\n      returnData = returnData.slice(\n        (params.pagination.page - 1) * params.pagination.perPage,\n        params.pagination.page * params.pagination.perPage\n      );\n    }\n\n    return { data: returnData, total: results.length };\n  }\n};\n\nexport default fetchContainers;\n","const getEmbedFrame = blankNodes => {\n  let embedFrame = {},\n    predicates;\n  if (blankNodes) {\n    for (let blankNode of blankNodes) {\n      if (blankNode.includes('/')) {\n        predicates = blankNode.split('/').reverse();\n      } else {\n        predicates = [blankNode];\n      }\n      embedFrame = {\n        ...embedFrame,\n        ...predicates.reduce(\n          (accumulator, predicate) => ({\n            [predicate]: {\n              '@embed': '@last',\n              ...accumulator\n            }\n          }),\n          {}\n        )\n      };\n    }\n    return embedFrame;\n  }\n};\n\nexport default getEmbedFrame;\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","import md5 from 'crypto-js/md5';\nimport DataFactory from '@rdfjs/data-model';\nconst { namedNode, quad, variable } = DataFactory;\n\n// Transform ['ont:predicate1/ont:predicate2'] to ['ont:predicate1', 'ont:predicate1/ont:predicate2']\nconst extractNodes = blankNodes => {\n  let nodes = [];\n  if (blankNodes) {\n    for (let predicate of blankNodes) {\n      if (predicate.includes('/')) {\n        const nodeNames = predicate.split('/');\n        for (let i = 1; i <= nodeNames.length; i++) {\n          nodes.push(nodeNames.slice(0, i).join('/'));\n        }\n      } else {\n        nodes.push(predicate);\n      }\n    }\n  }\n  return nodes;\n};\n\nconst generateSparqlVarName = node => md5(node);\n\nconst getParentNode = node => node.includes('/') && node.split('/')[0];\n\nconst getPredicate = node => (node.includes('/') ? node.split('/')[1] : node);\n\nconst buildUnionQuery = queries =>\n  queries.map(q => {\n    let triples = q.query;\n    const firstTriple = queries.find(q2 => q.parentNode === q2.node);\n    if (firstTriple !== undefined) {\n      triples = triples.concat(firstTriple.query[0]);\n    }\n    return {\n      type: 'bgp',\n      triples: triples\n    };\n  });\n\nconst buildBlankNodesQuery = (blankNodes, ontologies) => {\n  let queries = [];\n  const nodes = extractNodes(blankNodes);\n\n  const firstQuery = {\n    type: 'bgp',\n    triples: [quad(variable('s1'), variable('p1'), variable('o1'))]\n  };\n\n  if (nodes && ontologies && ontologies.length > 0) {\n    for (let node of nodes) {\n      const parentNode = getParentNode(node);\n      const predicate = getPredicate(node);\n      const varName = generateSparqlVarName(node);\n      const parentVarName = parentNode ? generateSparqlVarName(parentNode) : '1';\n      const filterPrefix = predicate.split(':')[0];\n      const filterValue = predicate.split(':')[1];\n      const filterOntology = ontologies.find(ontology => ontology.prefix === filterPrefix);\n\n      if (!filterOntology) throw new Error(`No ontology found with prefix: ${filterPrefix}`);\n\n      const query = [\n        quad(variable('s' + parentVarName), namedNode(filterOntology.url + filterValue), variable('s' + varName)),\n        quad(variable('s' + varName), variable('p' + varName), variable('o' + varName))\n      ];\n\n      queries.push({\n        node,\n        parentNode,\n        query,\n        filter: '' // `FILTER(isBLANK(?s${varName})) .`\n      });\n    }\n\n    return {\n      construct: queries.length > 0 ? queries.map(q => q.query).reduce((pre, cur) => pre.concat(cur)) : null,\n      where: {\n        type: 'union',\n        patterns: [firstQuery, ...buildUnionQuery(queries)]\n      }\n    };\n  } else {\n    return {\n      construct: '',\n      where: ''\n    };\n  }\n};\n\nexport default buildBlankNodesQuery;\n","import buildBlankNodesQuery from './buildBlankNodesQuery';\nimport DataFactory from '@rdfjs/data-model';\nconst { literal, namedNode, triple, variable } = DataFactory;\n\nconst SparqlGenerator = require('sparqljs').Generator;\nconst generator = new SparqlGenerator({\n  /* prefixes, baseIRI, factory, sparqlStar */\n});\n\nconst reservedFilterKeys = ['q', 'sparqlWhere', 'blankNodes', '_servers'];\n\nconst buildSparqlQuery = ({ containers, params: { filter }, blankNodes, ontologies }) => {\n  let sparqlJsParams = {\n    queryType: 'CONSTRUCT',\n    template: [triple(variable('s1'), variable('p1'), variable('o1'))],\n    where: [],\n    type: 'query',\n    prefixes: Object.fromEntries(ontologies.map(ontology => [ontology.prefix, ontology.url]))\n  };\n\n  let containerWhere = [\n    {\n      type: 'values',\n      values: containers.map(containerUri => ({ '?containerUri': namedNode(containerUri) }))\n    },\n    {\n      type: 'bgp',\n      triples: [triple(variable('containerUri'), namedNode('http://www.w3.org/ns/ldp#contains'), variable('s1'))]\n    },\n    {\n      type: 'filter',\n      expression: {\n        type: 'operation',\n        operator: 'isiri',\n        args: [variable('s1')]\n      }\n    }\n  ];\n\n  let resourceWhere = [];\n\n  if (filter && Object.keys(filter).length > 0) {\n    const hasSPARQLFilter = filter.sparqlWhere && Object.keys(filter.sparqlWhere).length > 0;\n    const hasFullTextSearch = filter.q && filter.q.length > 0;\n\n    if (hasSPARQLFilter) {\n      /* \n        Example of usage :\n        {\n          \"sparqlWhere\": {\n            \"type\": \"bgp\",\n            \"triples\": [{\n              \"subject\": {\"termType\": \"Variable\", \"value\": \"s1\"},\n              \"predicate\": {\"termType\": \"NameNode\", \"value\": \"http://virtual-assembly.org/ontologies/pair#label\"},\n              \"object\": {\"termType\": \"Literal\", \"value\": \"My Organization\"}\n            }]\n          }\n        }\n      */\n      // initialize array in case of single value :\n      [].concat(filter.sparqlWhere).forEach(sw => {\n        resourceWhere.push(sw);\n      });\n    }\n\n    if (hasFullTextSearch) {\n      resourceWhere.push({\n        type: 'group',\n        patterns: [\n          {\n            queryType: 'SELECT',\n            variables: [variable('s1')],\n            where: [\n              {\n                type: 'bgp',\n                triples: [triple(variable('s1'), variable('p1'), variable('o1'))]\n              },\n              {\n                type: 'filter',\n                expression: {\n                  type: 'operation',\n                  operator: 'isliteral',\n                  args: [variable('o1')]\n                }\n              },\n              {\n                type: 'filter',\n                expression: {\n                  type: 'operation',\n                  operator: 'regex',\n                  args: [\n                    {\n                      type: 'operation',\n                      operator: 'lcase',\n                      args: [\n                        {\n                          type: 'operation',\n                          operator: 'str',\n                          args: [variable('o1')]\n                        }\n                      ]\n                    },\n                    literal(filter.q.toLowerCase(), '', namedNode('http://www.w3.org/2001/XMLSchema#string'))\n                  ]\n                }\n              }\n            ],\n            type: 'query'\n          }\n        ]\n      });\n    }\n\n    // Other filters\n    // SPARQL keyword a = filter based on the class of a resource (example => 'a': 'pair:OrganizationType')\n    // Other filters are based on a value (example => 'petr:hasAudience': 'http://localhost:3000/audiences/tout-public')\n    Object.keys(filter).forEach(filterKey => {\n      if (!reservedFilterKeys.includes(filterKey)) {\n        const filterItem = filterKey === 'a' ? filter[filterKey] : filterKey;\n        const filterPrefix = filterItem.split(':')[0];\n        const filterValue = filterItem.split(':')[1];\n        const filterOntology = ontologies.find(ontology => ontology.prefix === filterPrefix);\n        const filterPredicateValue =\n          filterKey === 'a' ? 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type' : filterOntology.url + filterValue;\n        const filterObjectValue = filterKey === 'a' ? filterOntology.url + filterValue : filter[filterKey];\n\n        resourceWhere.unshift({\n          type: 'bgp',\n          triples: [triple(variable('s1'), namedNode(filterPredicateValue), namedNode(filterObjectValue))]\n        });\n      }\n    });\n  }\n\n  // Blank nodes\n  const blankNodesQuery = buildBlankNodesQuery(blankNodes, ontologies);\n  if (blankNodesQuery && blankNodesQuery.construct) {\n    resourceWhere = resourceWhere.concat(blankNodesQuery.where);\n    sparqlJsParams.template = sparqlJsParams.template.concat(blankNodesQuery.construct);\n  } else {\n    resourceWhere.push({\n      type: 'bgp',\n      triples: [triple(variable('s1'), variable('p1'), variable('o1'))]\n    });\n  }\n\n  sparqlJsParams.where.push(\n    {\n      type: 'union',\n      patterns: [\n        containerWhere,\n        {\n          type: 'graph',\n          name: namedNode('http://semapps.org/mirror'),\n          patterns: containerWhere\n        }\n      ]\n    },\n    {\n      type: 'union',\n      patterns: [\n        resourceWhere,\n        {\n          type: 'graph',\n          name: namedNode('http://semapps.org/mirror'),\n          patterns: resourceWhere\n        }\n      ]\n    }\n  );\n\n  return generator.stringify(sparqlJsParams);\n};\n\nexport default buildSparqlQuery;\n","// Based on the dataServers config, returns the blank nodes for the given containers\nconst getBlankNodesFromDataServers = (containers, dataServers) => {\n  const blankNodes = [];\n  for (let serverKey of Object.keys(dataServers)) {\n    if (dataServers[serverKey].blankNodes) {\n      for (let containerUri of Object.keys(dataServers[serverKey].blankNodes)) {\n        if (containers.includes(containerUri)) {\n          blankNodes.push(...dataServers[serverKey].blankNodes[containerUri]);\n        }\n      }\n    }\n  }\n  // Remove duplicates\n  return [...new Set(blankNodes)];\n};\n\nexport default getBlankNodesFromDataServers;\n","import getEmbedFrame from './getEmbedFrame';\nimport buildSparqlQuery from './buildSparqlQuery';\nimport getBlankNodesFromDataServers from './getBlankNodesFromDataServers';\nimport jsonld from 'jsonld';\n\nconst compare = (a, b) => {\n  switch (typeof a) {\n    case 'string':\n      return a.localeCompare(b);\n    case 'number':\n    case 'bigint':\n      return a - b;\n    default:\n      return 0;\n  }\n};\n\nconst fetchSparqlEndpoints = async (containers, resourceId, params, config) => {\n  const { dataServers, resources, httpClient, jsonContext, ontologies } = config;\n  const dataModel = resources[resourceId];\n\n  const sparqlQueryPromises = Object.keys(containers).map(\n    serverKey =>\n      new Promise((resolve, reject) => {\n        const blankNodes =\n          params.filter?.blankNodes ||\n          dataModel.list?.blankNodes ||\n          getBlankNodesFromDataServers(containers[serverKey], dataServers);\n\n        const sparqlQuery = buildSparqlQuery({\n          containers: containers[serverKey],\n          params: { ...params, filter: { ...dataModel.list?.filter, ...params.filter } },\n          blankNodes,\n          ontologies\n        });\n\n        httpClient(dataServers[serverKey].sparqlEndpoint, {\n          method: 'POST',\n          body: sparqlQuery,\n          noToken: dataServers[serverKey].authServer !== true\n        })\n          .then(({ json }) => {\n            // By default, embed only the blank nodes we explicitly asked to dereference\n            // Otherwise we may have same-type resources embedded in other resources\n            // To increase performances, you can set explicitEmbedOnFraming to false (make sure the result is still OK)\n            const frame =\n              dataModel.list?.explicitEmbedOnFraming !== false\n                ? {\n                    '@context': jsonContext,\n                    '@type': dataModel.types,\n                    '@embed': '@never',\n                    ...getEmbedFrame(blankNodes)\n                  }\n                : {\n                    '@context': jsonContext,\n                    '@type': dataModel.types\n                  };\n\n            // omitGraph option force results to be in a @graph, even if we have a single result\n            return jsonld.frame(json, frame, { omitGraph: false });\n          })\n          .then(compactJson => {\n            resolve(compactJson['@graph'] || []);\n          })\n          .catch(e => reject(e));\n      })\n  );\n\n  // Run simultaneous SPARQL queries\n  let results = await Promise.all(sparqlQueryPromises);\n\n  if (results.length === 0) {\n    return { data: [], total: 0 };\n  } else {\n    // Merge all results in one array\n    results = [].concat.apply(...results);\n\n    // Add id in addition to @id, as this is what React-Admin expects\n    let returnData = results.map(item => {\n      item.id = item.id || item['@id'];\n      return item;\n    });\n\n    // TODO sort and paginate the results in the SPARQL query to improve performances\n    if (params.sort) {\n      returnData = returnData.sort((a, b) => {\n        if (a[params.sort.field] !== undefined && b[params.sort.field] !== undefined) {\n          if (params.sort.order === 'ASC') {\n            return compare(a[params.sort.field], b[params.sort.field]);\n          } else {\n            return compare(b[params.sort.field], a[params.sort.field]);\n          }\n        } else {\n          return 0;\n        }\n      });\n    }\n    if (params.pagination) {\n      returnData = returnData.slice(\n        (params.pagination.page - 1) * params.pagination.perPage,\n        params.pagination.page * params.pagination.perPage\n      );\n    }\n\n    return { data: returnData, total: results.length };\n  }\n};\n\nexport default fetchSparqlEndpoints;\n","import urlJoin from 'url-join';\n\nconst findContainersWithPaths = (paths, dataServers) => {\n  let containers = {};\n  Object.keys(paths).forEach(serverKey => {\n    if (dataServers[serverKey]) {\n      containers[serverKey] = [];\n      paths[serverKey].forEach(path => {\n        containers[serverKey].push(urlJoin(dataServers[serverKey].baseUrl, path));\n      });\n    } else {\n      throw new Error('No server found with key ' + serverKey);\n    }\n  });\n  return containers;\n};\n\nexport default findContainersWithPaths;\n","import findContainersWithTypes from '../utils/findContainersWithTypes';\nimport fetchContainers from '../utils/fetchContainers';\nimport fetchSparqlEndpoints from '../utils/fetchSparqlEndpoints';\nimport findContainersWithPaths from '../utils/findContainersWithPath';\n\nconst getListMethod = config => async (resourceId, params = {}) => {\n  let { dataServers, resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  let containers;\n  if (!params.filter?._servers && dataModel.list?.containers) {\n    if (Array.isArray(dataModel.list?.containers))\n      throw new Error(\n        `The list.containers property of ${resourceId} dataModel must be of type object ({ serverKey: [containerUri] })`\n      );\n    // If containers are set explicitly, use them\n    containers = findContainersWithPaths(dataModel.list.containers, dataServers);\n  } else {\n    // Otherwise find the container URIs on the given servers (either in the filter or the data model)\n    containers = findContainersWithTypes(\n      dataModel.types,\n      params.filter?._servers || dataModel.list?.servers,\n      dataServers\n    );\n  }\n\n  if (dataModel.list?.fetchContainer) {\n    return fetchContainers(containers, resourceId, params, config);\n  } else {\n    return fetchSparqlEndpoints(containers, resourceId, params, config);\n  }\n};\n\nexport default getListMethod;\n","import getOne from './getOne';\n\nconst getManyMethod = config => async (resourceId, params) => {\n  const { returnFailedResources } = config;\n\n  let returnData = [];\n\n  for (let id of params.ids) {\n    id = typeof id === 'object' ? id['@id'] : id;\n\n    try {\n      const { data } = await getOne(config)(resourceId, { id });\n      returnData.push(data);\n    } catch (e) {\n      // Catch if one resource fails to load\n      // Otherwise no references will be show if only one is missing\n      // See https://github.com/marmelab/react-admin/issues/5190\n      if (returnFailedResources) {\n        // Return only the ID of the resource\n        returnData.push({ id });\n      } else {\n        // Do nothing. The resource will not appear in the results.\n      }\n    }\n  }\n\n  return { data: returnData };\n};\n\nexport default getManyMethod;\n","import getList from './getList';\n\nconst getManyReferenceMethod = config => async (resourceId, params) => {\n  params.filter = { ...params.filter, [params.target]: params.id };\n  delete params.target;\n  return await getList(config)(resourceId, params);\n};\n\nexport default getManyReferenceMethod;\n","import uploadAllFiles from '../utils/uploadAllFiles';\nimport getServerKeyFromUri from '../utils/getServerKeyFromUri';\n\nconst updateMethod = config => async (resourceId, params) => {\n  const { dataServers, httpClient, jsonContext } = config;\n  const serverKey = getServerKeyFromUri(params.id, dataServers);\n\n  // Upload files, if there are any\n  params.data = await uploadAllFiles(params.data, config);\n\n  await httpClient(params.id, {\n    method: 'PUT',\n    body: JSON.stringify({\n      '@context': jsonContext,\n      ...params.data\n    }),\n    noToken: !serverKey || dataServers[serverKey].authServer !== true\n  });\n\n  return { data: params.data };\n};\n\nexport default updateMethod;\n","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","import jwtDecode from 'jwt-decode';\nimport getServerKeyFromType from './getServerKeyFromType';\nimport urlJoin from 'url-join';\n\nconst fetchUserConfig = async config => {\n  const { dataServers, httpClient } = config;\n  const token = localStorage.getItem('token');\n  const podKey = getServerKeyFromType('pod', dataServers);\n  const authServerKey = getServerKeyFromType('authServer', dataServers);\n\n  // If the user is logged in\n  if (token) {\n    const { webId } = jwtDecode(token);\n    let userData;\n\n    try {\n      const { json } = await httpClient(webId);\n      userData = json;\n    } catch (e) {\n      console.error(e);\n      // If the webId cannot be fetched, assume an invalid token and disconnect the user\n      localStorage.removeItem('token');\n      window.location.reload();\n      return;\n    }\n\n    // If we have a POD server\n    if (podKey) {\n      // Fill the config provided to the data provider\n      // We must modify the config object directly\n      config.dataServers[podKey].name = 'My Pod';\n      config.dataServers[podKey].baseUrl = urlJoin(webId, 'data'); // TODO find POD URI from user profile\n      config.dataServers[podKey].sparqlEndpoint =\n        userData.endpoints?.['void:sparqlEndpoint'] || urlJoin(webId, 'sparql');\n    }\n\n    if (authServerKey) {\n      // Fill the config provided to the data provider\n      // We must modify the config object directly\n      config.dataServers[authServerKey].proxyUrl = userData.endpoints?.proxyUrl;\n    }\n  } else {\n    if (podKey) {\n      // If the user is not logged in, ignore the POD server\n      delete config.dataServers[podKey];\n    }\n  }\n};\n\nexport default fetchUserConfig;\n","const defaultToArray = value => (!value ? undefined : Array.isArray(value) ? value : [value]);\n\nconst fetchVoidEndpoints = async config => {\n  const fetchPromises = Object.entries(config.dataServers)\n    .filter(([key, server]) => server.pod !== true)\n    .map(([key, server]) =>\n      config\n        .httpClient(new URL('/.well-known/void', server.baseUrl), { noToken: !server.authServer })\n        .then(result => ({ key, datasets: result.json['@graph'] }))\n        .catch(e => {\n          if (e.status === 404 || e.status === 401) {\n            return { key, error: e };\n          } else {\n            throw e;\n          }\n        })\n    );\n\n  let results = [];\n\n  try {\n    results = await Promise.all(fetchPromises);\n  } catch (e) {\n    // Do not throw error if no endpoint found\n  }\n\n  for (let result of results) {\n    // Ignore unfetchable endpoints\n    if (result.datasets) {\n      config.dataServers[result.key].containers = config.dataServers[result.key].containers || {};\n      config.dataServers[result.key].blankNodes = config.dataServers[result.key].blankNodes || {};\n\n      for (let dataset of result.datasets) {\n        const datasetServerKey = Object.keys(config.dataServers).find(\n          key => dataset['void:uriSpace'] === config.dataServers[key].baseUrl\n        );\n\n        // If the dataset is not part of a server mapped in the dataServers, ignore it\n        if (datasetServerKey) {\n          // If this is the local dataset, add the base information\n          if (datasetServerKey === result.key) {\n            config.dataServers[result.key].name = config.dataServers[result.key].name || dataset['dc:title'];\n            config.dataServers[result.key].description =\n              config.dataServers[result.key].description || dataset['dc:description'];\n            config.dataServers[result.key].sparqlEndpoint =\n              config.dataServers[result.key].sparqlEndpoint || dataset['void:sparqlEndpoint'];\n          }\n\n          config.dataServers[result.key].containers[datasetServerKey] =\n            config.dataServers[result.key].containers[datasetServerKey] || {};\n\n          for (let partition of dataset['void:classPartition']) {\n            for (let type of defaultToArray(partition['void:class'])) {\n              // Set containers by type\n              const path = partition['void:uriSpace'].replace(dataset['void:uriSpace'], '/');\n              if (config.dataServers[result.key].containers[datasetServerKey][type]) {\n                config.dataServers[result.key].containers[datasetServerKey][type].push(path);\n              } else {\n                config.dataServers[result.key].containers[datasetServerKey][type] = [path];\n              }\n\n              // Set blank nodes by containers\n              const blankNodes = defaultToArray(partition['semapps:blankNodes']);\n              if (blankNodes) {\n                config.dataServers[result.key].blankNodes[partition['void:uriSpace']] = defaultToArray(\n                  partition['semapps:blankNodes']\n                );\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default fetchVoidEndpoints;\n","import createMethod from './methods/create';\nimport deleteMethod from './methods/delete';\nimport deleteManyMethod from './methods/deleteMany';\nimport getDataServersMethod from './methods/getDataServers';\nimport getDataModelsMethod from './methods/getDataModels';\nimport getListMethod from './methods/getList';\nimport getManyMethod from './methods/getMany';\nimport getManyReferenceMethod from './methods/getManyReference';\nimport getOneMethod from './methods/getOne';\nimport updateMethod from './methods/update';\nimport fetchUserConfig from './utils/fetchUserConfig';\nimport fetchVoidEndpoints from './utils/fetchVoidEndpoints';\nimport getServerKeyFromType from './utils/getServerKeyFromType';\n\nconst dataProvider = config => {\n  // TODO verify all data provider config + data models\n  if (!getServerKeyFromType('default', config.dataServers))\n    throw new Error('You must define a default server in your dataServers config');\n\n  if (!config.jsonContext) config.jsonContext = Object.fromEntries(config.ontologies.map(o => [o.prefix, o.url]));\n  if (!config.returnFailedResources) config.returnFailedResources = false;\n\n  const fetchUserConfigPromise = fetchUserConfig(config);\n  const fetchVoidEndpointsPromise = fetchVoidEndpoints(config);\n\n  const waitForVoidEndpoints = method => async (...arg) => {\n    await fetchUserConfigPromise;\n    await fetchVoidEndpointsPromise; // Return immediately if promise is fulfilled\n    return await method(...arg);\n  };\n\n  return {\n    getList: waitForVoidEndpoints(getListMethod(config)),\n    getMany: waitForVoidEndpoints(getManyMethod(config)),\n    getManyReference: waitForVoidEndpoints(getManyReferenceMethod(config)),\n    getOne: waitForVoidEndpoints(getOneMethod(config)),\n    create: waitForVoidEndpoints(createMethod(config)),\n    update: waitForVoidEndpoints(updateMethod(config)),\n    updateMany: () => {\n      throw new Error('updateMany is not implemented yet');\n    },\n    delete: waitForVoidEndpoints(deleteMethod(config)),\n    deleteMany: waitForVoidEndpoints(deleteManyMethod(config)),\n    // Custom methods\n    getDataModels: waitForVoidEndpoints(getDataModelsMethod(config)),\n    getDataServers: waitForVoidEndpoints(getDataServersMethod(config))\n  };\n};\n\nexport default dataProvider;\n","import { fetchUtils } from 'react-admin';\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) options.headers = new Headers();\n\n  switch (options.method) {\n    case 'POST':\n    case 'PATCH':\n    case 'PUT':\n      if (!options.headers.has('Accept')) options.headers.set('Accept', 'application/ld+json');\n      if (!options.headers.has('Content-Type')) options.headers.set('Content-Type', 'application/ld+json');\n      break;\n\n    case 'DELETE':\n      break;\n\n    case 'GET':\n    default:\n      if (!options.headers.has('Accept')) options.headers.set('Accept', 'application/ld+json');\n      break;\n  }\n\n  if (!options.noToken) {\n    const token = localStorage.getItem('token');\n    if (token) options.headers.set('Authorization', `Bearer ${token}`);\n  }\n\n  return fetchUtils.fetchJson(url, options);\n};\n\nexport default httpClient;\n"],"names":["ImageField","record","source","otherProps","React","RaImageField","ReferenceArrayField","Array","isArray","map","i","id","RaReferenceArrayField","defaultProps","addLabel","ReferenceField","_typeof","RaReferenceField","FilterHandler","children","filter","useState","filtered","setFiltered","useEffect","filteredData","r","eq","key","value","includes","newRecord","length","undefined","Children","child","cloneElement","GroupedReferenceHandler","groupReference","groupLabel","groupHeader","filterProperty","data","useQueryWithStore","type","resource","payload","index","group","label","DateTimeInput","props","RaDateTimeInput","format","replace","ReferenceArrayInput","useResourceContext","RaReferenceArrayInput","v","ReferenceInput","RaReferenceInput","useReferenceInputStyles","makeStyles","form","display","input","paddingRight","useHideInputStyles","root","ReificationArrayInput","reificationClass","flexFormClasses","hideInputStyles","ArrayInput","SimpleFormIterator","classes","className","TextInput","initialValue","useDataModel","resourceId","dataProvider","useContext","DataProviderContext","dataModel","setDataModel","getDataModels","then","results","useDataServers","dataServers","setDataServers","getDataServers","context","definition","this","normalize","strArray","resultArray","TypeError","match","first","shift","component","push","str","join","parts","split","arguments","slice","call","module","exports","getServerKeyFromType","Object","keys","find","parseServerKey","serverKey","findContainersWithTypes","types","serverKeys","containers","existingContainers","defaultServerKey","parseServerKeys","forEach","key1","key2","path","containerUri","urlJoin","baseUrl","useContainers","setContainers","findCreateContainerWithTypes","createServerKey","Error","JSON","stringify","useCreateContainer","createContainer","setCreateContainer","create","_dataModel$create","container","entries","_dataModel$create2","server","_dataModel$create3","useDataModels","dataModels","setDataModels","getServerKeyFromUri","uri","startsWith","fetchResource","resourceUri","config","httpClient","jsonContext","authServerKey","_dataServers$authServ","proxyUrl","noProxy","method","headers","Headers","body","URLSearchParams","noToken","json","jsonld","compact","getOneMethod","params","resources","list","_dataModel$list","forceArray","_dataModel$list2","forceArrayItem","isFile","o","rawFile","File","getUploadsContainerUri","uploadsContainer","uploadFile","uploadsContainerUri","Slug","fileName","name","fileExtension","splitFileName","pop","createSlug","lang","response","status","get","uploadAllFiles","property","hasOwnProperty","createMethod","values","fieldsMapping","_dataModel$fieldsMapp","title","set","f","authServer","responseHeaders","getOne","deleteMethod","deleteManyMethod","ids","fetchContainers","containersServers","reduce","acc","fromEntries","fetchPromises","resourceType","Promise","all","total","concat","apply","returnData","item","a","q","some","k","sort","b","field","order","localeCompare","pagination","page","perPage","getEmbedFrame","blankNodes","predicates","embedFrame","blankNode","reverse","accumulator","predicate","CryptoJS","Math","crypto","window","self","globalThis","msCrypto","global","require","err","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","F","obj","subtype","prototype","C","C_lib","lib","Base","extend","overrides","mixIn","init","$super","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","j","ceil","random","nBytes","C_enc","enc","hexChars","bite","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","splice","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","C_algo","HMAC","algo","T","abs","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","c","d","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","hash","H_i","x","s","t","n","HmacMD5","namedNode","DataFactory","quad","variable","generateSparqlVarName","node","md5","buildUnionQuery","queries","triples","query","firstTriple","q2","parentNode","buildBlankNodesQuery","ontologies","nodes","nodeNames","extractNodes","firstQuery","getParentNode","getPredicate","varName","parentVarName","filterPrefix","filterValue","filterOntology","ontology","prefix","url","construct","pre","cur","where","patterns","literal","triple","generator","SparqlGenerator","Generator","reservedFilterKeys","buildSparqlQuery","sparqlJsParams","queryType","template","prefixes","containerWhere","expression","operator","args","resourceWhere","hasSPARQLFilter","sparqlWhere","hasFullTextSearch","sw","variables","toLowerCase","filterKey","filterItem","filterPredicateValue","filterObjectValue","unshift","blankNodesQuery","getBlankNodesFromDataServers","Set","compare","fetchSparqlEndpoints","sparqlQueryPromises","resolve","reject","sparqlQuery","sparqlEndpoint","frame","explicitEmbedOnFraming","omitGraph","compactJson","findContainersWithPaths","paths","getListMethod","_params$filter","_servers","_dataModel$list3","servers","_dataModel$list4","fetchContainer","getManyMethod","returnFailedResources","getManyReferenceMethod","target","getList","updateMethod","InvalidCharacterError","atob","bind","bs","buffer","bc","idx","output","charAt","indexOf","fetchUserConfig","token","localStorage","getItem","podKey","jwtDecode","webId","userData","console","error","removeItem","location","reload","endpoints","_userData$endpoints2","defaultToArray","fetchVoidEndpoints","pod","URL","result","datasets","dataset","datasetServerKey","description","partition","fetchUserConfigPromise","fetchVoidEndpointsPromise","waitForVoidEndpoints","getMany","getManyReference","updateMany","deleteMany","getDataModelsMethod","getDataServersMethod","options","has","fetchUtils","fetchJson"],"mappings":"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"}