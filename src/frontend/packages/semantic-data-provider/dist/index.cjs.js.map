{"version":3,"file":"index.cjs.js","sources":["../src/fields/ReferenceArrayField.js","../src/fields/ReferenceField.js","../src/dataHandling/FilterHandler.js","../src/inputs/ReferenceArrayInput.js","../src/inputs/ReificationArrayInput.js","../src/hooks/useGetExternalLink.js","../src/hooks/useDataModel.js","../src/hooks/useDataServers.js","../../../node_modules/url-join/lib/url-join.js","../src/dataProvider/utils/getServerKeyFromType.js","../src/dataProvider/utils/parseServerKeys.js","../src/dataProvider/utils/findContainersWithTypes.js","../src/dataProvider/utils/findCreateContainerWithTypes.js","../src/dataProvider/utils/getServerKeyFromUri.js","../src/dataProvider/utils/fetchResource.js","../src/dataProvider/methods/getOne.js","../src/dataProvider/utils/uploadAllFiles.js","../src/dataProvider/methods/create.js","../src/dataProvider/methods/delete.js","../src/dataProvider/methods/deleteMany.js","../src/dataProvider/methods/getDataServers.js","../src/dataProvider/methods/getDataModels.js","../src/dataProvider/utils/fetchContainers.js","../node_modules/isobject/index.js","../src/dataProvider/utils/getEmbedFrame.js","../src/dataProvider/utils/resolvePrefix.js","../src/dataProvider/utils/buildBaseQuery.js","../../../node_modules/crypto-js/core.js","../../../node_modules/crypto-js/md5.js","../src/dataProvider/utils/buildBlankNodesQuery.js","../src/dataProvider/utils/buildSparqlQuery.js","../src/dataProvider/utils/getBlankNodesFromDataServers.js","../src/dataProvider/utils/fetchSparqlEndpoints.js","../src/dataProvider/utils/findContainersWithPath.js","../src/dataProvider/methods/getList.js","../src/dataProvider/methods/getMany.js","../src/dataProvider/methods/getManyReference.js","../src/dataProvider/methods/update.js","../../../node_modules/jwt-decode/build/jwt-decode.esm.js","../src/dataProvider/utils/fetchUserConfig.js","../src/dataProvider/utils/fetchVoidEndpoints.js","../src/inputs/DateTimeInput.js","../src/dataHandling/GroupedReferenceHandler.js","../src/fields/ImageField.js","../src/inputs/ReferenceInput.js","../src/dataProvider/dataProvider.js","../src/httpClient.js","../src/hooks/useContainers.js","../src/hooks/useCreateContainer.js","../src/hooks/useDataModels.js"],"sourcesContent":["import React from 'react';\nimport { ReferenceArrayField as RaReferenceArrayField } from 'react-admin';\n\nconst ReferenceArrayField = ({ record, source, ...otherProps }) => {\n  if (record?.[source]) {\n    if (!Array.isArray(record[source])) {\n      record[source] = [record[source]];\n    }\n    record[source] = record[source].map(i => i['@id'] || i.id || i);\n  }\n  return <RaReferenceArrayField record={record} source={source} {...otherProps} />;\n};\n\nReferenceArrayField.defaultProps = {\n  addLabel: true\n};\n\nexport default ReferenceArrayField;\n","import React from 'react';\nimport { ReferenceField as RaReferenceField } from 'react-admin';\n\nconst ReferenceField = ({ record, source, ...otherProps }) => {\n  if (record[source]) {\n    if (typeof record[source] === 'object') {\n      record[source] = record[source]['@id'] || record[source].id;\n    }\n  }\n  return <RaReferenceField record={record} source={source} {...otherProps} />;\n};\n\nReferenceField.defaultProps = {\n  addLabel: true\n};\n\nexport default ReferenceField;\n","import React, { useState, useEffect } from 'react';\n\n/**\n * @example\n * <Show>\n *   <FilterHandler\n *     source=\"property\" // ex pair:organizationOfMembership\n *     filter={{\n *       'propertyToFilter':'value'\n *     }} // ex {{'pair:membershipRole':'http://localhost:3000/membership-roles/role-1'}}\n *     >\n *     <SingleFieldList>\n *    </SingleFieldList>\n *   </FilterHandler>\n * </Show>\n */\n\nconst FilterHandler = ({ children, record, filter, source, ...otherProps }) => {\n  const [filtered, setFiltered] = useState();\n  useEffect(() => {\n    if (record && source && Array.isArray(record?.[source])) {\n      const filteredData = record?.[source].filter(r => {\n        let eq = true;\n        for (const key in filter) {\n          const value = r[key];\n          if (Array.isArray(value)) {\n            if (!value.includes(filter[key])) {\n              eq = false;\n            }\n          } else {\n            if (value !== filter[key]) {\n              eq = false;\n            }\n          }\n        }\n        return eq;\n      });\n      let newRecord = {\n        ...record\n      };\n      //undefined setted if no data to obtain no render in RightLabel or equivalent\n      newRecord[source] = filteredData.length > 0 ? filteredData : undefined;\n      setFiltered(newRecord);\n    }\n  }, [record, source, filter]);\n\n  return (\n    <>\n      {React.Children.map(children, (child, i) => {\n        return React.cloneElement(child, {\n          ...otherProps,\n          record: filtered,\n          addLabel: true,\n          source\n        });\n      })}\n    </>\n  );\n};\nexport default FilterHandler;\n","import React from 'react';\nimport { ReferenceArrayInput as RaReferenceArrayInput, useResourceContext } from 'react-admin';\n\nconst ReferenceArrayInput = props => {\n  const resource = useResourceContext({});\n  return (\n    <RaReferenceArrayInput\n      {...props}\n      resource={resource}\n      format={value => {\n        // If there is no value, return immediately\n        if (!value) return value;\n        // if the linked field value is not an array, turns it into an array.\n        // Necessary as JSON-LD are sometimes arrays, sometimes not (when there is one value)\n        // and the ReferenceArrayInput component only accept arrays\n        if (!Array.isArray(value)) value = [value];\n        // If a format prop was defined, apply it to the array\n        if (props.format) value = props.format(value);\n        // If the values are objects with @id field, turn it to a simple string\n        return value.map(v => (typeof v === 'object' ? v.id || v['@id'] : v));\n      }}\n    />\n  );\n};\n\nexport default ReferenceArrayInput;\n","import React, { useEffect, useState } from 'react';\nimport { ArrayInput, SimpleFormIterator, TextInput } from 'react-admin';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useReferenceInputStyles = makeStyles({\n  form: {\n    display: 'flex'\n  },\n  input: {\n    paddingRight: '20px'\n  }\n});\n\nconst useHideInputStyles = makeStyles({\n  root: {\n    display: 'none'\n  }\n});\n\nconst ReificationArrayInput = props => {\n  const { reificationClass, children, ...otherProps } = props;\n  const flexFormClasses = useReferenceInputStyles();\n  const hideInputStyles = useHideInputStyles();\n\n  return (\n    <ArrayInput {...otherProps}>\n      <SimpleFormIterator classes={{ form: flexFormClasses.form }}>\n        {React.Children.map(props.children, (child, i) => {\n          return React.cloneElement(child, {\n            className: flexFormClasses.input\n          });\n        })}\n        <TextInput className={hideInputStyles.root} source=\"type\" initialValue={reificationClass} />\n      </SimpleFormIterator>\n    </ArrayInput>\n  );\n};\n\nexport default ReificationArrayInput;\n","import { useCallback, useMemo, useContext } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst compute = (externalLinks, record) =>\n  typeof externalLinks === 'function' ? externalLinks(record) : externalLinks;\nconst isURL = url => typeof url === 'string' && url.startsWith('http');\n\nconst useGetExternalLink = componentExternalLinks => {\n  // Since the externalLinks config is defined only locally, we don't need to wait for VOID endpoints fetching\n  const dataProvider = useContext(DataProviderContext);\n  const dataServers = dataProvider.getLocalDataServers();\n\n  const serversExternalLinks = useMemo(() => {\n    if (dataServers) {\n      return Object.fromEntries(\n        Object.values(dataServers).map(server => {\n          // If externalLinks is not defined in the data server, use external links for non-default servers\n          const externalLinks = server.externalLinks !== undefined ? server.externalLinks : !server.default;\n          return [server.baseUrl, externalLinks];\n        })\n      );\n    }\n  }, [dataServers]);\n\n  return useCallback(\n    record => {\n      const computedComponentExternalLinks = compute(componentExternalLinks, record);\n      // If the component explicitly asks not to display as external links, use an internal link\n      if (computedComponentExternalLinks === false) return false;\n\n      if (!record?.id) return false;\n\n      const serverBaseUrl = Object.keys(serversExternalLinks).find(baseUrl => record?.id.startsWith(baseUrl));\n      // If no matching data servers could be found, assume we have an internal link\n      if (!serverBaseUrl) return false;\n\n      const computedServerExternalLinks = compute(serversExternalLinks[serverBaseUrl], record);\n      // If the data server explicitly asks not to display as external links, use an internal link\n      if (computedServerExternalLinks === false) return false;\n\n      if (isURL(computedComponentExternalLinks)) {\n        return computedComponentExternalLinks;\n      } else if (isURL(computedServerExternalLinks)) {\n        return computedServerExternalLinks;\n      } else {\n        return record.id;\n      }\n    },\n    [serversExternalLinks, componentExternalLinks]\n  );\n};\n\nexport default useGetExternalLink;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataModel = resourceId => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataModel, setDataModel] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataModels().then(results => setDataModel(results[resourceId]));\n  }, [dataProvider, resourceId, setDataModel]);\n\n  return dataModel;\n};\n\nexport default useDataModel;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataServers = () => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataServers, setDataServers] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataServers().then(results => setDataServers(results));\n  }, [dataProvider, setDataServers]);\n\n  return dataServers;\n};\n\nexport default useDataServers;\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n    if (strArray.length === 0) { return ''; }\n\n    if (typeof strArray[0] !== 'string') {\n      throw new TypeError('Url must be a string. Received ' + strArray[0]);\n    }\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","const getServerKeyFromType = (type, dataServers) => {\n  return Object.keys(dataServers).find(key => {\n    return dataServers[key][type];\n  });\n};\n\nexport default getServerKeyFromType;\n","import getServerKeyFromType from './getServerKeyFromType';\n\nconst parseServerKey = (serverKey, dataServers) => {\n  switch (serverKey) {\n    case '@default':\n      return getServerKeyFromType('default', dataServers);\n    case '@pod':\n      return getServerKeyFromType('pod', dataServers);\n    case '@authServer':\n      return getServerKeyFromType('authServer', dataServers);\n    default:\n      return serverKey;\n  }\n};\n\n// Return the list of servers keys in an array\n// parsing keywords like @all, @default, @pod and @authServer\nconst parseServerKeys = (serverKeys, dataServers) => {\n  if (Array.isArray(serverKeys)) {\n    if (serverKeys.includes('@all')) {\n      return Object.keys(dataServers);\n    } else {\n      return serverKeys.map(serverKey => parseServerKey(serverKey, dataServers));\n    }\n  } else if (typeof serverKeys === 'string') {\n    if (serverKeys === '@all') {\n      return Object.keys(dataServers);\n    } else if (serverKeys === '@remote') {\n      const defaultServerKey = getServerKeyFromType('default', dataServers);\n      return Object.keys(dataServers).filter(serverKey => serverKey !== defaultServerKey);\n    } else {\n      return [parseServerKey(serverKeys, dataServers)];\n    }\n  } else {\n    // If server key is empty\n    return false;\n  }\n};\n\nexport default parseServerKeys;\n","import urlJoin from 'url-join';\nimport parseServerKeys from './parseServerKeys';\n\nconst findContainersWithTypes = (types, serverKeys, dataServers) => {\n  let containers = {};\n  let existingContainers = [];\n\n  serverKeys = parseServerKeys(serverKeys, dataServers);\n\n  Object.keys(dataServers).forEach(key1 => {\n    Object.keys(dataServers[key1].containers).forEach(key2 => {\n      if (!serverKeys || serverKeys.includes(key2)) {\n        Object.keys(dataServers[key1].containers[key2]).forEach(type => {\n          if (types.includes(type)) {\n            dataServers[key1].containers[key2][type].map(path => {\n              const containerUri = urlJoin(dataServers[key2].baseUrl, path);\n\n              // Avoid returning the same container several times\n              if (!existingContainers.includes(containerUri)) {\n                existingContainers.push(containerUri);\n\n                if (!containers[key1]) containers[key1] = [];\n                containers[key1].push(containerUri);\n              }\n            });\n          }\n        });\n      }\n    });\n  });\n  return containers;\n};\n\nexport default findContainersWithTypes;\n","import urlJoin from 'url-join';\n\nconst findCreateContainerWithTypes = (types, createServerKey, dataServers) => {\n  let containers = [];\n\n  if (Object.keys(dataServers[createServerKey].containers[createServerKey]).length > 0) {\n    Object.keys(dataServers[createServerKey].containers[createServerKey]).forEach(type => {\n      if (types.includes(type)) {\n        dataServers[createServerKey].containers[createServerKey][type].map(path => {\n          const containerUri = urlJoin(dataServers[createServerKey].baseUrl, path);\n          if (!containers.includes(containerUri)) {\n            containers.push(containerUri);\n          }\n        });\n      }\n    });\n  }\n\n  if (containers.length === 0) {\n    throw new Error(\n      `No container found matching with types ${JSON.stringify(\n        types\n      )}. You can set explicitely the create.container property of the resource.`\n    );\n  } else if (containers.length > 1) {\n    throw new Error(\n      `More than one container found matching with types ${JSON.stringify(\n        types\n      )}. You must set the create.server or create.container property for the resource.`\n    );\n  }\n\n  return containers[0];\n};\n\nexport default findCreateContainerWithTypes;\n","// Return the first server matching with the baseUrl\nconst getServerKeyFromUri = (uri, dataServers) => {\n  return Object.keys(dataServers).find(key => {\n    return uri.startsWith(dataServers[key].baseUrl);\n  });\n};\n\nexport default getServerKeyFromUri;\n","import getServerKeyFromType from './getServerKeyFromType';\nimport getServerKeyFromUri from './getServerKeyFromUri';\nimport jsonld from 'jsonld';\n\nconst fetchResource = async (resourceUri, config) => {\n  const { dataServers, httpClient, jsonContext } = config;\n\n  const authServerKey = getServerKeyFromType('authServer', dataServers);\n  const serverKey = getServerKeyFromUri(resourceUri, dataServers);\n\n  // Fetch through proxy server if it is available\n  let { json: data } =\n    serverKey !== authServerKey && dataServers[authServerKey]?.proxyUrl && dataServers[serverKey]?.noProxy !== true\n      ? await httpClient(dataServers[authServerKey].proxyUrl, {\n          method: 'POST',\n          headers: new Headers({ 'Content-Type': 'application/x-www-form-urlencoded' }),\n          body: new URLSearchParams({ id: resourceUri })\n        })\n      : await httpClient(resourceUri, {\n          noToken: serverKey !== authServerKey\n        });\n\n  data.id = data.id || data['@id'];\n\n  // We compact only if the context is different between the frontend and the middleware\n  // TODO deep compare if the context is an object\n  if (data['@context'] !== jsonContext) {\n    data = await jsonld.compact(data, jsonContext);\n  }\n\n  return data;\n};\n\nexport default fetchResource;\n","import fetchResource from '../utils/fetchResource';\n\nconst getOneMethod = config => async (resourceId, params) => {\n  const { resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  const data = await fetchResource(params.id, config);\n\n  // Transform single value into array if forceArray is set\n  if (dataModel.list?.forceArray) {\n    for (const forceArrayItem of dataModel.list?.forceArray) {\n      if (data[forceArrayItem] && !Array.isArray(data[forceArrayItem])) {\n        data[forceArrayItem] = [data[forceArrayItem]];\n      }\n    }\n  }\n\n  // TODO activate defaultFetchPlan option\n  // if (dataModel.list?.defaultFetchPlan) {\n  //   for (const node of dataModel.list?.defaultFetchPlan) {\n  //     if (\n  //       data[node] &&\n  //       typeof data[node] === 'string' &&\n  //       data[node].startsWith('http')\n  //     ) {\n  //       try {\n  //         const dataToEmbed = await fetchResource(data[node], config);\n  //         delete dataToEmbed['@context'];\n  //         data[node] = dataToEmbed;\n  //       } catch (e) {\n  //         // Ignore errors (this may happen if user does not have rights to see the resource)\n  //       }\n  //     }\n  //   }\n  // }\n\n  return { data };\n};\n\nexport default getOneMethod;\n","import createSlug from 'speakingurl';\nimport urlJoin from 'url-join';\n\nexport const getSlugWithExtension = fileName => {\n  let fileExtension = '';\n  let splitFileName = fileName.split('.');\n  if (splitFileName.length > 1) {\n    fileExtension = splitFileName.pop();\n    fileName = splitFileName.join('.');\n  }\n  return createSlug(fileName, { lang: 'fr' }) + '.' + fileExtension;\n};\n\nexport const isFile = o => o && o.rawFile && o.rawFile instanceof File;\n\nconst getUploadsContainerUri = config => {\n  const serverKey = Object.keys(config.dataServers).find(key => config.dataServers[key].uploadsContainer);\n  if (serverKey) {\n    return urlJoin(config.dataServers[serverKey].baseUrl, config.dataServers[serverKey].uploadsContainer);\n  }\n};\n\nconst uploadFile = async (rawFile, config) => {\n  const uploadsContainerUri = getUploadsContainerUri(config);\n  if (!uploadsContainerUri) throw new Error(\"You must define an uploadsContainer in one of the server's configuration\");\n\n  const response = await config.httpClient(uploadsContainerUri, {\n    method: 'POST',\n    body: rawFile,\n    headers: new Headers({\n      // We must sluggify the file name, because we can't use non-ASCII characters in the header\n      // However we keep the extension apart (if it exists) so that it is not replaced with a -\n      // TODO let the middleware guess the extension based on the content type\n      Slug: getSlugWithExtension(rawFile.name),\n      'Content-Type': rawFile.type\n    })\n  });\n\n  if (response.status === 201) {\n    return response.headers.get('Location');\n  }\n};\n\n/*\n * Look for raw files in the record data.\n * If there are any, upload them and replace the file by its URL.\n */\nconst uploadAllFiles = async (record, config) => {\n  for (let property in record) {\n    if (record.hasOwnProperty(property)) {\n      if (Array.isArray(record[property])) {\n        for (let i = 0; i < record[property].length; i++) {\n          if (isFile(record[property][i])) {\n            record[property][i] = await uploadFile(record[property][i].rawFile, config);\n          }\n        }\n      } else {\n        if (isFile(record[property])) {\n          record[property] = await uploadFile(record[property].rawFile, config);\n        }\n      }\n    }\n  }\n  return record;\n};\n\nexport default uploadAllFiles;\n","import urlJoin from 'url-join';\nimport getOne from './getOne';\nimport uploadAllFiles from '../utils/uploadAllFiles';\nimport findContainersWithTypes from '../utils/findContainersWithTypes';\n\nconst createMethod = config => async (resourceId, params) => {\n  const { dataServers, resources, httpClient, jsonContext } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  const headers = new Headers();\n\n  let containerUri, serverKey;\n  if (dataModel.create?.container) {\n    serverKey = Object.keys(dataModel.create.container)[0];\n    containerUri = urlJoin(dataServers[serverKey].baseUrl, Object.values(dataModel.create.container)[0]);\n  } else {\n    serverKey = dataModel.create?.server || Object.keys(dataServers).find(key => dataServers[key].default === true);\n    if (!serverKey) throw new Error('You must define a server for the creation, or a container, or a default server');\n\n    const containers = findContainersWithTypes(dataModel.types, [serverKey], dataServers);\n    // Extract the containerUri from the results (and ensure there is only one)\n    const serverKeys = Object.keys(containers);\n\n    if (!serverKeys || serverKeys.length === 0)\n      throw new Error(`No container with types ${JSON.stringify(dataModel.types)} found on server ${serverKey}`);\n    if (serverKeys.length > 1 || containers[serverKeys[0]].length > 1)\n      throw new Error(\n        `More than one container detected with types ${JSON.stringify(dataModel.types)} on server ${serverKey}`\n      );\n    containerUri = containers[serverKeys[0]][0];\n  }\n\n  if (params.data) {\n    if (dataModel.fieldsMapping?.title) {\n      if (Array.isArray(dataModel.fieldsMapping.title)) {\n        headers.set('Slug', dataModel.fieldsMapping.title.map(f => params.data[f]).join(' '));\n      } else {\n        headers.set('Slug', params.data[dataModel.fieldsMapping.title]);\n      }\n    }\n\n    // Upload files, if there are any\n    params.data = await uploadAllFiles(params.data, config);\n\n    const { headers: responseHeaders } = await httpClient(containerUri, {\n      method: 'POST',\n      headers,\n      body: JSON.stringify({\n        '@context': jsonContext,\n        '@type': dataModel.types,\n        ...params.data\n      }),\n      noToken: dataServers[serverKey].authServer !== true\n    });\n\n    // Retrieve newly-created resource\n    const resourceUri = responseHeaders.get('Location');\n    return await getOne(config)(resourceId, { id: resourceUri });\n  } else if (params.id) {\n    headers.set('Content-Type', 'application/sparql-update');\n\n    await httpClient(containerUri, {\n      method: 'PATCH',\n      headers,\n      body: `\n        PREFIX ldp: <http://www.w3.org/ns/ldp#>\n        INSERT DATA { <${containerUri}> ldp:contains <${params.id}>. };\n      `,\n      noToken: dataServers[serverKey].authServer !== true\n    });\n\n    // Create must return the new data, so get them from the remote URI\n    return await getOne(config)(resourceId, { id: params.id });\n  }\n};\n\nexport default createMethod;\n","import getServerKeyFromUri from '../utils/getServerKeyFromUri';\n\nconst deleteMethod = config => async (resourceId, params) => {\n  const { dataServers, httpClient } = config;\n  const serverKey = getServerKeyFromUri(params.id, dataServers);\n\n  await httpClient(params.id, {\n    method: 'DELETE',\n    noToken: !serverKey || dataServers[serverKey].authServer !== true\n  });\n\n  return { data: { id: params.id } };\n};\n\nexport default deleteMethod;\n","const deleteManyMethod = config => async (resourceId, params) => {\n  const { httpClient } = config;\n  let ids = [];\n\n  for (let id of params.ids) {\n    try {\n      await httpClient(id, {\n        method: 'DELETE'\n      });\n      ids.push(id);\n    } catch (e) {\n      // Do nothing if we fail to delete a resource\n    }\n  }\n\n  return { data: ids };\n};\n\nexport default deleteManyMethod;\n","const getDataServers = config => () => {\n  return config.dataServers;\n};\n\nexport default getDataServers;\n","const getDataModels = config => () => {\n  return config.resources;\n};\n\nexport default getDataModels;\n","import jsonld from 'jsonld';\nimport isobject from 'isobject';\n\nexport const isType = (type, resource) => {\n  const resourceType = resource.type || resource['@type'];\n  return Array.isArray(resourceType) ? resourceType.includes(type) : resourceType === type;\n};\n\nconst fetchContainers = async (containers, resourceId, params, config) => {\n  const { dataServers, httpClient, jsonContext } = config;\n\n  // Transform in an containerUri:serverKey object\n  const containersServers = Object.keys(containers).reduce(\n    (acc, serverKey) => ({\n      ...acc,\n      ...Object.fromEntries(containers[serverKey].map(containerUri => [containerUri, serverKey]))\n    }),\n    {}\n  );\n\n  const fetchPromises = Object.keys(containersServers).map(containerUri =>\n    httpClient(containerUri, {\n      noToken: !containersServers[containerUri] || dataServers[containersServers[containerUri]].authServer !== true\n    })\n      .then(({ json }) => {\n        // If container's context is different, compact it to have an uniform result\n        // TODO deep compare if the context is an object\n        if (json['@context'] !== jsonContext) {\n          return jsonld.compact(json, jsonContext);\n        } else {\n          return json;\n        }\n      })\n      .then(json => {\n        if (isType('ldp:Container', json)) {\n          return json['ldp:contains'];\n        } else {\n          throw new Error(containerUri + ' is not a LDP container');\n        }\n      })\n  );\n\n  // Fetch simultaneously all containers\n  let results = await Promise.all(fetchPromises);\n\n  if (results.length === 0) {\n    return { data: [], total: 0 };\n  } else {\n    // Merge all results in one array\n    results = [].concat.apply(...results);\n\n    let returnData = results.map(item => {\n      item.id = item.id || item['@id'];\n      return item;\n    });\n\n    // Apply filter to results\n    if (params.filter) {\n      // For SPARQL queries, we use \"a\" to filter types, but in containers it must be \"type\"\n      if (params.filter.a) {\n        params.filter.type = params.filter.a;\n        delete params.filter.a;\n      }\n\n      if (Object.keys(params.filter).length > 0) {\n        returnData = returnData.filter(resource => {\n          return Object.entries(params.filter).some(([k, v]) => {\n            if (k == 'q') {\n              // if fiter is q, all properties have to be checked\n              return Object.entries(resource).some(([kr, vr]) => {\n                if (!isobject(vr)) {\n                  return Array.isArray(vr) ? vr.some(va=>va.includes(v)) : vr.includes(v)\n                } else {\n                  return false;\n                }\n              })\n            } else {\n              return Array.isArray(resource[k]) ? resource[k].includes(v) : resource[k].includes(v)\n            }\n          })\n        });\n      }\n    }\n\n    if (params.sort) {\n      returnData = returnData.sort((a, b) => {\n        if (a[params.sort.field] && b[params.sort.field]) {\n          if (params.sort.order === 'ASC') {\n            return a[params.sort.field].localeCompare(b[params.sort.field]);\n          } else {\n            return b[params.sort.field].localeCompare(a[params.sort.field]);\n          }\n        } else {\n          return true;\n        }\n      });\n    }\n    if (params.pagination) {\n      returnData = returnData.slice(\n        (params.pagination.page - 1) * params.pagination.perPage,\n        params.pagination.page * params.pagination.perPage\n      );\n    }\n\n    return { data: returnData, total: results.length };\n  }\n};\n\nexport default fetchContainers;\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nexport default function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","const getEmbedFrame = blankNodes => {\n  let embedFrame = {},\n    predicates;\n  if (blankNodes) {\n    for (let blankNode of blankNodes) {\n      if (blankNode.includes('/')) {\n        predicates = blankNode.split('/').reverse();\n      } else {\n        predicates = [blankNode];\n      }\n      embedFrame = {\n        ...embedFrame,\n        ...predicates.reduce(\n          (accumulator, predicate) => ({\n            [predicate]: {\n              '@embed': '@last',\n              ...accumulator\n            }\n          }),\n          {}\n        )\n      };\n    }\n    return embedFrame;\n  }\n};\n\nexport default getEmbedFrame;\n","const resolvePrefix = (item, ontologies) => {\n  if (item.startsWith('http://') || item.startsWith('https://')) {\n    // Already resolved, return the URI\n    return item;\n  } else if (item === 'a') {\n    // Special case\n    return 'http://www.w3.org/1999/02/22-rdf-syntax-ns#type';\n  } else {\n    const [prefix, value] = item.split(':');\n    if (value) {\n      const ontology = ontologies.find(ontology => ontology.prefix === prefix);\n      if (ontology) {\n        return ontology.url + value;\n      } else {\n        throw new Error('No ontology found with prefix ' + prefix);\n      }\n    } else {\n      throw new Error(`The value \"${item}\" is not correct. It must include a prefix or be a full URI.`);\n    }\n  }\n};\n\nexport default resolvePrefix;\n","import { namedNode, triple, variable } from '@rdfjs/data-model';\nimport resolvePrefix from './resolvePrefix';\n\n// We need to always include the type or React-Admin will not work properly\nconst typeQuery = triple(\n  variable('s1'),\n  namedNode('http://www.w3.org/1999/02/22-rdf-syntax-ns#type'),\n  variable('type')\n);\n\nconst buildBaseQuery = (predicates, ontologies) => {\n  let baseTriples;\n  if (predicates) {\n    baseTriples = predicates.map((predicate, i) =>\n      triple(variable('s1'), namedNode(resolvePrefix(predicate, ontologies)), variable('o' + (i + 1)))\n    );\n    return {\n      construct: [typeQuery, ...baseTriples],\n      where: [typeQuery, ...baseTriples.map(triple => ({ type: 'optional', patterns: [triple] }))]\n    };\n  } else {\n    baseTriples = [triple(variable('s1'), variable('p1'), variable('o1'))];\n    return {\n      construct: baseTriples,\n      where: baseTriples\n    };\n  }\n};\n\nexport default buildBaseQuery;\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","import md5 from 'crypto-js/md5';\nimport { namedNode, triple, variable } from '@rdfjs/data-model';\nimport resolvePrefix from './resolvePrefix';\n\n// Transform ['ont:predicate1/ont:predicate2'] to ['ont:predicate1', 'ont:predicate1/ont:predicate2']\nconst extractNodes = blankNodes => {\n  let nodes = [];\n  if (blankNodes) {\n    for (let predicate of blankNodes) {\n      if (predicate.includes('/')) {\n        const nodeNames = predicate.split('/');\n        for (let i = 1; i <= nodeNames.length; i++) {\n          nodes.push(nodeNames.slice(0, i).join('/'));\n        }\n      } else {\n        nodes.push(predicate);\n      }\n    }\n  }\n  return nodes;\n};\n\nconst generateSparqlVarName = node => md5(node);\n\nconst getParentNode = node => node.includes('/') && node.split('/')[0];\n\nconst getPredicate = node => (node.includes('/') ? node.split('/')[1] : node);\n\nconst buildUnionQuery = queries =>\n  queries.map(q => {\n    let triples = q.query;\n    const firstTriple = queries.find(q2 => q.parentNode === q2.node);\n    if (firstTriple !== undefined) {\n      triples = triples.concat(firstTriple.query[0]);\n    }\n    return {\n      type: 'bgp',\n      triples\n    };\n  });\n\nconst buildBlankNodesQuery = (blankNodes, baseQuery, ontologies) => {\n  let queries = [];\n  const nodes = extractNodes(blankNodes);\n\n  if (nodes && ontologies && ontologies.length > 0) {\n    for (let node of nodes) {\n      const parentNode = getParentNode(node);\n      const predicate = getPredicate(node);\n      const varName = generateSparqlVarName(node);\n      const parentVarName = parentNode ? generateSparqlVarName(parentNode) : '1';\n\n      const query = [\n        triple(variable('s' + parentVarName), namedNode(resolvePrefix(predicate, ontologies)), variable('s' + varName)),\n        triple(variable('s' + varName), variable('p' + varName), variable('o' + varName))\n      ];\n\n      queries.push({\n        node,\n        parentNode,\n        query,\n        filter: '' // `FILTER(isBLANK(?s${varName})) .`\n      });\n    }\n\n    return {\n      construct: queries.length > 0 ? queries.map(q => q.query).reduce((pre, cur) => pre.concat(cur)) : null,\n      where: {\n        type: 'union',\n        patterns: [baseQuery.where, ...buildUnionQuery(queries)]\n      }\n    };\n  } else {\n    return {\n      construct: '',\n      where: ''\n    };\n  }\n};\n\nexport default buildBlankNodesQuery;\n","import DataFactory from '@rdfjs/data-model';\nimport buildBaseQuery from './buildBaseQuery';\nimport buildBlankNodesQuery from './buildBlankNodesQuery';\nimport resolvePrefix from './resolvePrefix';\nconst { literal, namedNode, triple, variable } = DataFactory;\n\nconst SparqlGenerator = require('sparqljs').Generator;\nconst generator = new SparqlGenerator({\n  /* prefixes, baseIRI, factory, sparqlStar */\n});\n\nconst reservedFilterKeys = ['q', 'sparqlWhere', 'blankNodes', '_servers', '_predicates'];\n\nconst buildSparqlQuery = ({ containers, params: { filter }, blankNodes, predicates, ontologies }) => {\n  const baseQuery = buildBaseQuery(predicates, ontologies);\n\n  let sparqlJsParams = {\n    queryType: 'CONSTRUCT',\n    template: baseQuery.construct,\n    where: [],\n    type: 'query',\n    prefixes: Object.fromEntries(ontologies.map(ontology => [ontology.prefix, ontology.url]))\n  };\n\n  let containerWhere = [\n    {\n      type: 'values',\n      values: containers.map(containerUri => ({ '?containerUri': namedNode(containerUri) }))\n    },\n    triple(variable('containerUri'), namedNode('http://www.w3.org/ns/ldp#contains'), variable('s1')),\n    {\n      type: 'filter',\n      expression: {\n        type: 'operation',\n        operator: 'isiri',\n        args: [variable('s1')]\n      }\n    }\n  ];\n\n  let resourceWhere = [];\n\n  if (filter && Object.keys(filter).length > 0) {\n    const hasSPARQLFilter = filter.sparqlWhere && Object.keys(filter.sparqlWhere).length > 0;\n    const hasFullTextSearch = filter.q && filter.q.length > 0;\n\n    if (hasSPARQLFilter) {\n      /* \n        Example of usage :\n        {\n          \"sparqlWhere\": {\n            \"type\": \"bgp\",\n            \"triples\": [{\n              \"subject\": {\"termType\": \"Variable\", \"value\": \"s1\"},\n              \"predicate\": {\"termType\": \"NameNode\", \"value\": \"http://virtual-assembly.org/ontologies/pair#label\"},\n              \"object\": {\"termType\": \"Literal\", \"value\": \"My Organization\"}\n            }]\n          }\n        }\n      */\n      // initialize array in case of single value :\n      [].concat(filter.sparqlWhere).forEach(sw => {\n        resourceWhere.push(sw);\n      });\n    }\n\n    if (hasFullTextSearch) {\n      resourceWhere.push({\n        type: 'group',\n        patterns: [\n          {\n            queryType: 'SELECT',\n            variables: [variable('s1')],\n            where: [\n              triple(variable('s1'), variable('p1'), variable('o1')),\n              {\n                type: 'filter',\n                expression: {\n                  type: 'operation',\n                  operator: 'isliteral',\n                  args: [variable('o1')]\n                }\n              },\n              {\n                type: 'filter',\n                expression: {\n                  type: 'operation',\n                  operator: 'regex',\n                  args: [\n                    {\n                      type: 'operation',\n                      operator: 'lcase',\n                      args: [\n                        {\n                          type: 'operation',\n                          operator: 'str',\n                          args: [variable('o1')]\n                        }\n                      ]\n                    },\n                    literal(filter.q.toLowerCase(), '', namedNode('http://www.w3.org/2001/XMLSchema#string'))\n                  ]\n                }\n              }\n            ],\n            type: 'query'\n          }\n        ]\n      });\n    }\n\n    // Other filters\n    // SPARQL keyword a = filter based on the class of a resource (example => 'a': 'pair:OrganizationType')\n    // Other filters are based on a value (example => 'petr:hasAudience': 'http://localhost:3000/audiences/tout-public')\n    Object.entries(filter).forEach(([predicate, object]) => {\n      if (!reservedFilterKeys.includes(predicate)) {\n        resourceWhere.unshift(\n          triple(\n            variable('s1'),\n            namedNode(resolvePrefix(predicate, ontologies)),\n            namedNode(resolvePrefix(object, ontologies))\n          )\n        );\n      }\n    });\n  }\n\n  // Blank nodes\n  const blankNodesQuery = buildBlankNodesQuery(blankNodes, baseQuery, ontologies);\n  if (blankNodesQuery && blankNodesQuery.construct) {\n    resourceWhere = resourceWhere.concat(blankNodesQuery.where);\n    sparqlJsParams.template = sparqlJsParams.template.concat(blankNodesQuery.construct);\n  } else {\n    resourceWhere.push(baseQuery.where);\n  }\n\n  sparqlJsParams.where.push(\n    {\n      type: 'union',\n      patterns: [\n        containerWhere,\n        {\n          type: 'graph',\n          name: namedNode('http://semapps.org/mirror'),\n          patterns: containerWhere\n        }\n      ]\n    },\n    {\n      type: 'union',\n      patterns: [\n        resourceWhere,\n        {\n          type: 'graph',\n          name: namedNode('http://semapps.org/mirror'),\n          patterns: resourceWhere\n        }\n      ]\n    }\n  );\n\n  return generator.stringify(sparqlJsParams);\n};\n\nexport default buildSparqlQuery;\n","// Based on the dataServers config, returns the blank nodes for the given containers\nconst getBlankNodesFromDataServers = (containers, dataServers) => {\n  const blankNodes = [];\n  for (let serverKey of Object.keys(dataServers)) {\n    if (dataServers[serverKey].blankNodes) {\n      for (let containerUri of Object.keys(dataServers[serverKey].blankNodes)) {\n        if (containers.includes(containerUri)) {\n          blankNodes.push(...dataServers[serverKey].blankNodes[containerUri]);\n        }\n      }\n    }\n  }\n  // Remove duplicates\n  return [...new Set(blankNodes)];\n};\n\nexport default getBlankNodesFromDataServers;\n","import getEmbedFrame from './getEmbedFrame';\nimport buildSparqlQuery from './buildSparqlQuery';\nimport getBlankNodesFromDataServers from './getBlankNodesFromDataServers';\nimport jsonld from 'jsonld';\n\nconst compare = (a, b) => {\n  switch (typeof a) {\n    case 'string':\n      return a.localeCompare(b);\n    case 'number':\n    case 'bigint':\n      return a - b;\n    default:\n      return 0;\n  }\n};\n\nconst fetchSparqlEndpoints = async (containers, resourceId, params, config) => {\n  const { dataServers, resources, httpClient, jsonContext, ontologies } = config;\n  const dataModel = resources[resourceId];\n\n  const sparqlQueryPromises = Object.keys(containers).map(\n    serverKey =>\n      new Promise((resolve, reject) => {\n        const blankNodes =\n          params.filter?.blankNodes ||\n          dataModel.list?.blankNodes ||\n          getBlankNodesFromDataServers(containers[serverKey], dataServers);\n\n        const predicates = params.filter?._predicates || dataModel.list?.predicates;\n\n        const sparqlQuery = buildSparqlQuery({\n          containers: containers[serverKey],\n          params: { ...params, filter: { ...dataModel.list?.filter, ...params.filter } },\n          blankNodes,\n          predicates,\n          ontologies\n        });\n\n        httpClient(dataServers[serverKey].sparqlEndpoint, {\n          method: 'POST',\n          body: sparqlQuery,\n          noToken: dataServers[serverKey].authServer !== true\n        })\n          .then(({ json }) => {\n            // By default, embed only the blank nodes we explicitly asked to dereference\n            // Otherwise we may have same-type resources embedded in other resources\n            // To increase performances, you can set explicitEmbedOnFraming to false (make sure the result is still OK)\n            const frame =\n              dataModel.list?.explicitEmbedOnFraming !== false\n                ? {\n                    '@context': jsonContext,\n                    '@type': dataModel.types,\n                    '@embed': '@never',\n                    ...getEmbedFrame(blankNodes)\n                  }\n                : {\n                    '@context': jsonContext,\n                    '@type': dataModel.types\n                  };\n\n            // omitGraph option force results to be in a @graph, even if we have a single result\n            return jsonld.frame(json, frame, { omitGraph: false });\n          })\n          .then(compactJson => {\n            if (compactJson['@id']) {\n              const { '@context': context, ...rest } = compactJson;\n              compactJson = {\n                '@context': context,\n                '@graph': [rest]\n              };\n            }\n            resolve(compactJson['@graph'] || []);\n          })\n          .catch(e => reject(e));\n      })\n  );\n\n  // Run simultaneous SPARQL queries\n  let results = await Promise.all(sparqlQueryPromises);\n\n  if (results.length === 0) {\n    return { data: [], total: 0 };\n  } else {\n    // Merge all results in one array\n    results = [].concat(...results);\n\n    // Add id in addition to @id, as this is what React-Admin expects\n    let returnData = results.map(item => {\n      item.id = item.id || item['@id'];\n      return item;\n    });\n\n    // TODO sort and paginate the results in the SPARQL query to improve performances\n    if (params.sort) {\n      returnData = returnData.sort((a, b) => {\n        if (a[params.sort.field] !== undefined && b[params.sort.field] !== undefined) {\n          if (params.sort.order === 'ASC') {\n            return compare(a[params.sort.field], b[params.sort.field]);\n          } else {\n            return compare(b[params.sort.field], a[params.sort.field]);\n          }\n        } else {\n          return 0;\n        }\n      });\n    }\n    if (params.pagination) {\n      returnData = returnData.slice(\n        (params.pagination.page - 1) * params.pagination.perPage,\n        params.pagination.page * params.pagination.perPage\n      );\n    }\n\n    return { data: returnData, total: results.length };\n  }\n};\n\nexport default fetchSparqlEndpoints;\n","import urlJoin from 'url-join';\n\nconst findContainersWithPaths = (paths, dataServers) => {\n  let containers = {};\n  Object.keys(paths).forEach(serverKey => {\n    if (dataServers[serverKey]) {\n      containers[serverKey] = [];\n      paths[serverKey].forEach(path => {\n        containers[serverKey].push(urlJoin(dataServers[serverKey].baseUrl, path));\n      });\n    } else {\n      throw new Error('No server found with key ' + serverKey);\n    }\n  });\n  return containers;\n};\n\nexport default findContainersWithPaths;\n","import findContainersWithTypes from '../utils/findContainersWithTypes';\nimport fetchContainers from '../utils/fetchContainers';\nimport fetchSparqlEndpoints from '../utils/fetchSparqlEndpoints';\nimport findContainersWithPaths from '../utils/findContainersWithPath';\n\nconst getListMethod = config => async (resourceId, params = {}) => {\n  let { dataServers, resources } = config;\n  const dataModel = resources[resourceId];\n\n  if (!dataModel) throw new Error(`Resource ${resourceId} is not mapped in resources file`);\n\n  let containers;\n  if (!params.filter?._servers && dataModel.list?.containers) {\n    if (Array.isArray(dataModel.list?.containers))\n      throw new Error(\n        `The list.containers property of ${resourceId} dataModel must be of type object ({ serverKey: [containerUri] })`\n      );\n    // If containers are set explicitly, use them\n    containers = findContainersWithPaths(dataModel.list.containers, dataServers);\n  } else {\n    // Otherwise find the container URIs on the given servers (either in the filter or the data model)\n    containers = findContainersWithTypes(\n      dataModel.types,\n      params.filter?._servers || dataModel.list?.servers,\n      dataServers\n    );\n  }\n\n  if (dataModel.list?.fetchContainer) {\n    return fetchContainers(containers, resourceId, params, config);\n  } else {\n    return fetchSparqlEndpoints(containers, resourceId, params, config);\n  }\n};\n\nexport default getListMethod;\n","import getOne from './getOne';\n\nconst getManyMethod = config => async (resourceId, params) => {\n  const { returnFailedResources } = config;\n\n  const returnData = await Promise.all(params.ids.map(id =>\n    getOne(config)(resourceId, { id: typeof id === 'object' ? id['@id'] : id })\n      .then(({ data }) => data)\n      .catch(() => {\n        // Catch if one resource fails to load\n        // Otherwise no references will be show if only one is missing\n        // See https://github.com/marmelab/react-admin/issues/5190\n        if (returnFailedResources) {\n          // Return only the ID of the resource\n          return({ id });\n        } else {\n          // Do nothing. The resource will not appear in the results.\n        }\n      })\n  ));\n\n  return { data: returnData };\n};\n\nexport default getManyMethod;\n","import getList from './getList';\n\nconst getManyReferenceMethod = config => async (resourceId, params) => {\n  params.filter = { ...params.filter, [params.target]: params.id };\n  delete params.target;\n  return await getList(config)(resourceId, params);\n};\n\nexport default getManyReferenceMethod;\n","import uploadAllFiles from '../utils/uploadAllFiles';\nimport getServerKeyFromUri from '../utils/getServerKeyFromUri';\n\nconst updateMethod = config => async (resourceId, params) => {\n  const { dataServers, httpClient, jsonContext } = config;\n  const serverKey = getServerKeyFromUri(params.id, dataServers);\n\n  // Upload files, if there are any\n  params.data = await uploadAllFiles(params.data, config);\n\n  await httpClient(params.id, {\n    method: 'PUT',\n    body: JSON.stringify({\n      '@context': jsonContext,\n      ...params.data\n    }),\n    noToken: !serverKey || dataServers[serverKey].authServer !== true\n  });\n\n  return { data: params.data };\n};\n\nexport default updateMethod;\n","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","import jwtDecode from 'jwt-decode';\nimport getServerKeyFromType from './getServerKeyFromType';\nimport urlJoin from 'url-join';\n\nconst fetchUserConfig = async config => {\n  const { dataServers, httpClient } = config;\n  const token = localStorage.getItem('token');\n  const podKey = getServerKeyFromType('pod', dataServers);\n  const authServerKey = getServerKeyFromType('authServer', dataServers);\n\n  // If the user is logged in\n  if (token) {\n    const { webId } = jwtDecode(token);\n    let userData;\n\n    try {\n      const { json } = await httpClient(webId);\n      userData = json;\n    } catch (e) {\n      console.error(e);\n      // If the webId cannot be fetched, assume an invalid token and disconnect the user\n      localStorage.removeItem('token');\n      window.location.reload();\n      return;\n    }\n\n    // If we have a POD server\n    if (podKey) {\n      // Fill the config provided to the data provider\n      // We must modify the config object directly\n      config.dataServers[podKey].name = 'My Pod';\n      config.dataServers[podKey].baseUrl = urlJoin(webId, 'data'); // TODO find POD URI from user profile\n      config.dataServers[podKey].sparqlEndpoint =\n        userData.endpoints?.['void:sparqlEndpoint'] || urlJoin(webId, 'sparql');\n    }\n\n    if (authServerKey) {\n      // Fill the config provided to the data provider\n      // We must modify the config object directly\n      config.dataServers[authServerKey].proxyUrl = userData.endpoints?.proxyUrl;\n    }\n  } else {\n    if (podKey) {\n      // If the user is not logged in, ignore the POD server\n      delete config.dataServers[podKey];\n    }\n  }\n};\n\nexport default fetchUserConfig;\n","const defaultToArray = value => (!value ? undefined : Array.isArray(value) ? value : [value]);\n\nconst fetchVoidEndpoints = async config => {\n  const fetchPromises = Object.entries(config.dataServers)\n    .filter(([key, server]) => server.pod !== true)\n    .map(([key, server]) =>\n      config\n        .httpClient(new URL('/.well-known/void', server.baseUrl), { noToken: !server.authServer })\n        .then(result => ({ key, datasets: result.json['@graph'] }))\n        .catch(e => {\n          if (e.status === 404 || e.status === 401) {\n            return { key, error: e };\n          } else {\n            throw e;\n          }\n        })\n    );\n\n  let results = [];\n\n  try {\n    results = await Promise.all(fetchPromises);\n  } catch (e) {\n    // Do not throw error if no endpoint found\n  }\n\n  for (let result of results) {\n    // Ignore unfetchable endpoints\n    if (result.datasets) {\n      config.dataServers[result.key].containers = config.dataServers[result.key].containers || {};\n      config.dataServers[result.key].blankNodes = config.dataServers[result.key].blankNodes || {};\n\n      for (let dataset of result.datasets) {\n        const datasetServerKey = Object.keys(config.dataServers).find(\n          key => dataset['void:uriSpace'] === config.dataServers[key].baseUrl\n        );\n\n        // If the dataset is not part of a server mapped in the dataServers, ignore it\n        if (datasetServerKey) {\n          // If this is the local dataset, add the base information\n          if (datasetServerKey === result.key) {\n            config.dataServers[result.key].name = config.dataServers[result.key].name || dataset['dc:title'];\n            config.dataServers[result.key].description =\n              config.dataServers[result.key].description || dataset['dc:description'];\n            config.dataServers[result.key].sparqlEndpoint =\n              config.dataServers[result.key].sparqlEndpoint || dataset['void:sparqlEndpoint'];\n          }\n\n          config.dataServers[result.key].containers[datasetServerKey] =\n            config.dataServers[result.key].containers[datasetServerKey] || {};\n\n          for (let partition of defaultToArray(dataset['void:classPartition'])) {\n            for (let type of defaultToArray(partition['void:class'])) {\n              // Set containers by type\n              const path = partition['void:uriSpace'].replace(dataset['void:uriSpace'], '/');\n              if (config.dataServers[result.key].containers[datasetServerKey][type]) {\n                config.dataServers[result.key].containers[datasetServerKey][type].push(path);\n              } else {\n                config.dataServers[result.key].containers[datasetServerKey][type] = [path];\n              }\n\n              // Set blank nodes by containers\n              const blankNodes = defaultToArray(partition['semapps:blankNodes']);\n              if (blankNodes) {\n                config.dataServers[result.key].blankNodes[partition['void:uriSpace']] = defaultToArray(\n                  partition['semapps:blankNodes']\n                );\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default fetchVoidEndpoints;\n","import React from 'react';\nimport { DateTimeInput as RaDateTimeInput } from 'react-admin';\n\n/**\n * @deprecated Use the component from the @semapps/date-components instead\n */\nconst DateTimeInput = props => (\n  <RaDateTimeInput {...props} format={value => value && value.replace(' ', 'T').replace('Z', '')} />\n);\n\nexport default DateTimeInput;\n","import React from 'react';\nimport { useQueryWithStore } from 'react-admin';\nimport { default as FilterHandler } from './FilterHandler';\n\n/*\n * @example Label used in examples\n *  const Label = ({label, ...otherProps})=>{\n *     return <h2>{label}</h2>\n *  }\n *\n * @example show header for each group with group property thanks to groupHeader\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupHeader={({group,...otherProps}) => <Label {...otherProps} label={group['pair:label']}></Label> }\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n * </GroupedReferenceHandler>\n *\n * @example call chhildren with label thanks to groupLabel\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupLabel=\"property of RAresource display\" // property of React-Admin resource to display. children call whith props \"label\" filled by groupLabel property of groupReference\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *   <Label>\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n * </GroupedReferenceHandler>\n *\n * @example conditional show of group if no data in source. Conditionale groupHeader is not possible because GroupedArrayField define group before filter ; need use chhildren.\n * const ConditionalSourceDefinedHandler = ({record,source,children,...otherProps})=>{\n *   if (record?.[source] && (!Array.isArray(record[source])||record[source].length>0)){\n *     return  React.Children.map(children, (child, i) => {\n *         return React.cloneElement(child, {...otherProps,record,source});\n *       })\n *   }else{\n *     return <></>\n *   }\n * }\n *\n * <GroupedReferenceHandler\n *   source=\"property\" // predicat of main record to show / ex pair:organizationOfMembership\n *   groupReference=\"RAresource\" // React-Admin resource reference. this is the \"group by\" ressource. / ex MembershipRole\n *   groupLabel=\"property of RAresource display\" // property of React-Admin resource to display. children call whith props \"label\" filled by groupLabel property of groupReference\n *   filterProperty=\"property of source filtered by groupReference\"\n *   addLabel={false}\n * >\n *  <ConditionalSourceDefinedHandler>\n *   <Label>\n *   <ArrayField source=\"property\"> // same props as GroupedArrayField source\n *    <GridList>\n *    </GridList>\n *   </ArrayField>\n *  </ConditionalSourceDefinedHandler>\n * </GroupedReferenceHandler>\n *\n *\n */\nconst GroupedReferenceHandler = ({\n  children,\n  groupReference,\n  groupLabel,\n  groupHeader,\n  filterProperty,\n  ...otherProps\n}) => {\n  const { data } = useQueryWithStore({\n    type: 'getList',\n    resource: groupReference,\n    payload: {}\n  });\n\n  return (\n    <>\n      {data?.map((data, index) => {\n        let filter = {};\n        filter[filterProperty] = data.id;\n        return (\n          <>\n            {groupHeader && groupHeader({ ...otherProps, group: data })}\n            <FilterHandler {...otherProps} filter={filter} label={data[groupLabel]}>\n              {children}\n            </FilterHandler>\n          </>\n        );\n      })}\n    </>\n  );\n};\n\nexport default GroupedReferenceHandler;\n","import React from 'react';\nimport { ImageField as RaImageField } from 'react-admin';\n\nconst ImageField = ({ record, source, ...otherProps }) => {\n  // For the display, we need to have the URI in a src property\n  if (typeof record === 'string') record = { [source]: record };\n  return <RaImageField record={record} source={source} {...otherProps} />;\n};\n\nexport default ImageField;\n","import React from 'react';\nimport { ReferenceInput as RaReferenceInput, useResourceContext } from 'react-admin';\n\nconst ReferenceInput = props => {\n  const resource = useResourceContext({});\n  return (\n    <RaReferenceInput\n      {...props}\n      resource={resource}\n      format={value => {\n        // If there is no value, return immediately\n        if (!value) return value;\n        // If a format prop was defined, apply it\n        if (props.format) value = props.format(value);\n        // If the value is an object with an @id field, return the uri\n        return typeof value === 'object' ? value.id || value['@id'] : value;\n      }}\n    />\n  );\n};\n\nexport default ReferenceInput;\n","import createMethod from './methods/create';\nimport deleteMethod from './methods/delete';\nimport deleteManyMethod from './methods/deleteMany';\nimport getDataServersMethod from './methods/getDataServers';\nimport getDataModelsMethod from './methods/getDataModels';\nimport getListMethod from './methods/getList';\nimport getManyMethod from './methods/getMany';\nimport getManyReferenceMethod from './methods/getManyReference';\nimport getOneMethod from './methods/getOne';\nimport updateMethod from './methods/update';\nimport fetchUserConfig from './utils/fetchUserConfig';\nimport fetchVoidEndpoints from './utils/fetchVoidEndpoints';\nimport getServerKeyFromType from './utils/getServerKeyFromType';\n\nconst dataProvider = config => {\n  // TODO verify all data provider config + data models\n  if (!getServerKeyFromType('default', config.dataServers))\n    throw new Error('You must define a default server in your dataServers config');\n\n  if (!config.jsonContext) config.jsonContext = Object.fromEntries(config.ontologies.map(o => [o.prefix, o.url]));\n  if (!config.returnFailedResources) config.returnFailedResources = false;\n\n  const fetchUserConfigPromise = fetchUserConfig(config);\n  const fetchVoidEndpointsPromise = fetchVoidEndpoints(config);\n\n  const waitForVoidEndpoints = method => async (...arg) => {\n    await fetchUserConfigPromise;\n    await fetchVoidEndpointsPromise; // Return immediately if promise is fulfilled\n    return await method(...arg);\n  };\n\n  return {\n    getList: waitForVoidEndpoints(getListMethod(config)),\n    getMany: waitForVoidEndpoints(getManyMethod(config)),\n    getManyReference: waitForVoidEndpoints(getManyReferenceMethod(config)),\n    getOne: waitForVoidEndpoints(getOneMethod(config)),\n    create: waitForVoidEndpoints(createMethod(config)),\n    update: waitForVoidEndpoints(updateMethod(config)),\n    updateMany: () => {\n      throw new Error('updateMany is not implemented yet');\n    },\n    delete: waitForVoidEndpoints(deleteMethod(config)),\n    deleteMany: waitForVoidEndpoints(deleteManyMethod(config)),\n    // Custom methods\n    getDataModels: waitForVoidEndpoints(getDataModelsMethod(config)),\n    getDataServers: waitForVoidEndpoints(getDataServersMethod(config)),\n    getLocalDataServers: getDataServersMethod(config)\n  };\n};\n\nexport default dataProvider;\n","import { fetchUtils } from 'react-admin';\n\nconst httpClient = (url, options = {}) => {\n  if (!options.headers) options.headers = new Headers();\n\n  switch (options.method) {\n    case 'POST':\n    case 'PATCH':\n    case 'PUT':\n      if (!options.headers.has('Accept')) options.headers.set('Accept', 'application/ld+json');\n      if (!options.headers.has('Content-Type')) options.headers.set('Content-Type', 'application/ld+json');\n      break;\n\n    case 'DELETE':\n      break;\n\n    case 'GET':\n    default:\n      if (!options.headers.has('Accept')) options.headers.set('Accept', 'application/ld+json');\n      break;\n  }\n\n  if (!options.noToken) {\n    const token = localStorage.getItem('token');\n    if (token) options.headers.set('Authorization', `Bearer ${token}`);\n  }\n\n  return fetchUtils.fetchJson(url, options);\n};\n\nexport default httpClient;\n","import { useState, useEffect } from 'react';\nimport useDataModel from './useDataModel';\nimport useDataServers from './useDataServers';\nimport findContainersWithTypes from '../dataProvider/utils/findContainersWithTypes';\n\nconst useContainers = (resourceId, serverKeys = '@all') => {\n  const dataModel = useDataModel(resourceId);\n  const dataServers = useDataServers();\n  const [containers, setContainers] = useState();\n\n  useEffect(() => {\n    if (dataModel && dataServers) {\n      setContainers(findContainersWithTypes(dataModel.types, serverKeys, dataServers));\n    }\n  }, [dataModel, dataServers, serverKeys]);\n\n  return containers;\n};\n\nexport default useContainers;\n","import { useState, useEffect } from 'react';\nimport urlJoin from 'url-join';\nimport useDataModel from './useDataModel';\nimport useDataServers from './useDataServers';\nimport findCreateContainerWithTypes from '../dataProvider/utils/findCreateContainerWithTypes';\nimport getServerKeyFromType from '../dataProvider/utils/getServerKeyFromType';\n\nconst useCreateContainer = resourceId => {\n  const dataModel = useDataModel(resourceId);\n  const dataServers = useDataServers();\n  const [createContainer, setCreateContainer] = useState();\n\n  useEffect(() => {\n    if (dataModel && dataServers) {\n      if (dataModel.create?.container) {\n        const [serverKey, path] = Object.entries(dataModel.create.container)[0];\n        if (!serverKey || !dataServers[serverKey]) {\n          throw new Error('Wrong key for the dataModel.create.container config of resource ' + resourceId);\n        }\n        setCreateContainer(urlJoin(dataServers[serverKey].baseUrl, path));\n      } else if (dataModel.create?.server) {\n        setCreateContainer(findCreateContainerWithTypes(dataModel.types, dataModel.create?.server, dataServers));\n      } else {\n        const defaultServerKey = getServerKeyFromType('default', dataServers);\n        setCreateContainer(findCreateContainerWithTypes(dataModel.types, defaultServerKey, dataServers));\n      }\n    }\n  }, [dataModel, dataServers, setCreateContainer]);\n\n  return createContainer;\n};\n\nexport default useCreateContainer;\n","import { useContext, useState, useEffect } from 'react';\nimport { DataProviderContext } from 'react-admin';\n\nconst useDataModels = () => {\n  // Get the raw data provider, since useDataProvider returns a wrapper\n  const dataProvider = useContext(DataProviderContext);\n  const [dataModels, setDataModels] = useState();\n\n  useEffect(() => {\n    dataProvider.getDataModels().then(results => setDataModels(results));\n  }, [dataProvider, setDataModels]);\n\n  return dataModels;\n};\n\nexport default useDataModels;\n"],"names":["ReferenceArrayField","record","source","otherProps","Array","isArray","map","i","id","React","RaReferenceArrayField","defaultProps","addLabel","ReferenceField","_typeof","RaReferenceField","FilterHandler","children","filter","useState","filtered","setFiltered","useEffect","filteredData","r","eq","key","value","includes","newRecord","length","undefined","Children","child","cloneElement","ReferenceArrayInput","props","resource","useResourceContext","RaReferenceArrayInput","format","v","useReferenceInputStyles","makeStyles","form","display","input","paddingRight","useHideInputStyles","root","compute","externalLinks","isURL","url","startsWith","useDataModel","resourceId","dataProvider","useContext","DataProviderContext","dataModel","setDataModel","getDataModels","then","results","useDataServers","dataServers","setDataServers","getDataServers","context","definition","this","normalize","strArray","resultArray","TypeError","match","first","shift","replace","component","push","str","join","parts","split","arguments","slice","call","module","exports","getServerKeyFromType","type","Object","keys","find","parseServerKey","serverKey","findContainersWithTypes","types","serverKeys","containers","existingContainers","defaultServerKey","parseServerKeys","forEach","key1","key2","path","containerUri","urlJoin","baseUrl","findCreateContainerWithTypes","createServerKey","Error","JSON","stringify","getServerKeyFromUri","uri","fetchResource","resourceUri","config","httpClient","jsonContext","authServerKey","_dataServers$authServ","proxyUrl","noProxy","method","headers","Headers","body","URLSearchParams","noToken","data","json","jsonld","compact","getOneMethod","params","resources","list","_dataModel$list","forceArray","_dataModel$list2","forceArrayItem","isFile","o","rawFile","File","getUploadsContainerUri","uploadsContainer","uploadFile","uploadsContainerUri","Slug","fileName","name","fileExtension","splitFileName","pop","createSlug","lang","response","status","get","uploadAllFiles","property","hasOwnProperty","createMethod","create","_dataModel$create","container","values","server","fieldsMapping","_dataModel$fieldsMapp","title","set","f","authServer","responseHeaders","getOne","deleteMethod","deleteManyMethod","ids","fetchContainers","containersServers","reduce","acc","fromEntries","fetchPromises","resourceType","Promise","all","total","concat","apply","returnData","item","a","entries","some","k","val","vr","va","sort","b","field","order","localeCompare","pagination","page","perPage","getEmbedFrame","blankNodes","predicates","embedFrame","blankNode","reverse","accumulator","predicate","resolvePrefix","ontologies","prefix","ontology","typeQuery","triple","variable","namedNode","CryptoJS","Math","crypto","window","self","globalThis","msCrypto","global","require","err","cryptoSecureRandomInt","getRandomValues","Uint32Array","randomBytes","readInt32LE","F","obj","subtype","prototype","C","C_lib","lib","Base","extend","overrides","mixIn","init","$super","instance","properties","propertyName","toString","clone","WordArray","words","sigBytes","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","j","ceil","random","nBytes","C_enc","enc","hexChars","bite","parse","hexStr","hexStrLength","parseInt","substr","Latin1","latin1Chars","String","fromCharCode","latin1Str","latin1StrLength","charCodeAt","Utf8","decodeURIComponent","escape","e","utf8Str","unescape","encodeURIComponent","BufferedBlockAlgorithm","reset","_data","_nDataBytes","_append","_process","doFlush","processedWords","dataWords","dataSigBytes","blockSize","nBlocksReady","nWordsReady","max","_minBufferSize","nBytesReady","min","offset","_doProcessBlock","splice","Hasher","cfg","_doReset","update","messageUpdate","finalize","_doFinalize","_createHelper","hasher","message","_createHmacHelper","C_algo","HMAC","algo","T","abs","sin","MD5","_hash","M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","c","d","FF","GG","HH","II","nBitsTotal","nBitsLeft","nBitsTotalH","floor","nBitsTotalL","hash","H_i","x","s","t","n","HmacMD5","generateSparqlVarName","node","md5","getParentNode","getPredicate","buildUnionQuery","queries","q","triples","query","firstTriple","q2","parentNode","buildBlankNodesQuery","baseQuery","nodes","nodeNames","extractNodes","varName","parentVarName","construct","pre","cur","where","patterns","literal","DataFactory","generator","SparqlGenerator","Generator","reservedFilterKeys","buildSparqlQuery","baseTriples","buildBaseQuery","sparqlJsParams","queryType","template","prefixes","containerWhere","expression","operator","args","resourceWhere","hasSPARQLFilter","sparqlWhere","hasFullTextSearch","sw","variables","toLowerCase","object","unshift","blankNodesQuery","getBlankNodesFromDataServers","Set","compare","fetchSparqlEndpoints","sparqlQueryPromises","resolve","reject","_predicates","sparqlQuery","_dataModel$list3","sparqlEndpoint","frame","explicitEmbedOnFraming","omitGraph","compactJson","findContainersWithPaths","paths","getListMethod","_params$filter","_servers","servers","_dataModel$list4","fetchContainer","getManyMethod","returnFailedResources","getManyReferenceMethod","target","getList","updateMethod","InvalidCharacterError","atob","bind","bs","buffer","bc","idx","output","charAt","indexOf","fetchUserConfig","token","localStorage","getItem","podKey","jwtDecode","webId","userData","console","error","removeItem","location","reload","endpoints","_userData$endpoints2","defaultToArray","fetchVoidEndpoints","pod","URL","result","datasets","dataset","datasetServerKey","description","partition","RaDateTimeInput","groupReference","groupLabel","groupHeader","filterProperty","useQueryWithStore","payload","index","group","label","RaImageField","RaReferenceInput","reificationClass","flexFormClasses","hideInputStyles","ArrayInput","SimpleFormIterator","classes","className","TextInput","initialValue","fetchUserConfigPromise","fetchVoidEndpointsPromise","waitForVoidEndpoints","getMany","getManyReference","updateMany","deleteMany","getDataModelsMethod","getDataServersMethod","getLocalDataServers","options","has","fetchUtils","fetchJson","setContainers","createContainer","setCreateContainer","_dataModel$create2","_dataModel$create3","dataModels","setDataModels","componentExternalLinks","serversExternalLinks","useMemo","useCallback","computedComponentExternalLinks","serverBaseUrl","computedServerExternalLinks"],"mappings":"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"}