{"version":3,"file":"index.cjs.js","sources":["../src/QuickAppendReferenceArrayField/ResultsList.js","../src/QuickAppendReferenceArrayField/QuickAppendDialog.js","../src/QuickAppendReferenceArrayField/QuickAppendReferenceArrayField.js"],"sourcesContent":["import React, {useEffect, useMemo, useState} from 'react';\nimport {\n  getResources,\n  useDataProvider,\n  useRecordContext,\n  linkToRecord,\n  useGetResourceLabel,\n  useTranslate\n} from \"react-admin\";\nimport { shallowEqual, useSelector } from \"react-redux\";\nimport debounce from 'lodash.debounce';\nimport { Box, IconButton, List, ListItem, ListItemAvatar, ListItemText, ListItemSecondaryAction, Avatar, makeStyles, CircularProgress } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useDataServers, useDataModel } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: \"100%\",\n    maxWidth: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  primaryText: {\n    width: '30%'\n  },\n  secondaryText: {\n    fontStyle: \"italic\",\n    color: \"grey\"\n  }\n}));\n\nconst getServerName = (resourceUri, dataServers) => {\n  const server = Object.values(dataServers).find(server => resourceUri.startsWith(server.baseUrl));\n  return server ? server.name : 'Inconnu';\n};\n\nconst ResultsList = ({ keyword, source, reference, appendLink, switchToCreate }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [results, setResults] = useState([]);\n  const translate = useTranslate();\n  const dataProvider = useDataProvider();\n  const dataServers = useDataServers();\n  const record = useRecordContext();\n\n  const resources = useSelector(getResources, shallowEqual);\n  const referenceDefinition = useMemo(() => {\n    return resources.find(r => r.name === reference);\n  }, [resources, reference]);\n  const getResourceLabel = useGetResourceLabel();\n  const dataModel = useDataModel(reference);\n\n  if( dataModel && Object.keys(dataModel).length > 0 && !dataModel?.fieldsMapping?.title ) {\n    throw new Error(`No fieldsMapping.title config found for ${reference} dataModel`);\n  }\n\n  const search = useMemo(\n    () =>\n      debounce((keyword) => {\n        dataProvider.getList(reference, {\n          pagination: { page: 1, perPage: 100 },\n          sort: { field: dataModel.fieldsMapping.title, order: 'ASC' },\n          filter: { q: keyword }\n        }).then(( { data }) => {\n          const existingLinks = record[source] ? Array.isArray(record[source]) ? record[source] : [record[source]] : [];\n          const newLinks = data.filter(record => !existingLinks.includes(record.id));\n          setResults(newLinks);\n          setLoaded(true);\n          setLoading(false);\n        }).catch(e => {\n          setLoading(false);\n        })\n      }, 700)\n    , [dataProvider, dataModel, record, source, reference, setResults, setLoading, setLoaded])\n\n  useEffect(() => {\n    if (!keyword) {\n      return undefined;\n    } else {\n      setLoading(true);\n      setLoaded(false);\n      search(keyword);\n    }\n    return(() => search.cancel());\n  }, [keyword, search, setLoading]);\n\n  if( !keyword ) return null;\n\n  return (\n    <List dense className={classes.root}>\n      {loaded && results.map((resource) => (\n        <ListItem key={resource.id} button onClick={() => appendLink(resource.id)}>\n          <ListItemAvatar>\n            <Avatar>{React.createElement(referenceDefinition.icon)}</Avatar>\n          </ListItemAvatar>\n          <ListItemText className={classes.primaryText} primary={resource[dataModel.fieldsMapping.title]} />\n          <ListItemText\n            className={classes.secondaryText}\n            primary={getServerName(resource.id, dataServers)}\n          />\n          <ListItemSecondaryAction>\n            <a href={linkToRecord('/' + reference, resource.id, 'show')} target=\"_blank\" rel=\"noopener noreferrer\">\n              <IconButton edge=\"end\">\n                <VisibilityIcon />\n              </IconButton>\n            </a>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n      {loaded && results.length === 0 &&\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar><ErrorIcon /></Avatar>\n          </ListItemAvatar>\n          <ListItemText className={classes.primaryText} primary={translate('ra.navigation.no_results')} />\n        </ListItem>\n      }\n      {loaded && referenceDefinition.hasCreate &&\n        <ListItem button onClick={switchToCreate}>\n          <ListItemAvatar>\n            <Avatar><AddIcon /></Avatar>\n          </ListItemAvatar>\n          <ListItemText className={classes.primaryText} primary={translate('ra.page.create', { name: getResourceLabel(reference, 1) })} />\n        </ListItem>\n      }\n      {loading &&\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height={150}>\n          <CircularProgress size={60} thickness={6} />\n        </Box>\n      }\n    </List>\n  );\n};\n\nexport default ResultsList;\n","import React, { useState, useCallback } from 'react';\nimport { Button, useDataProvider, useTranslate, useRefresh, useNotify, useGetResourceLabel } from 'react-admin';\nimport { Dialog, DialogTitle, TextField, DialogContent, DialogActions, makeStyles } from '@material-ui/core';\nimport { Field, Form } from 'react-final-form';\nimport AddIcon from '@material-ui/icons/Add';\nimport ResultsList from './ResultsList';\nimport { useDataModel } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    paddingBottom: 8\n  },\n  actions: {\n    padding: 15\n  },\n  addForm: {\n    paddingTop: 0\n  },\n  listForm: {\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 0,\n    paddingBottom: 0,\n    maxHeight: 210\n  }\n}));\n\nconst Input = ({ meta: { touched, error }, input: inputProps, ...props }) => (\n  <TextField error={!!(touched && error)} helperText={touched && error} {...inputProps} {...props} fullWidth />\n);\n\nconst QuickAppendDialog = ({ open, onClose, subjectUri, resource, source, reference }) => {\n  const classes = useStyles();\n  const [keyword, setKeyword] = useState('');\n  const [panel, setPanel] = useState('find');\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const refresh = useRefresh();\n  const notify = useNotify();\n  const getResourceLabel = useGetResourceLabel();\n  const dataModel = useDataModel(reference);\n\n  const appendLink = useCallback(async objectUri => {\n    // Get the freshest data so that the put operation doesn't overwrite anything\n    const { data } = await dataProvider.getOne(resource, { id: subjectUri });\n\n    await dataProvider.update(resource, {\n      id: subjectUri,\n      data: {\n        ...data,\n        [source]: data[source] ? Array.isArray(data[source]) ? [...data[source], objectUri] : [data[source], objectUri] : objectUri\n      },\n      previousData: data\n    });\n\n    refresh();\n\n    onClose();\n  }, [dataProvider, subjectUri, resource, source, refresh, onClose]);\n\n  const create = useCallback(async values => {\n    const { data } = await dataProvider.create(reference, {\n      data: {\n        [dataModel.fieldsMapping.title]: values.title\n      }\n    });\n\n    await appendLink(data.id);\n\n    notify(`La resource \"${values.title}\" a été créée`, 'success');\n  }, [dataProvider, dataModel, appendLink, reference, notify]);\n\n  return (\n    <Dialog fullWidth open={open} onClose={onClose}>\n      {panel === 'find' ?\n        <>\n          <DialogTitle className={classes.title}>\n            Ajouter une relation\n          </DialogTitle>\n          <DialogContent className={classes.addForm}>\n            <TextField\n              autoFocus\n              label={\"Rechercher ou créer des \" + getResourceLabel(reference, 2).toLowerCase()}\n              variant=\"filled\"\n              margin=\"dense\"\n              value={keyword}\n              onChange={e => setKeyword(e.target.value)}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogContent className={classes.listForm}>\n            <ResultsList keyword={keyword} source={source} reference={reference} appendLink={appendLink} switchToCreate={() => setPanel('create')} />\n          </DialogContent>\n          <DialogActions className={classes.actions}>\n            <Button label=\"ra.action.close\" variant=\"text\" onClick={onClose} />\n          </DialogActions>\n        </>\n        :\n        <Form\n          onSubmit={create}\n          initialValues={{\n            title: keyword,\n          }}\n          render={({ handleSubmit, submitting }) => (\n            <form onSubmit={handleSubmit}>\n              <DialogTitle className={classes.title}>\n                {translate('ra.page.create', { name: getResourceLabel(reference, 1) })}\n              </DialogTitle>\n              <DialogContent className={classes.addForm}>\n                <Field\n                  autoFocus\n                  id=\"title\"\n                  name=\"title\"\n                  component={Input}\n                  label=\"Titre\"\n                  disabled={submitting}\n                  variant=\"filled\"\n                  margin=\"dense\"\n                />\n              </DialogContent>\n              <DialogActions className={classes.actions}>\n                <Button label=\"ra.action.create\" variant=\"contained\" startIcon={<AddIcon />} type=\"submit\" disabled={submitting} />\n                <Button label=\"ra.action.close\" variant=\"text\" onClick={onClose} />\n              </DialogActions>\n            </form>\n          )}\n        />\n      }\n    </Dialog>\n  );\n};\n\nexport default QuickAppendDialog;\n","import React, { useState, useMemo } from 'react';\nimport { ReferenceArrayField as RaReferenceArrayField, usePermissionsOptimized } from 'react-admin';\nimport QuickAppendDialog from \"./QuickAppendDialog\";\n\nconst QuickAppendReferenceArrayField = ({ record, reference, source, resource, ...otherProps }) => {\n  const [showDialog, setShowDialog] = useState(false);\n  const { permissions } = usePermissionsOptimized(record.id);\n\n  const canAppend = useMemo(\n    () => !!permissions && permissions.some(p => ['acl:Append', 'acl:Write', 'acl:Control'].includes(p['acl:mode'])),\n    [permissions]\n  );\n\n  if (record?.[source]) {\n    if (!Array.isArray(record[source])) {\n      record[source] = [record[source]];\n    }\n    record[source] = record[source].map(i => i['@id'] || i.id || i);\n  }\n\n  return (\n    <>\n      <RaReferenceArrayField\n        record={record}\n        reference={reference}\n        source={source}\n        resource={resource}\n        appendLink={canAppend ? () => setShowDialog(true) : undefined}\n        {...otherProps}\n      />\n      {canAppend && showDialog && (\n        <QuickAppendDialog\n          open={showDialog}\n          onClose={() => setShowDialog(false)}\n          subjectUri={record.id}\n          resource={resource}\n          source={source}\n          reference={reference}\n        />\n      )}\n    </>\n  );\n};\n\nQuickAppendReferenceArrayField.defaultProps = {\n  addLabel: true\n};\n\nexport default QuickAppendReferenceArrayField;\n"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","paddingTop","paddingBottom","primaryText","secondaryText","fontStyle","color","getServerName","resourceUri","dataServers","server","Object","values","find","startsWith","baseUrl","name","ResultsList","keyword","source","reference","appendLink","switchToCreate","classes","useState","loading","setLoading","loaded","setLoaded","results","setResults","translate","useTranslate","dataProvider","useDataProvider","useDataServers","record","useRecordContext","resources","useSelector","getResources","shallowEqual","referenceDefinition","useMemo","r","getResourceLabel","useGetResourceLabel","dataModel","useDataModel","keys","length","fieldsMapping","_dataModel$fieldsMapp","title","Error","search","debounce","getList","pagination","page","perPage","sort","field","order","filter","q","then","data","existingLinks","Array","isArray","newLinks","includes","id","e","useEffect","cancel","React","List","dense","className","map","resource","ListItem","key","button","onClick","ListItemAvatar","Avatar","createElement","icon","ListItemText","primary","ListItemSecondaryAction","href","linkToRecord","target","rel","IconButton","edge","VisibilityIcon","ErrorIcon","hasCreate","AddIcon","Box","display","alignItems","justifyContent","height","CircularProgress","size","thickness","actions","padding","addForm","listForm","paddingLeft","paddingRight","maxHeight","Input","meta","touched","error","inputProps","input","props","TextField","helperText","fullWidth","QuickAppendDialog","open","onClose","subjectUri","setKeyword","panel","setPanel","refresh","useRefresh","notify","useNotify","useCallback","objectUri","getOne","update","previousData","create","Dialog","DialogTitle","DialogContent","autoFocus","label","toLowerCase","variant","margin","value","onChange","DialogActions","Button","Form","onSubmit","initialValues","render","handleSubmit","submitting","Field","component","disabled","startIcon","type","QuickAppendReferenceArrayField","otherProps","showDialog","setShowDialog","permissions","usePermissionsOptimized","canAppend","some","p","i","RaReferenceArrayField","undefined","defaultProps","addLabel"],"mappings":"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"}