{"version":3,"file":"index.cjs.js","sources":["../src/AvatarWithLabelField.js","../src/QuickAppendReferenceArrayField/ResultsList.js","../src/QuickAppendReferenceArrayField/QuickAppendDialog.js","../src/QuickAppendReferenceArrayField/QuickAppendReferenceArrayField.js","../src/MultiUrlField.js"],"sourcesContent":["import React from 'react';\nimport { Box, makeStyles, Avatar, Chip } from '@material-ui/core';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nconst useStyles = makeStyles(theme => ({\n  parent: props => ({\n    position: 'relative',\n    ...props.parent\n  }),\n  square: {\n    width: '100%',\n    paddingBottom: '100%',\n    position: 'relative'\n  },\n  avatar: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    width: '100%',\n    height: '100%',\n    borderRadius: '50%',\n    // backgroundColor: theme.palette.primary.main,\n    '& svg': {\n      width: '55%',\n      height: '55%'\n    }\n  },\n  chip: {\n    position: 'absolute',\n    bottom: -10,\n    left: 0,\n    right: 0,\n    paddingTop: 3,\n    paddingBottom: 3,\n    paddingLeft: 6,\n    paddingRight: 6,\n    marginBottom: 10,\n    cursor: 'pointer'\n  },\n  launchIcon: {\n    width: 14\n  }\n}));\n\nconst handleClick = () => {};\n\nconst AvatarWithLabelField = ({ record, label, defaultLabel, image, fallback, externalLink, labelColor, classes, ...rest }) => {\n  classes = useStyles(classes);\n  if (!record) return null;\n\n  const computedLabel = (typeof label === 'function' ? label(record) : record[label]) || defaultLabel;\n  const computedImage = typeof image === 'function' ? image(record) : record[image];\n  const computedFallback = typeof fallback === 'function' ? fallback(record) : fallback;\n\n  return (\n    <Box className={classes.parent}>\n      <div className={classes.square}>\n        <Avatar\n          src={computedImage || computedFallback}\n          alt={computedLabel}\n          fallback={computedFallback}\n          className={classes.avatar}\n          {...rest}\n        />\n      </div>\n      {externalLink ?\n        <Chip\n          color={labelColor}\n          className={classes.chip}\n          size=\"small\"\n          label={computedLabel}\n          deleteIcon={<LaunchIcon className={classes.launchIcon} />}\n          onDelete={handleClick}\n        />\n        :\n        <Chip\n          color={labelColor}\n          className={classes.chip}\n          size=\"small\"\n          label={computedLabel}\n        />\n      }\n    </Box>\n  );\n};\n\nAvatarWithLabelField.defaultProps = {\n  labelColor: 'secondary.main',\n  externalLink: false\n};\n\nexport default AvatarWithLabelField;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport {\n  getResources,\n  useDataProvider,\n  useRecordContext,\n  linkToRecord,\n  useGetResourceLabel,\n  useTranslate\n} from 'react-admin';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport debounce from 'lodash.debounce';\nimport {\n  Box,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Avatar,\n  makeStyles,\n  CircularProgress\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useDataServers, useDataModel } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  primaryText: {\n    width: '30%'\n  },\n  secondaryText: {\n    fontStyle: 'italic',\n    color: 'grey'\n  }\n}));\n\nconst getServerName = (resourceUri, dataServers) => {\n  const server = dataServers && Object.values(dataServers).find(server => resourceUri.startsWith(server.baseUrl));\n  return server ? server.name : 'Inconnu';\n};\n\nconst ResultsList = ({ keyword, source, reference, appendLink, switchToCreate }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [results, setResults] = useState([]);\n  const translate = useTranslate();\n  const dataProvider = useDataProvider();\n  const dataServers = useDataServers();\n  const record = useRecordContext();\n\n  const resources = useSelector(getResources, shallowEqual);\n  const referenceDefinition = useMemo(() => {\n    return resources.find(r => r.name === reference);\n  }, [resources, reference]);\n  const getResourceLabel = useGetResourceLabel();\n  const dataModel = useDataModel(reference);\n\n  if (dataModel && Object.keys(dataModel).length > 0 && !dataModel?.fieldsMapping?.title) {\n    throw new Error(`No fieldsMapping.title config found for ${reference} dataModel`);\n  }\n\n  const search = useMemo(\n    () =>\n      debounce(keyword => {\n        dataProvider\n          .getList(reference, {\n            pagination: { page: 1, perPage: 100 },\n            sort: { field: dataModel?.fieldsMapping?.title, order: 'ASC' },\n            filter: { q: keyword, _servers: '@all' }\n          })\n          .then(({ data }) => {\n            const existingLinks = record[source]\n              ? Array.isArray(record[source])\n                ? record[source]\n                : [record[source]]\n              : [];\n            const newLinks = data.filter(record => !existingLinks.includes(record.id));\n            setResults(newLinks);\n            setLoaded(true);\n            setLoading(false);\n          })\n          .catch(e => {\n            setLoading(false);\n          });\n      }, 700),\n    [dataProvider, dataModel, record, source, reference, setResults, setLoading, setLoaded]\n  );\n\n  useEffect(() => {\n    if (!keyword) {\n      return undefined;\n    } else {\n      setLoading(true);\n      setLoaded(false);\n      search(keyword);\n    }\n    return () => search.cancel();\n  }, [keyword, search, setLoading]);\n\n  if (!keyword) return null;\n\n  return (\n    <List dense className={classes.root}>\n      {loaded &&\n        results.map(resource => (\n          <ListItem key={resource.id} button onClick={() => appendLink(resource.id)}>\n            <ListItemAvatar>\n              <Avatar>{React.createElement(referenceDefinition.icon)}</Avatar>\n            </ListItemAvatar>\n            <ListItemText className={classes.primaryText} primary={resource[dataModel.fieldsMapping.title]} />\n            <ListItemText className={classes.secondaryText} primary={getServerName(resource.id, dataServers)} />\n            <ListItemSecondaryAction>\n              <a href={linkToRecord('/' + reference, resource.id, 'show')} target=\"_blank\" rel=\"noopener noreferrer\">\n                <IconButton edge=\"end\">\n                  <VisibilityIcon />\n                </IconButton>\n              </a>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      {loaded && results.length === 0 && (\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <ErrorIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText className={classes.primaryText} primary={translate('ra.navigation.no_results')} />\n        </ListItem>\n      )}\n      {loaded && referenceDefinition.hasCreate && (\n        <ListItem button onClick={switchToCreate}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.primaryText}\n            primary={translate('ra.page.create', { name: getResourceLabel(reference, 1) })}\n          />\n        </ListItem>\n      )}\n      {loading && (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height={150}>\n          <CircularProgress size={60} thickness={6} />\n        </Box>\n      )}\n    </List>\n  );\n};\n\nexport default ResultsList;\n","import React, { useState, useCallback } from 'react';\nimport { Button, useDataProvider, useTranslate, useRefresh, useNotify, useGetResourceLabel } from 'react-admin';\nimport { Dialog, DialogTitle, TextField, DialogContent, DialogActions, makeStyles } from '@material-ui/core';\nimport { Field, Form } from 'react-final-form';\nimport AddIcon from '@material-ui/icons/Add';\nimport ResultsList from './ResultsList';\nimport { useDataModel } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    paddingBottom: 8\n  },\n  actions: {\n    padding: 15\n  },\n  addForm: {\n    paddingTop: 0\n  },\n  listForm: {\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 0,\n    paddingBottom: 0,\n    maxHeight: 210\n  }\n}));\n\nconst Input = ({ meta: { touched, error }, input: inputProps, ...props }) => (\n  <TextField error={!!(touched && error)} helperText={touched && error} {...inputProps} {...props} fullWidth />\n);\n\nconst QuickAppendDialog = ({ open, onClose, subjectUri, resource, source, reference }) => {\n  const classes = useStyles();\n  const [keyword, setKeyword] = useState('');\n  const [panel, setPanel] = useState('find');\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const refresh = useRefresh();\n  const notify = useNotify();\n  const getResourceLabel = useGetResourceLabel();\n  const dataModel = useDataModel(reference);\n\n  const appendLink = useCallback(\n    async objectUri => {\n      // Get the freshest data so that the put operation doesn't overwrite anything\n      const { data } = await dataProvider.getOne(resource, { id: subjectUri });\n\n      await dataProvider.update(resource, {\n        id: subjectUri,\n        data: {\n          ...data,\n          [source]: data[source]\n            ? Array.isArray(data[source])\n              ? [...data[source], objectUri]\n              : [data[source], objectUri]\n            : objectUri\n        },\n        previousData: data\n      });\n\n      refresh();\n\n      onClose();\n    },\n    [dataProvider, subjectUri, resource, source, refresh, onClose]\n  );\n\n  const create = useCallback(\n    async values => {\n      const { data } = await dataProvider.create(reference, {\n        data: {\n          [dataModel.fieldsMapping.title]: values.title\n        }\n      });\n\n      await appendLink(data.id);\n\n      notify(`La resource \"${values.title}\" a été créée`, 'success');\n    },\n    [dataProvider, dataModel, appendLink, reference, notify]\n  );\n\n  return (\n    <Dialog fullWidth open={open} onClose={onClose}>\n      {panel === 'find' ? (\n        <>\n          <DialogTitle className={classes.title}>Ajouter une relation</DialogTitle>\n          <DialogContent className={classes.addForm}>\n            <TextField\n              autoFocus\n              label={'Rechercher ou créer des ' + getResourceLabel(reference, 2).toLowerCase()}\n              variant=\"filled\"\n              margin=\"dense\"\n              value={keyword}\n              onChange={e => setKeyword(e.target.value)}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogContent className={classes.listForm}>\n            <ResultsList\n              keyword={keyword}\n              source={source}\n              reference={reference}\n              appendLink={appendLink}\n              switchToCreate={() => setPanel('create')}\n            />\n          </DialogContent>\n          <DialogActions className={classes.actions}>\n            <Button label=\"ra.action.close\" variant=\"text\" onClick={onClose} />\n          </DialogActions>\n        </>\n      ) : (\n        <Form\n          onSubmit={create}\n          initialValues={{\n            title: keyword\n          }}\n          render={({ handleSubmit, submitting }) => (\n            <form onSubmit={handleSubmit}>\n              <DialogTitle className={classes.title}>\n                {translate('ra.page.create', { name: getResourceLabel(reference, 1) })}\n              </DialogTitle>\n              <DialogContent className={classes.addForm}>\n                <Field\n                  autoFocus\n                  id=\"title\"\n                  name=\"title\"\n                  component={Input}\n                  label=\"Titre\"\n                  disabled={submitting}\n                  variant=\"filled\"\n                  margin=\"dense\"\n                />\n              </DialogContent>\n              <DialogActions className={classes.actions}>\n                <Button\n                  label=\"ra.action.create\"\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  type=\"submit\"\n                  disabled={submitting}\n                />\n                <Button label=\"ra.action.close\" variant=\"text\" onClick={onClose} />\n              </DialogActions>\n            </form>\n          )}\n        />\n      )}\n    </Dialog>\n  );\n};\n\nexport default QuickAppendDialog;\n","import React, { useState, useMemo } from 'react';\nimport { ReferenceArrayField as RaReferenceArrayField, usePermissionsOptimized } from 'react-admin';\nimport QuickAppendDialog from './QuickAppendDialog';\n\nconst QuickAppendReferenceArrayField = ({ record, reference, source, resource, ...otherProps }) => {\n  const [showDialog, setShowDialog] = useState(false);\n  const { permissions } = usePermissionsOptimized(record.id);\n\n  const canAppend = useMemo(\n    () => !!permissions && permissions.some(p => ['acl:Append', 'acl:Write', 'acl:Control'].includes(p['acl:mode'])),\n    [permissions]\n  );\n\n  if (record?.[source]) {\n    if (!Array.isArray(record[source])) {\n      record[source] = [record[source]];\n    }\n    record[source] = record[source].map(i => i['@id'] || i.id || i);\n  }\n\n  return (\n    <>\n      <RaReferenceArrayField\n        record={record}\n        reference={reference}\n        source={source}\n        resource={resource}\n        appendLink={canAppend ? () => setShowDialog(true) : undefined}\n        {...otherProps}\n      />\n      {canAppend && showDialog && (\n        <QuickAppendDialog\n          open={showDialog}\n          onClose={() => setShowDialog(false)}\n          subjectUri={record.id}\n          resource={resource}\n          source={source}\n          reference={reference}\n        />\n      )}\n    </>\n  );\n};\n\nQuickAppendReferenceArrayField.defaultProps = {\n  addLabel: true\n};\n\nexport default QuickAppendReferenceArrayField;\n","import React from 'react';\nimport { useRecordContext } from 'react-admin';\nimport { Chip, Avatar, makeStyles } from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { FiGitlab } from 'react-icons/fi';\n\nconst defaultdomainMapping = {\n  'github.com': {\n    label: 'GitHub',\n    icon: <GitHubIcon />,\n    color: 'black',\n    contrastText: 'white'\n  },\n  'gitlab.com': {\n    label: 'GitLab',\n    icon: <FiGitlab />,\n    color: 'orange',\n    contrastText: 'black'\n  },\n  'opencollective.com': {\n    label: 'Open Collective',\n    icon: <Avatar src=\"https://opencollective.com/static/images/opencollective-icon.svg\" />,\n    color: 'white',\n    contrastText: '#297EFF'\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'unset',\n    '& :hover': {\n      cursor: 'pointer'\n    }\n  },\n  chip: {\n    paddingLeft: 5,\n    paddingRight: 5,\n    marginRight: 5\n  },\n  label: {\n    marginTop: -1\n  }\n}));\n\nconst MultiUrlField = ({ source, domainMapping, ...rest }) => {\n  const newDomainMapping = { ...defaultdomainMapping, ...domainMapping };\n  const record = useRecordContext();\n  const classes = useStyles();\n  const urlArray = record[source] ? (Array.isArray(record[source]) ? record[source] : [record[source]]) : [];\n  return urlArray.map((url, index) => {\n    if (!url.startsWith('http')) url = 'https://' + url;\n    const parsedUrl = new URL(url);\n    if (!parsedUrl) return null;\n    const chip = newDomainMapping[parsedUrl.hostname] || {\n      label: 'Site web',\n      icon: <LanguageIcon />,\n      color: '#ea',\n      contrastText: 'black'\n    };\n    return (\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className={classes.link}>\n        <Chip\n          icon={React.cloneElement(chip.icon, { style: { color: chip.contrastText } })}\n          size=\"small\"\n          label={chip.label}\n          classes={{ root: classes.chip, label: classes.label }}\n          style={{ color: chip.contrastText, backgroundColor: chip.color }}\n          {...rest}\n        />\n      </a>\n    );\n  });\n};\n\nMultiUrlField.defaultProps = {\n  addLabel: true\n};\n\nexport default MultiUrlField;\n"],"names":["useStyles","makeStyles","theme","parent","props","position","square","width","paddingBottom","avatar","top","bottom","height","borderRadius","chip","left","right","paddingTop","paddingLeft","paddingRight","marginBottom","cursor","launchIcon","handleClick","AvatarWithLabelField","record","label","defaultLabel","image","fallback","externalLink","labelColor","classes","rest","computedLabel","computedImage","computedFallback","React","Box","className","Avatar","src","alt","Chip","color","size","deleteIcon","LaunchIcon","onDelete","defaultProps","root","maxWidth","backgroundColor","palette","background","paper","primaryText","secondaryText","fontStyle","getServerName","resourceUri","dataServers","server","Object","values","find","startsWith","baseUrl","name","ResultsList","keyword","source","reference","appendLink","switchToCreate","useState","loading","setLoading","loaded","setLoaded","results","setResults","translate","useTranslate","dataProvider","useDataProvider","useDataServers","useRecordContext","resources","useSelector","getResources","shallowEqual","referenceDefinition","useMemo","r","getResourceLabel","useGetResourceLabel","dataModel","useDataModel","keys","length","fieldsMapping","_dataModel$fieldsMapp","title","Error","search","debounce","getList","pagination","page","perPage","sort","field","_dataModel$fieldsMapp2","order","filter","q","_servers","then","data","existingLinks","Array","isArray","newLinks","includes","id","e","useEffect","cancel","List","dense","map","resource","ListItem","key","button","onClick","ListItemAvatar","createElement","icon","ListItemText","primary","ListItemSecondaryAction","href","linkToRecord","target","rel","IconButton","edge","VisibilityIcon","ErrorIcon","hasCreate","AddIcon","display","alignItems","justifyContent","CircularProgress","thickness","actions","padding","addForm","listForm","maxHeight","Input","meta","touched","error","inputProps","input","TextField","helperText","fullWidth","QuickAppendDialog","open","onClose","subjectUri","setKeyword","panel","setPanel","refresh","useRefresh","notify","useNotify","useCallback","objectUri","getOne","update","previousData","create","Dialog","DialogTitle","DialogContent","autoFocus","toLowerCase","variant","margin","value","onChange","DialogActions","Button","Form","onSubmit","initialValues","render","handleSubmit","submitting","Field","component","disabled","startIcon","type","QuickAppendReferenceArrayField","otherProps","showDialog","setShowDialog","permissions","usePermissionsOptimized","canAppend","some","p","i","RaReferenceArrayField","undefined","addLabel","defaultdomainMapping","GitHubIcon","contrastText","FiGitlab","link","textDecoration","marginRight","marginTop","MultiUrlField","domainMapping","newDomainMapping","url","index","parsedUrl","URL","hostname","LanguageIcon","cloneElement","style"],"mappings":"wmHAIMA,EAAYC,cAAW,SAAAC,SAAU,CACrCC,OAAQ,SAAAC,aACNC,SAAU,YACPD,EAAMD,SAEXG,OAAQ,CACNC,MAAO,OACPC,cAAe,OACfH,SAAU,YAEZI,OAAQ,CACNJ,SAAU,WACVK,IAAK,EACLC,OAAQ,EACRJ,MAAO,OACPK,OAAQ,OACRC,aAAc,cAEL,CACPN,MAAO,MACPK,OAAQ,QAGZE,KAAM,CACJT,SAAU,WACVM,QAAS,GACTI,KAAM,EACNC,MAAO,EACPC,WAAY,EACZT,cAAe,EACfU,YAAa,EACbC,aAAc,EACdC,aAAc,GACdC,OAAQ,WAEVC,WAAY,CACVf,MAAO,QAILgB,EAAc,aAEdC,EAAuB,gBAAGC,IAAAA,OAAQC,IAAAA,MAAOC,IAAAA,aAAcC,IAAAA,MAAOC,IAAAA,SAAUC,IAAAA,aAAcC,IAAAA,WAAYC,IAAAA,QAAYC,YAClHD,EAAUhC,EAAUgC,IACfP,EAAQ,OAAO,SAEdS,GAAkC,mBAAVR,EAAuBA,EAAMD,GAAUA,EAAOC,KAAWC,EACjFQ,EAAiC,mBAAVP,EAAuBA,EAAMH,GAAUA,EAAOG,GACrEQ,EAAuC,mBAAbP,EAA0BA,EAASJ,GAAUI,SAG3EQ,wBAACC,OAAIC,UAAWP,EAAQ7B,QACtBkC,+BAAKE,UAAWP,EAAQ1B,QACtB+B,wBAACG,YACCC,IAAKN,GAAiBC,EACtBM,IAAKR,EACLL,SAAUO,EACVG,UAAWP,EAAQvB,QACfwB,KAGPH,EACCO,wBAACM,QACCC,MAAOb,EACPQ,UAAWP,EAAQlB,KACnB+B,KAAK,QACLnB,MAAOQ,EACPY,WAAYT,wBAACU,WAAWR,UAAWP,EAAQV,aAC3C0B,SAAUzB,IAGZc,wBAACM,QACCC,MAAOb,EACPQ,UAAWP,EAAQlB,KACnB+B,KAAK,QACLnB,MAAOQ,MAOjBV,EAAqByB,aAAe,CAClClB,WAAY,iBACZD,cAAc,GC5DhB,IAAM9B,EAAYC,cAAW,SAAAC,SAAU,CACrCgD,KAAM,CACJ3C,MAAO,OACP4C,SAAU,OACVC,gBAAiBlD,EAAMmD,QAAQC,WAAWC,MAC1CtC,WAAY,EACZT,cAAe,GAEjBgD,YAAa,CACXjD,MAAO,OAETkD,cAAe,CACbC,UAAW,SACXd,MAAO,YAILe,EAAgB,SAACC,EAAaC,OAC5BC,EAASD,GAAeE,OAAOC,OAAOH,GAAaI,MAAK,SAAAH,UAAUF,EAAYM,WAAWJ,EAAOK,mBAC/FL,EAASA,EAAOM,KAAO,WAG1BC,EAAc,kBAAGC,IAAAA,QAASC,IAAAA,OAAQC,IAAAA,UAAWC,IAAAA,WAAYC,IAAAA,eACvD1C,EAAUhC,QACc2E,YAAS,MAAhCC,OAASC,WACYF,YAAS,MAA9BG,OAAQC,WACeJ,WAAS,OAAhCK,OAASC,OACVC,EAAYC,iBACZC,EAAeC,oBACfxB,EAAcyB,mBACd7D,EAAS8D,qBAETC,EAAYC,cAAYC,eAAcC,gBACtCC,EAAsBC,WAAQ,kBAC3BL,EAAUvB,MAAK,SAAA6B,UAAKA,EAAE1B,OAASI,OACrC,CAACgB,EAAWhB,IACTuB,EAAmBC,wBACnBC,EAAYC,eAAa1B,MAE3ByB,GAAalC,OAAOoC,KAAKF,GAAWG,OAAS,IAAMH,MAAAA,aAAAA,EAAWI,6BAAXC,EAA0BC,aACzE,IAAIC,wDAAiDhC,qBAGvDiC,EAASZ,WACb,kBACEa,WAAS,SAAApC,SACPc,EACGuB,QAAQnC,EAAW,CAClBoC,WAAY,CAAEC,KAAM,EAAGC,QAAS,KAChCC,KAAM,CAAEC,MAAOf,MAAAA,aAAAA,EAAWI,kCAAXY,EAA0BV,MAAOW,MAAO,OACvDC,OAAQ,CAAEC,EAAG9C,EAAS+C,SAAU,UAEjCC,MAAK,gBAAGC,IAAAA,KACDC,EAAgB/F,EAAO8C,GACzBkD,MAAMC,QAAQjG,EAAO8C,IACnB9C,EAAO8C,GACP,CAAC9C,EAAO8C,IACV,GACEoD,EAAWJ,EAAKJ,QAAO,SAAA1F,UAAW+F,EAAcI,SAASnG,EAAOoG,OACtE5C,EAAW0C,GACX5C,GAAU,GACVF,GAAW,aAEN,SAAAiD,GACLjD,GAAW,QAEd,OACL,CAACO,EAAca,EAAWxE,EAAQ8C,EAAQC,EAAWS,EAAYJ,EAAYE,WAG/EgD,aAAU,cACHzD,SAGHO,GAAW,GACXE,GAAU,GACV0B,EAAOnC,GAEF,kBAAMmC,EAAOuB,YACnB,CAAC1D,EAASmC,EAAQ5B,IAEhBP,EAGHjC,wBAAC4F,QAAKC,SAAM3F,UAAWP,EAAQkB,MAC5B4B,GACCE,EAAQmD,KAAI,SAAAC,UACV/F,wBAACgG,YAASC,IAAKF,EAASP,GAAIU,UAAOC,QAAS,kBAAM/D,EAAW2D,EAASP,MACpExF,wBAACoG,sBACCpG,wBAACG,cAAQH,UAAMqG,cAAc9C,EAAoB+C,QAEnDtG,wBAACuG,gBAAarG,UAAWP,EAAQwB,YAAaqF,QAAST,EAASnC,EAAUI,cAAcE,SACxFlE,wBAACuG,gBAAarG,UAAWP,EAAQyB,cAAeoF,QAASlF,EAAcyE,EAASP,GAAIhE,KACpFxB,wBAACyG,+BACCzG,6BAAG0G,KAAMC,eAAa,IAAMxE,EAAW4D,EAASP,GAAI,QAASoB,OAAO,SAASC,IAAI,uBAC/E7G,wBAAC8G,cAAWC,KAAK,OACf/G,wBAACgH,uBAMZvE,GAA6B,IAAnBE,EAAQoB,QACjB/D,wBAACgG,gBACChG,wBAACoG,sBACCpG,wBAACG,cACCH,wBAACiH,kBAGLjH,wBAACuG,gBAAarG,UAAWP,EAAQwB,YAAaqF,QAAS3D,EAAU,+BAGpEJ,GAAUc,EAAoB2D,WAC7BlH,wBAACgG,YAASE,UAAOC,QAAS9D,GACxBrC,wBAACoG,sBACCpG,wBAACG,cACCH,wBAACmH,kBAGLnH,wBAACuG,gBACCrG,UAAWP,EAAQwB,YACnBqF,QAAS3D,EAAU,iBAAkB,CAAEd,KAAM2B,EAAiBvB,EAAW,QAI9EI,GACCvC,wBAACC,OAAImH,QAAQ,OAAOC,WAAW,SAASC,eAAe,SAAS/I,OAAQ,KACtEyB,wBAACuH,oBAAiB/G,KAAM,GAAIgH,UAAW,MA9C1B,yBCrGjB7J,EAAYC,cAAW,iBAAO,CAClCsG,MAAO,CACL/F,cAAe,GAEjBsJ,QAAS,CACPC,QAAS,IAEXC,QAAS,CACP/I,WAAY,GAEdgJ,SAAU,CACR/I,YAAa,EACbC,aAAc,EACdF,WAAY,EACZT,cAAe,EACf0J,UAAW,SAITC,EAAQ,oBAAGC,KAAQC,IAAAA,QAASC,IAAAA,MAAgBC,IAAPC,MAAsBpK,gBAC/DiC,wBAACoI,eAAUH,SAAUD,IAAWC,GAAQI,WAAYL,GAAWC,GAAWC,EAAgBnK,GAAOuK,iBAG7FC,EAAoB,gBAAGC,IAAAA,KAAMC,IAAAA,QAASC,IAAAA,WAAY3C,IAAAA,SAAU7D,IAAAA,OAAQC,IAAAA,UAClExC,EAAUhC,QACc2E,WAAS,OAAhCL,OAAS0G,WACUrG,WAAS,WAA5BsG,OAAOC,OACR9F,EAAeC,oBACfH,EAAYC,iBACZgG,EAAUC,eACVC,EAASC,cACTvF,EAAmBC,wBACnBC,EAAYC,eAAa1B,GAEzBC,EAAa8G,0DACjB,WAAMC,2GAEmBpG,EAAaqG,OAAOrD,EAAU,CAAEP,GAAIkD,2BAAnDxD,IAAAA,cAEFnC,EAAasG,OAAOtD,EAAU,CAClCP,GAAIkD,EACJxD,YACKA,WACFhD,EAASgD,EAAKhD,GACXkD,MAAMC,QAAQH,EAAKhD,gBACbgD,EAAKhD,KAASiH,IAClB,CAACjE,EAAKhD,GAASiH,GACjBA,IAENG,aAAcpE,WAGhB4D,IAEAL,qGAEF,CAAC1F,EAAc2F,EAAY3C,EAAU7D,EAAQ4G,EAASL,IAGlDc,EAASL,0DACb,WAAMvH,2GACmBoB,EAAawG,OAAOpH,EAAW,CACpD+C,UACGtB,EAAUI,cAAcE,MAAQvC,EAAOuC,gCAFpCgB,IAAAA,cAMF9C,EAAW8C,EAAKM,WAEtBwD,yBAAuBrH,EAAOuC,uBAAsB,4GAEtD,CAACnB,EAAca,EAAWxB,EAAYD,EAAW6G,WAIjDhJ,wBAACwJ,UAAOlB,aAAUE,KAAMA,EAAMC,QAASA,GAC1B,SAAVG,EACC5I,gDACEA,wBAACyJ,eAAYvJ,UAAWP,EAAQuE,+BAChClE,wBAAC0J,iBAAcxJ,UAAWP,EAAQgI,SAChC3H,wBAACoI,aACCuB,aACAtK,MAAO,2BAA6BqE,EAAiBvB,EAAW,GAAGyH,cACnEC,QAAQ,SACRC,OAAO,QACPC,MAAO9H,EACP+H,SAAU,SAAAvE,UAAKkD,EAAWlD,EAAEmB,OAAOmD,QACnCzB,gBAGJtI,wBAAC0J,iBAAcxJ,UAAWP,EAAQiI,UAChC5H,wBAACgC,GACCC,QAASA,EACTC,OAAQA,EACRC,UAAWA,EACXC,WAAYA,EACZC,eAAgB,kBAAMwG,EAAS,cAGnC7I,wBAACiK,iBAAc/J,UAAWP,EAAQ8H,SAChCzH,wBAACkK,UAAO7K,MAAM,kBAAkBwK,QAAQ,OAAO1D,QAASsC,MAI5DzI,wBAACmK,QACCC,SAAUb,EACVc,cAAe,CACbnG,MAAOjC,GAETqI,OAAQ,gBAAGC,IAAAA,aAAcC,IAAAA,kBACvBxK,gCAAMoK,SAAUG,GACdvK,wBAACyJ,eAAYvJ,UAAWP,EAAQuE,OAC7BrB,EAAU,iBAAkB,CAAEd,KAAM2B,EAAiBvB,EAAW,MAEnEnC,wBAAC0J,iBAAcxJ,UAAWP,EAAQgI,SAChC3H,wBAACyK,SACCd,aACAnE,GAAG,QACHzD,KAAK,QACL2I,UAAW5C,EACXzI,MAAM,QACNsL,SAAUH,EACVX,QAAQ,SACRC,OAAO,WAGX9J,wBAACiK,iBAAc/J,UAAWP,EAAQ8H,SAChCzH,wBAACkK,UACC7K,MAAM,mBACNwK,QAAQ,YACRe,UAAW5K,wBAACmH,gBACZ0D,KAAK,SACLF,SAAUH,IAEZxK,wBAACkK,UAAO7K,MAAM,kBAAkBwK,QAAQ,OAAO1D,QAASsC,wDC1IlEqC,EAAiC,gBAAG1L,IAAAA,OAAQ+C,IAAAA,UAAWD,IAAAA,OAAQ6D,IAAAA,SAAagF,aAC5CzI,YAAS,MAAtC0I,OAAYC,OACXC,EAAgBC,0BAAwB/L,EAAOoG,IAA/C0F,YAEFE,EAAY5H,WAChB,mBAAQ0H,GAAeA,EAAYG,MAAK,SAAAC,SAAK,CAAC,aAAc,YAAa,eAAe/F,SAAS+F,EAAE,kBACnG,CAACJ,WAGC9L,MAAAA,GAAAA,EAAS8C,KACNkD,MAAMC,QAAQjG,EAAO8C,MACxB9C,EAAO8C,GAAU,CAAC9C,EAAO8C,KAE3B9C,EAAO8C,GAAU9C,EAAO8C,GAAQ4D,KAAI,SAAAyF,UAAKA,EAAE,QAAUA,EAAE/F,IAAM+F,MAI7DvL,gDACEA,wBAACwL,yBACCpM,OAAQA,EACR+C,UAAWA,EACXD,OAAQA,EACR6D,SAAUA,EACV3D,WAAYgJ,EAAY,kBAAMH,GAAc,SAAQQ,GAChDV,IAELK,GAAaJ,GACZhL,wBAACuI,GACCC,KAAMwC,EACNvC,QAAS,kBAAMwC,GAAc,IAC7BvC,WAAYtJ,EAAOoG,GACnBO,SAAUA,EACV7D,OAAQA,EACRC,UAAWA,MAOrB2I,EAA+BlK,aAAe,CAC5C8K,UAAU,oCCtCNC,EAAuB,cACb,CACZtM,MAAO,SACPiH,KAAMtG,wBAAC4L,gBACPrL,MAAO,QACPsL,aAAc,sBAEF,CACZxM,MAAO,SACPiH,KAAMtG,wBAAC8L,iBACPvL,MAAO,SACPsL,aAAc,8BAEM,CACpBxM,MAAO,kBACPiH,KAAMtG,wBAACG,UAAOC,IAAI,qEAClBG,MAAO,QACPsL,aAAc,YAGZlO,EAAYC,cAAW,SAAAC,SAAU,CACrCkO,KAAM,CACJC,eAAgB,mBACJ,CACVhN,OAAQ,YAGZP,KAAM,CACJI,YAAa,EACbC,aAAc,EACdmN,YAAa,GAEf5M,MAAO,CACL6M,WAAY,OAIVC,EAAgB,gBAAGjK,IAAAA,OAAQkK,IAAAA,cAAkBxM,SAC3CyM,SAAwBV,GAAyBS,GACjDhN,EAAS8D,qBACTvD,EAAUhC,WACCyB,EAAO8C,GAAWkD,MAAMC,QAAQjG,EAAO8C,IAAW9C,EAAO8C,GAAU,CAAC9C,EAAO8C,IAAY,IACxF4D,KAAI,SAACwG,EAAKC,GACnBD,EAAIzK,WAAW,UAASyK,EAAM,WAAaA,OAC1CE,EAAY,IAAIC,IAAIH,OACrBE,EAAW,OAAO,SACjB/N,EAAO4N,EAAiBG,EAAUE,WAAa,CACnDrN,MAAO,WACPiH,KAAMtG,wBAAC2M,gBACPpM,MAAO,MACPsL,aAAc,gBAGd7L,6BAAG0G,KAAM4F,EAAK1F,OAAO,SAASC,IAAI,sBAAsB3G,UAAWP,EAAQoM,MACzE/L,wBAACM,UACCgG,KAAMtG,UAAM4M,aAAanO,EAAK6H,KAAM,CAAEuG,MAAO,CAAEtM,MAAO9B,EAAKoN,gBAC3DrL,KAAK,QACLnB,MAAOZ,EAAKY,MACZM,QAAS,CAAEkB,KAAMlB,EAAQlB,KAAMY,MAAOM,EAAQN,OAC9CwN,MAAO,CAAEtM,MAAO9B,EAAKoN,aAAc9K,gBAAiBtC,EAAK8B,QACrDX,SAOduM,EAAcvL,aAAe,CAC3B8K,UAAU"}