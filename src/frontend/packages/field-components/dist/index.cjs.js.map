{"version":3,"file":"index.cjs.js","sources":["../src/AvatarWithLabelField.js","../src/QuickAppendReferenceArrayField/ResultsList.js","../src/QuickAppendReferenceArrayField/QuickAppendDialog.js","../src/QuickAppendReferenceArrayField/QuickAppendReferenceArrayField.js","../src/MultiUrlField.js"],"sourcesContent":["import React from 'react';\nimport { useRecordContext } from 'react-admin';\nimport { Box, makeStyles, Avatar, Chip } from '@material-ui/core';\nimport LaunchIcon from '@material-ui/icons/Launch';\n\nconst useStyles = makeStyles(theme => ({\n  parent: props => ({\n    position: 'relative',\n    ...props.parent\n  }),\n  square: {\n    width: '100%',\n    paddingBottom: '100%',\n    position: 'relative'\n  },\n  avatar: {\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    width: '100%',\n    height: '100%',\n    borderRadius: '50%',\n    // backgroundColor: theme.palette.primary.main,\n    '& svg': {\n      width: '55%',\n      height: '55%'\n    }\n  },\n  chip: {\n    position: 'absolute',\n    bottom: -10,\n    left: 0,\n    right: 0,\n    paddingTop: 3,\n    paddingBottom: 3,\n    paddingLeft: 6,\n    paddingRight: 6,\n    marginBottom: 10,\n    cursor: 'pointer'\n  },\n  launchIcon: {\n    width: 14\n  }\n}));\n\nconst handleClick = () => {};\n\nconst AvatarWithLabelField = ({\n  label,\n  defaultLabel,\n  image,\n  fallback,\n  externalLink,\n  labelColor,\n  classes,\n  ...rest\n}) => {\n  classes = useStyles(classes);\n  const record = useRecordContext();\n\n  const computedLabel = (typeof label === 'function' ? label(record) : record[label]) || defaultLabel;\n  const computedImage = typeof image === 'function' ? image(record) : record[image];\n  const computedFallback = typeof fallback === 'function' ? fallback(record) : fallback;\n\n  return (\n    <Box className={classes.parent}>\n      <div className={classes.square}>\n        <Avatar\n          src={computedImage || computedFallback}\n          alt={computedLabel}\n          fallback={computedFallback}\n          className={classes.avatar}\n          {...rest}\n        />\n      </div>\n      {externalLink ? (\n        <Chip\n          color={labelColor}\n          className={classes.chip}\n          size=\"small\"\n          label={computedLabel}\n          deleteIcon={<LaunchIcon className={classes.launchIcon} />}\n          onDelete={handleClick}\n        />\n      ) : (\n        <Chip color={labelColor} className={classes.chip} size=\"small\" label={computedLabel} />\n      )}\n    </Box>\n  );\n};\n\nAvatarWithLabelField.defaultProps = {\n  labelColor: 'secondary',\n  externalLink: false\n};\n\nexport default AvatarWithLabelField;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport {\n  getResources,\n  useDataProvider,\n  useRecordContext,\n  linkToRecord,\n  useGetResourceLabel,\n  useTranslate\n} from 'react-admin';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport debounce from 'lodash.debounce';\nimport {\n  Box,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Avatar,\n  makeStyles,\n  CircularProgress\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useDataServers, useDataModel } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  primaryText: {\n    width: '30%'\n  },\n  secondaryText: {\n    fontStyle: 'italic',\n    color: 'grey'\n  }\n}));\n\nconst getServerName = (resourceUri, dataServers) => {\n  const server = dataServers && Object.values(dataServers).find(server => resourceUri.startsWith(server.baseUrl));\n  return server ? server.name : 'Inconnu';\n};\n\nconst ResultsList = ({ keyword, source, reference, appendLink, switchToCreate }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [results, setResults] = useState([]);\n  const translate = useTranslate();\n  const dataProvider = useDataProvider();\n  const dataServers = useDataServers();\n  const record = useRecordContext();\n\n  const resources = useSelector(getResources, shallowEqual);\n  const referenceDefinition = useMemo(() => {\n    return resources.find(r => r.name === reference);\n  }, [resources, reference]);\n  const getResourceLabel = useGetResourceLabel();\n  const dataModel = useDataModel(reference);\n\n  if (dataModel && Object.keys(dataModel).length > 0 && !dataModel?.fieldsMapping?.title) {\n    throw new Error(`No fieldsMapping.title config found for ${reference} dataModel`);\n  }\n\n  const search = useMemo(\n    () =>\n      debounce(keyword => {\n        dataProvider\n          .getList(reference, {\n            pagination: { page: 1, perPage: 100 },\n            sort: { field: dataModel?.fieldsMapping?.title, order: 'ASC' },\n            filter: { q: keyword, _servers: '@all' }\n          })\n          .then(({ data }) => {\n            const existingLinks = record[source]\n              ? Array.isArray(record[source])\n                ? record[source]\n                : [record[source]]\n              : [];\n            const newLinks = data.filter(record => !existingLinks.includes(record.id));\n            setResults(newLinks);\n            setLoaded(true);\n            setLoading(false);\n          })\n          .catch(e => {\n            setLoading(false);\n          });\n      }, 700),\n    [dataProvider, dataModel, record, source, reference, setResults, setLoading, setLoaded]\n  );\n\n  useEffect(() => {\n    if (!keyword) {\n      return undefined;\n    } else {\n      setLoading(true);\n      setLoaded(false);\n      search(keyword);\n    }\n    return () => search.cancel();\n  }, [keyword, search, setLoading]);\n\n  if (!keyword) return null;\n\n  return (\n    <List dense className={classes.root}>\n      {loaded &&\n        results.map(resource => (\n          <ListItem key={resource.id} button onClick={() => appendLink(resource.id)}>\n            <ListItemAvatar>\n              <Avatar>{React.createElement(referenceDefinition.icon)}</Avatar>\n            </ListItemAvatar>\n            <ListItemText className={classes.primaryText} primary={resource[dataModel.fieldsMapping.title]} />\n            <ListItemText className={classes.secondaryText} primary={getServerName(resource.id, dataServers)} />\n            <ListItemSecondaryAction>\n              <a href={linkToRecord('/' + reference, resource.id, 'show')} target=\"_blank\" rel=\"noopener noreferrer\">\n                <IconButton edge=\"end\">\n                  <VisibilityIcon />\n                </IconButton>\n              </a>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      {loaded && results.length === 0 && (\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <ErrorIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText className={classes.primaryText} primary={translate('ra.navigation.no_results')} />\n        </ListItem>\n      )}\n      {loaded && referenceDefinition.hasCreate && (\n        <ListItem button onClick={switchToCreate}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.primaryText}\n            primary={translate('ra.page.create', { name: getResourceLabel(reference, 1) })}\n          />\n        </ListItem>\n      )}\n      {loading && (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height={150}>\n          <CircularProgress size={60} thickness={6} />\n        </Box>\n      )}\n    </List>\n  );\n};\n\nexport default ResultsList;\n","import React, { useState, useCallback } from 'react';\nimport { Button, useDataProvider, useTranslate, useRefresh, useNotify, useGetResourceLabel } from 'react-admin';\nimport { Dialog, DialogTitle, TextField, DialogContent, DialogActions, makeStyles } from '@material-ui/core';\nimport { Field, Form } from 'react-final-form';\nimport AddIcon from '@material-ui/icons/Add';\nimport ResultsList from './ResultsList';\nimport { useDataModel } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    paddingBottom: 8\n  },\n  actions: {\n    padding: 15\n  },\n  addForm: {\n    paddingTop: 0\n  },\n  listForm: {\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 0,\n    paddingBottom: 0,\n    maxHeight: 210\n  }\n}));\n\nconst Input = ({ meta: { touched, error }, input: inputProps, ...props }) => (\n  <TextField error={!!(touched && error)} helperText={touched && error} {...inputProps} {...props} fullWidth />\n);\n\nconst QuickAppendDialog = ({ open, onClose, subjectUri, resource, source, reference }) => {\n  const classes = useStyles();\n  const [keyword, setKeyword] = useState('');\n  const [panel, setPanel] = useState('find');\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const refresh = useRefresh();\n  const notify = useNotify();\n  const getResourceLabel = useGetResourceLabel();\n  const dataModel = useDataModel(reference);\n\n  const appendLink = useCallback(\n    async objectUri => {\n      // Get the freshest data so that the put operation doesn't overwrite anything\n      const { data } = await dataProvider.getOne(resource, { id: subjectUri });\n\n      await dataProvider.update(resource, {\n        id: subjectUri,\n        data: {\n          ...data,\n          [source]: data[source]\n            ? Array.isArray(data[source])\n              ? [...data[source], objectUri]\n              : [data[source], objectUri]\n            : objectUri\n        },\n        previousData: data\n      });\n\n      refresh();\n\n      onClose();\n    },\n    [dataProvider, subjectUri, resource, source, refresh, onClose]\n  );\n\n  const create = useCallback(\n    async values => {\n      const { data } = await dataProvider.create(reference, {\n        data: {\n          [dataModel.fieldsMapping.title]: values.title\n        }\n      });\n\n      await appendLink(data.id);\n\n      notify(`La resource \"${values.title}\" a été créée`, 'success');\n    },\n    [dataProvider, dataModel, appendLink, reference, notify]\n  );\n\n  return (\n    <Dialog fullWidth open={open} onClose={onClose}>\n      {panel === 'find' ? (\n        <>\n          <DialogTitle className={classes.title}>Ajouter une relation</DialogTitle>\n          <DialogContent className={classes.addForm}>\n            <TextField\n              autoFocus\n              label={'Rechercher ou créer des ' + getResourceLabel(reference, 2).toLowerCase()}\n              variant=\"filled\"\n              margin=\"dense\"\n              value={keyword}\n              onChange={e => setKeyword(e.target.value)}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogContent className={classes.listForm}>\n            <ResultsList\n              keyword={keyword}\n              source={source}\n              reference={reference}\n              appendLink={appendLink}\n              switchToCreate={() => setPanel('create')}\n            />\n          </DialogContent>\n          <DialogActions className={classes.actions}>\n            <Button label=\"ra.action.close\" variant=\"text\" onClick={onClose} />\n          </DialogActions>\n        </>\n      ) : (\n        <Form\n          onSubmit={create}\n          initialValues={{\n            title: keyword\n          }}\n          render={({ handleSubmit, submitting }) => (\n            <form onSubmit={handleSubmit}>\n              <DialogTitle className={classes.title}>\n                {translate('ra.page.create', { name: getResourceLabel(reference, 1) })}\n              </DialogTitle>\n              <DialogContent className={classes.addForm}>\n                <Field\n                  autoFocus\n                  id=\"title\"\n                  name=\"title\"\n                  component={Input}\n                  label=\"Titre\"\n                  disabled={submitting}\n                  variant=\"filled\"\n                  margin=\"dense\"\n                />\n              </DialogContent>\n              <DialogActions className={classes.actions}>\n                <Button\n                  label=\"ra.action.create\"\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  type=\"submit\"\n                  disabled={submitting}\n                />\n                <Button label=\"ra.action.close\" variant=\"text\" onClick={onClose} />\n              </DialogActions>\n            </form>\n          )}\n        />\n      )}\n    </Dialog>\n  );\n};\n\nexport default QuickAppendDialog;\n","import React, { useState, useMemo } from 'react';\nimport { ReferenceArrayField as RaReferenceArrayField, usePermissionsOptimized } from 'react-admin';\nimport QuickAppendDialog from './QuickAppendDialog';\n\nconst QuickAppendReferenceArrayField = ({ record, reference, source, resource, ...otherProps }) => {\n  const [showDialog, setShowDialog] = useState(false);\n  const { permissions } = usePermissionsOptimized(record.id);\n\n  const canAppend = useMemo(\n    () => !!permissions && permissions.some(p => ['acl:Append', 'acl:Write', 'acl:Control'].includes(p['acl:mode'])),\n    [permissions]\n  );\n\n  if (record?.[source]) {\n    if (!Array.isArray(record[source])) {\n      record[source] = [record[source]];\n    }\n    record[source] = record[source].map(i => i['@id'] || i.id || i);\n  }\n\n  return (\n    <>\n      <RaReferenceArrayField\n        record={record}\n        reference={reference}\n        source={source}\n        resource={resource}\n        appendLink={canAppend ? () => setShowDialog(true) : undefined}\n        {...otherProps}\n      />\n      {canAppend && showDialog && (\n        <QuickAppendDialog\n          open={showDialog}\n          onClose={() => setShowDialog(false)}\n          subjectUri={record.id}\n          resource={resource}\n          source={source}\n          reference={reference}\n        />\n      )}\n    </>\n  );\n};\n\nQuickAppendReferenceArrayField.defaultProps = {\n  addLabel: true\n};\n\nexport default QuickAppendReferenceArrayField;\n","import React from 'react';\nimport { useRecordContext } from 'react-admin';\nimport { Chip, Avatar, makeStyles } from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { FiGitlab } from 'react-icons/fi';\n\nconst defaultdomainMapping = {\n  'github.com': {\n    label: 'GitHub',\n    icon: <GitHubIcon />,\n    color: 'black',\n    contrastText: 'white'\n  },\n  'gitlab.com': {\n    label: 'GitLab',\n    icon: <FiGitlab />,\n    color: 'orange',\n    contrastText: 'black'\n  },\n  'opencollective.com': {\n    label: 'Open Collective',\n    icon: <Avatar src=\"https://opencollective.com/static/images/opencollective-icon.svg\" />,\n    color: 'white',\n    contrastText: '#297EFF'\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'unset',\n    '& :hover': {\n      cursor: 'pointer'\n    }\n  },\n  chip: {\n    paddingLeft: 5,\n    paddingRight: 5,\n    marginRight: 5\n  },\n  label: {\n    marginTop: -1\n  }\n}));\n\nconst MultiUrlField = ({ source, domainMapping, ...rest }) => {\n  const newDomainMapping = { ...defaultdomainMapping, ...domainMapping };\n  const record = useRecordContext();\n  const classes = useStyles();\n  const urlArray = record[source] ? (Array.isArray(record[source]) ? record[source] : [record[source]]) : [];\n  return urlArray.map((url, index) => {\n    if (!url.startsWith('http')) url = 'https://' + url;\n    const parsedUrl = new URL(url);\n    if (!parsedUrl) return null;\n    const chip = newDomainMapping[parsedUrl.hostname] || {\n      label: 'Site web',\n      icon: <LanguageIcon />,\n      color: '#ea',\n      contrastText: 'black'\n    };\n    return (\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className={classes.link}>\n        <Chip\n          icon={React.cloneElement(chip.icon, { style: { color: chip.contrastText } })}\n          size=\"small\"\n          label={chip.label}\n          classes={{ root: classes.chip, label: classes.label }}\n          style={{ color: chip.contrastText, backgroundColor: chip.color }}\n          {...rest}\n        />\n      </a>\n    );\n  });\n};\n\nMultiUrlField.defaultProps = {\n  addLabel: true\n};\n\nexport default MultiUrlField;\n"],"names":["useStyles","makeStyles","theme","parent","props","position","square","width","paddingBottom","avatar","top","bottom","height","borderRadius","chip","left","right","paddingTop","paddingLeft","paddingRight","marginBottom","cursor","launchIcon","handleClick","AvatarWithLabelField","label","defaultLabel","image","fallback","externalLink","labelColor","classes","rest","record","useRecordContext","computedLabel","computedImage","computedFallback","React","Box","className","Avatar","src","alt","Chip","color","size","deleteIcon","LaunchIcon","onDelete","defaultProps","root","maxWidth","backgroundColor","palette","background","paper","primaryText","secondaryText","fontStyle","getServerName","resourceUri","dataServers","server","Object","values","find","startsWith","baseUrl","name","ResultsList","keyword","source","reference","appendLink","switchToCreate","useState","loading","setLoading","loaded","setLoaded","results","setResults","translate","useTranslate","dataProvider","useDataProvider","useDataServers","resources","useSelector","getResources","shallowEqual","referenceDefinition","useMemo","r","getResourceLabel","useGetResourceLabel","dataModel","useDataModel","keys","length","fieldsMapping","_dataModel$fieldsMapp","title","Error","search","debounce","getList","pagination","page","perPage","sort","field","_dataModel$fieldsMapp2","order","filter","q","_servers","then","data","existingLinks","Array","isArray","newLinks","includes","id","e","useEffect","cancel","List","dense","map","resource","ListItem","key","button","onClick","ListItemAvatar","createElement","icon","ListItemText","primary","ListItemSecondaryAction","href","linkToRecord","target","rel","IconButton","edge","VisibilityIcon","ErrorIcon","hasCreate","AddIcon","display","alignItems","justifyContent","CircularProgress","thickness","actions","padding","addForm","listForm","maxHeight","Input","meta","touched","error","inputProps","input","TextField","helperText","fullWidth","QuickAppendDialog","open","onClose","subjectUri","setKeyword","panel","setPanel","refresh","useRefresh","notify","useNotify","useCallback","objectUri","getOne","update","previousData","create","Dialog","DialogTitle","DialogContent","autoFocus","toLowerCase","variant","margin","value","onChange","DialogActions","Button","Form","onSubmit","initialValues","render","handleSubmit","submitting","Field","component","disabled","startIcon","type","QuickAppendReferenceArrayField","otherProps","showDialog","setShowDialog","permissions","usePermissionsOptimized","canAppend","some","p","i","RaReferenceArrayField","undefined","addLabel","defaultdomainMapping","GitHubIcon","contrastText","FiGitlab","link","textDecoration","marginRight","marginTop","MultiUrlField","domainMapping","newDomainMapping","url","index","parsedUrl","URL","hostname","LanguageIcon","cloneElement","style"],"mappings":"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"}