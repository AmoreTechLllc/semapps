{"version":3,"file":"index.es.js","sources":["../src/QuickAppendReferenceArrayField/ResultsList.js","../src/QuickAppendReferenceArrayField/QuickAppendDialog.js","../src/QuickAppendReferenceArrayField/QuickAppendReferenceArrayField.js","../src/MultiUrlField.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react';\nimport {\n  getResources,\n  useDataProvider,\n  useRecordContext,\n  linkToRecord,\n  useGetResourceLabel,\n  useTranslate\n} from 'react-admin';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport debounce from 'lodash.debounce';\nimport {\n  Box,\n  IconButton,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  Avatar,\n  makeStyles,\n  CircularProgress\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { useDataServers, useDataModel } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  primaryText: {\n    width: '30%'\n  },\n  secondaryText: {\n    fontStyle: 'italic',\n    color: 'grey'\n  }\n}));\n\nconst getServerName = (resourceUri, dataServers) => {\n  const server = dataServers && Object.values(dataServers).find(server => resourceUri.startsWith(server.baseUrl));\n  return server ? server.name : 'Inconnu';\n};\n\nconst ResultsList = ({ keyword, source, reference, appendLink, switchToCreate }) => {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [results, setResults] = useState([]);\n  const translate = useTranslate();\n  const dataProvider = useDataProvider();\n  const dataServers = useDataServers();\n  const record = useRecordContext();\n\n  const resources = useSelector(getResources, shallowEqual);\n  const referenceDefinition = useMemo(() => {\n    return resources.find(r => r.name === reference);\n  }, [resources, reference]);\n  const getResourceLabel = useGetResourceLabel();\n  const dataModel = useDataModel(reference);\n\n  if (dataModel && Object.keys(dataModel).length > 0 && !dataModel?.fieldsMapping?.title) {\n    throw new Error(`No fieldsMapping.title config found for ${reference} dataModel`);\n  }\n\n  const search = useMemo(\n    () =>\n      debounce(keyword => {\n        dataProvider\n          .getList(reference, {\n            pagination: { page: 1, perPage: 100 },\n            sort: { field: dataModel?.fieldsMapping?.title, order: 'ASC' },\n            filter: { q: keyword }\n          })\n          .then(({ data }) => {\n            const existingLinks = record[source]\n              ? Array.isArray(record[source])\n                ? record[source]\n                : [record[source]]\n              : [];\n            const newLinks = data.filter(record => !existingLinks.includes(record.id));\n            setResults(newLinks);\n            setLoaded(true);\n            setLoading(false);\n          })\n          .catch(e => {\n            setLoading(false);\n          });\n      }, 700),\n    [dataProvider, dataModel, record, source, reference, setResults, setLoading, setLoaded]\n  );\n\n  useEffect(() => {\n    if (!keyword) {\n      return undefined;\n    } else {\n      setLoading(true);\n      setLoaded(false);\n      search(keyword);\n    }\n    return () => search.cancel();\n  }, [keyword, search, setLoading]);\n\n  if (!keyword) return null;\n\n  return (\n    <List dense className={classes.root}>\n      {loaded &&\n        results.map(resource => (\n          <ListItem key={resource.id} button onClick={() => appendLink(resource.id)}>\n            <ListItemAvatar>\n              <Avatar>{React.createElement(referenceDefinition.icon)}</Avatar>\n            </ListItemAvatar>\n            <ListItemText className={classes.primaryText} primary={resource[dataModel.fieldsMapping.title]} />\n            <ListItemText className={classes.secondaryText} primary={getServerName(resource.id, dataServers)} />\n            <ListItemSecondaryAction>\n              <a href={linkToRecord('/' + reference, resource.id, 'show')} target=\"_blank\" rel=\"noopener noreferrer\">\n                <IconButton edge=\"end\">\n                  <VisibilityIcon />\n                </IconButton>\n              </a>\n            </ListItemSecondaryAction>\n          </ListItem>\n        ))}\n      {loaded && results.length === 0 && (\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <ErrorIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText className={classes.primaryText} primary={translate('ra.navigation.no_results')} />\n        </ListItem>\n      )}\n      {loaded && referenceDefinition.hasCreate && (\n        <ListItem button onClick={switchToCreate}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            className={classes.primaryText}\n            primary={translate('ra.page.create', { name: getResourceLabel(reference, 1) })}\n          />\n        </ListItem>\n      )}\n      {loading && (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\" height={150}>\n          <CircularProgress size={60} thickness={6} />\n        </Box>\n      )}\n    </List>\n  );\n};\n\nexport default ResultsList;\n","import React, { useState, useCallback } from 'react';\nimport { Button, useDataProvider, useTranslate, useRefresh, useNotify, useGetResourceLabel } from 'react-admin';\nimport { Dialog, DialogTitle, TextField, DialogContent, DialogActions, makeStyles } from '@material-ui/core';\nimport { Field, Form } from 'react-final-form';\nimport AddIcon from '@material-ui/icons/Add';\nimport ResultsList from './ResultsList';\nimport { useDataModel } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(() => ({\n  title: {\n    paddingBottom: 8\n  },\n  actions: {\n    padding: 15\n  },\n  addForm: {\n    paddingTop: 0\n  },\n  listForm: {\n    paddingLeft: 8,\n    paddingRight: 8,\n    paddingTop: 0,\n    paddingBottom: 0,\n    maxHeight: 210\n  }\n}));\n\nconst Input = ({ meta: { touched, error }, input: inputProps, ...props }) => (\n  <TextField error={!!(touched && error)} helperText={touched && error} {...inputProps} {...props} fullWidth />\n);\n\nconst QuickAppendDialog = ({ open, onClose, subjectUri, resource, source, reference }) => {\n  const classes = useStyles();\n  const [keyword, setKeyword] = useState('');\n  const [panel, setPanel] = useState('find');\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  const refresh = useRefresh();\n  const notify = useNotify();\n  const getResourceLabel = useGetResourceLabel();\n  const dataModel = useDataModel(reference);\n\n  const appendLink = useCallback(\n    async objectUri => {\n      // Get the freshest data so that the put operation doesn't overwrite anything\n      const { data } = await dataProvider.getOne(resource, { id: subjectUri });\n\n      await dataProvider.update(resource, {\n        id: subjectUri,\n        data: {\n          ...data,\n          [source]: data[source]\n            ? Array.isArray(data[source])\n              ? [...data[source], objectUri]\n              : [data[source], objectUri]\n            : objectUri\n        },\n        previousData: data\n      });\n\n      refresh();\n\n      onClose();\n    },\n    [dataProvider, subjectUri, resource, source, refresh, onClose]\n  );\n\n  const create = useCallback(\n    async values => {\n      const { data } = await dataProvider.create(reference, {\n        data: {\n          [dataModel.fieldsMapping.title]: values.title\n        }\n      });\n\n      await appendLink(data.id);\n\n      notify(`La resource \"${values.title}\" a été créée`, 'success');\n    },\n    [dataProvider, dataModel, appendLink, reference, notify]\n  );\n\n  return (\n    <Dialog fullWidth open={open} onClose={onClose}>\n      {panel === 'find' ? (\n        <>\n          <DialogTitle className={classes.title}>Ajouter une relation</DialogTitle>\n          <DialogContent className={classes.addForm}>\n            <TextField\n              autoFocus\n              label={'Rechercher ou créer des ' + getResourceLabel(reference, 2).toLowerCase()}\n              variant=\"filled\"\n              margin=\"dense\"\n              value={keyword}\n              onChange={e => setKeyword(e.target.value)}\n              fullWidth\n            />\n          </DialogContent>\n          <DialogContent className={classes.listForm}>\n            <ResultsList\n              keyword={keyword}\n              source={source}\n              reference={reference}\n              appendLink={appendLink}\n              switchToCreate={() => setPanel('create')}\n            />\n          </DialogContent>\n          <DialogActions className={classes.actions}>\n            <Button label=\"ra.action.close\" variant=\"text\" onClick={onClose} />\n          </DialogActions>\n        </>\n      ) : (\n        <Form\n          onSubmit={create}\n          initialValues={{\n            title: keyword\n          }}\n          render={({ handleSubmit, submitting }) => (\n            <form onSubmit={handleSubmit}>\n              <DialogTitle className={classes.title}>\n                {translate('ra.page.create', { name: getResourceLabel(reference, 1) })}\n              </DialogTitle>\n              <DialogContent className={classes.addForm}>\n                <Field\n                  autoFocus\n                  id=\"title\"\n                  name=\"title\"\n                  component={Input}\n                  label=\"Titre\"\n                  disabled={submitting}\n                  variant=\"filled\"\n                  margin=\"dense\"\n                />\n              </DialogContent>\n              <DialogActions className={classes.actions}>\n                <Button\n                  label=\"ra.action.create\"\n                  variant=\"contained\"\n                  startIcon={<AddIcon />}\n                  type=\"submit\"\n                  disabled={submitting}\n                />\n                <Button label=\"ra.action.close\" variant=\"text\" onClick={onClose} />\n              </DialogActions>\n            </form>\n          )}\n        />\n      )}\n    </Dialog>\n  );\n};\n\nexport default QuickAppendDialog;\n","import React, { useState, useMemo } from 'react';\nimport { ReferenceArrayField as RaReferenceArrayField, usePermissionsOptimized } from 'react-admin';\nimport QuickAppendDialog from './QuickAppendDialog';\n\nconst QuickAppendReferenceArrayField = ({ record, reference, source, resource, ...otherProps }) => {\n  const [showDialog, setShowDialog] = useState(false);\n  const { permissions } = usePermissionsOptimized(record.id);\n\n  const canAppend = useMemo(\n    () => !!permissions && permissions.some(p => ['acl:Append', 'acl:Write', 'acl:Control'].includes(p['acl:mode'])),\n    [permissions]\n  );\n\n  if (record?.[source]) {\n    if (!Array.isArray(record[source])) {\n      record[source] = [record[source]];\n    }\n    record[source] = record[source].map(i => i['@id'] || i.id || i);\n  }\n\n  return (\n    <>\n      <RaReferenceArrayField\n        record={record}\n        reference={reference}\n        source={source}\n        resource={resource}\n        appendLink={canAppend ? () => setShowDialog(true) : undefined}\n        {...otherProps}\n      />\n      {canAppend && showDialog && (\n        <QuickAppendDialog\n          open={showDialog}\n          onClose={() => setShowDialog(false)}\n          subjectUri={record.id}\n          resource={resource}\n          source={source}\n          reference={reference}\n        />\n      )}\n    </>\n  );\n};\n\nQuickAppendReferenceArrayField.defaultProps = {\n  addLabel: true\n};\n\nexport default QuickAppendReferenceArrayField;\n","import React from 'react';\nimport { useRecordContext } from 'react-admin';\nimport { Chip, makeStyles } from '@material-ui/core';\nimport LanguageIcon from '@material-ui/icons/Language';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport { FiGitlab } from 'react-icons/fi';\n\nconst defaultdomainMapping = {\n  'github.com': {\n    label: 'GitHub',\n    icon: <GitHubIcon />,\n    color: 'black',\n    contrastText: 'white'\n  },\n  'gitlab.com': {\n    label: 'GitLab',\n    icon: <FiGitlab />,\n    color: 'orange',\n    contrastText: 'black'\n  }\n};\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'unset',\n    '& :hover': {\n      cursor: 'pointer'\n    }\n  },\n  chip: {\n    paddingLeft: 5,\n    paddingRight: 5,\n    marginRight: 5\n  },\n  label: {\n    marginTop: -1\n  }\n}));\n\nconst MultiUrlField = ({ source, domainMapping, ...rest }) => {\n  const newDomainMapping = { ...defaultdomainMapping, ... domainMapping}\n  const record = useRecordContext();\n  const classes = useStyles();\n  const urlArray = record[source] ? (Array.isArray(record[source]) ? record[source] : [record[source]]) : [];\n  return urlArray.map(url => {\n    if (!url.startsWith('http')) url = 'https://' + url;\n    const parsedUrl = new URL(url);\n    if (!parsedUrl) return null;\n    const chip = newDomainMapping[parsedUrl.hostname] || {\n      label: 'Site web',\n      icon: <LanguageIcon />,\n      color: '#ea',\n      contrastText: 'black'\n    };\n    return (\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\" className={classes.link}>\n        <Chip\n          icon={React.cloneElement(chip.icon, { style: { color: chip.contrastText } })}\n          size=\"small\"\n          label={chip.label}\n          classes={{ root: classes.chip, label: classes.label }}\n          style={{ color: chip.contrastText, backgroundColor: chip.color }}\n          {...rest}\n        />\n      </a>\n    );\n  });\n};\n\nMultiUrlField.defaultProps = {\n  addLabel: true\n};\n\nexport default MultiUrlField;\n"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","paddingTop","paddingBottom","primaryText","secondaryText","fontStyle","color","getServerName","resourceUri","dataServers","server","Object","values","find","startsWith","baseUrl","name","ResultsList","keyword","source","reference","appendLink","switchToCreate","classes","useState","loading","setLoading","loaded","setLoaded","results","setResults","translate","useTranslate","dataProvider","useDataProvider","useDataServers","record","useRecordContext","resources","useSelector","getResources","shallowEqual","referenceDefinition","useMemo","r","getResourceLabel","useGetResourceLabel","dataModel","useDataModel","keys","length","fieldsMapping","_dataModel$fieldsMapp","title","Error","search","debounce","getList","pagination","page","perPage","sort","field","_dataModel$fieldsMapp2","order","filter","q","then","data","existingLinks","Array","isArray","newLinks","includes","id","e","useEffect","cancel","React","List","dense","className","map","resource","ListItem","key","button","onClick","ListItemAvatar","Avatar","createElement","icon","ListItemText","primary","ListItemSecondaryAction","href","linkToRecord","target","rel","IconButton","edge","VisibilityIcon","ErrorIcon","hasCreate","AddIcon","Box","display","alignItems","justifyContent","height","CircularProgress","size","thickness","actions","padding","addForm","listForm","paddingLeft","paddingRight","maxHeight","Input","meta","touched","error","inputProps","input","props","TextField","helperText","fullWidth","QuickAppendDialog","open","onClose","subjectUri","setKeyword","panel","setPanel","refresh","useRefresh","notify","useNotify","useCallback","objectUri","getOne","update","previousData","create","Dialog","DialogTitle","DialogContent","autoFocus","label","toLowerCase","variant","margin","value","onChange","DialogActions","Button","Form","onSubmit","initialValues","render","handleSubmit","submitting","Field","component","disabled","startIcon","type","QuickAppendReferenceArrayField","otherProps","showDialog","setShowDialog","permissions","usePermissionsOptimized","canAppend","some","p","i","RaReferenceArrayField","undefined","defaultProps","addLabel","defaultdomainMapping","GitHubIcon","contrastText","FiGitlab","link","textDecoration","cursor","chip","marginRight","marginTop","MultiUrlField","domainMapping","rest","newDomainMapping","url","parsedUrl","URL","hostname","LanguageIcon","Chip","cloneElement","style"],"mappings":"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"}