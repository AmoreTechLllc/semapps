{"version":3,"file":"index.cjs.js","sources":["../src/ChipList.js","../src/GridList.js","../src/MasonryList.js","../src/ReferenceFilter.js","../src/MultiViewsList/ListViewContext.js","../src/MultiViewsList/ViewsButtons.js","../src/MultiViewsList/ListActionsWithViews.js","../src/MultiViewsList/MultiViewsList.js"],"sourcesContent":["import React from 'react';\nimport {\n  ChipField,\n  useResourceContext,\n  useListContext,\n  sanitizeListRestProps,\n  linkToRecord,\n  RecordContextProvider,\n  Link\n} from 'react-admin';\nimport { LinearProgress } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  link: {\n    textDecoration: 'none',\n    maxWidth: '100%'\n  },\n  chipField: {\n    maxWidth: '100%'\n  },\n  addIcon: {\n    cursor: 'pointer',\n    fontSize: 35,\n    position: 'relative',\n    top: -2,\n    left: -2\n  },\n  launchIcon: {\n    width: 16,\n    paddingRight: 6,\n    marginLeft: -10\n  }\n}));\n\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst ChipList = props => {\n  const {\n    classes: classesOverride,\n    className,\n    children,\n    linkType = 'edit',\n    component = 'div',\n    primaryText,\n    appendLink,\n    externalLinks = false,\n    ...rest\n  } = props;\n  const { ids, data, isLoading, basePath } = useListContext(props);\n  const resource = useResourceContext(props);\n  const getExternalLink = useGetExternalLink(externalLinks);\n\n  const classes = useStyles(props);\n  const Component = component;\n\n  if (isLoading === true) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <Component className={classes.root} {...sanitizeListRestProps(rest)}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const externalLink = getExternalLink(data[id]);\n        if (externalLink) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <a\n                href={externalLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classes.link}\n                onClick={stopPropagation}\n              >\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  deleteIcon={<LaunchIcon className={classes.launchIcon} />}\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                  // Required to display the delete icon\n                  onDelete={handleClick}\n                />\n              </a>\n            </RecordContextProvider>\n          );\n        } else if (linkType) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <Link className={classes.link} to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                />\n              </Link>\n            </RecordContextProvider>\n          );\n        } else {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <ChipField\n                record={data[id]}\n                resource={resource}\n                basePath={basePath}\n                source={primaryText}\n                className={classes.chipField}\n                color=\"secondary\"\n                // Workaround to force ChipField to be clickable\n                onClick={handleClick}\n              />\n            </RecordContextProvider>\n          );\n        }\n      })}\n      {appendLink && <AddCircleIcon color=\"primary\" className={classes.addIcon} onClick={appendLink} />}\n    </Component>\n  );\n};\n\nexport default ChipList;\n","import * as React from 'react';\nimport { useListContext, linkToRecord, Link, RecordContextProvider } from 'react-admin';\nimport { Grid } from '@mui/material';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst ImageList = ({ children, linkType, externalLinks, spacing, xs, sm, md, lg, xl }) => {\n  const { ids, data, basePath } = useListContext();\n  const getExternalLink = useGetExternalLink(externalLinks);\n  return (\n    <Grid container spacing={spacing}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const externalLink = getExternalLink(data[id]);\n        let child;\n\n        if (externalLink) {\n          child = (\n            <a href={externalLink} target=\"_blank\" rel=\"noopener noreferrer\" onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath: children.props.basePath || basePath,\n                externalLink: true,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </a>\n          );\n        } else if (linkType) {\n          child = (\n            <Link to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath: children.props.basePath || basePath,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </Link>\n          );\n        } else {\n          child = React.cloneElement(React.Children.only(children), {\n            record: data[id],\n            basePath: children.props.basePath || basePath\n          });\n        }\n\n        return (\n          <Grid item key={id} xs={xs} sm={sm} md={md} lg={lg} xl={xl}>\n            <RecordContextProvider value={data[id]} key={id}>\n              {child}\n            </RecordContextProvider>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nImageList.defaultProps = {\n  xs: 6,\n  spacing: 3,\n  linkType: 'edit',\n  externalLinks: false\n};\n\nexport default ImageList;\n","import React from 'react';\nimport { useListContext, Link, linkToRecord } from 'react-admin';\nimport { Card, CardActionArea, CardMedia, CardContent, CardActions } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Masonry from 'react-masonry-css';\n\nconst useStyles = makeStyles(() => ({\n  grid: {\n    display: 'flex',\n    marginLeft: -20,\n    marginBottom: -20,\n    width: 'auto'\n  },\n  column: {\n    paddingLeft: 20,\n    backgroundClip: 'padding-box'\n  },\n  card: {\n    marginBottom: 20\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n  }\n}));\n\n/**\n * @example\n * <List component=\"div\" perPage={50} {...props}>\n *   <MasonryList\n *     image={record => record.image}\n *     content={record => (\n *       <>\n *         <Typography variant=\"subtitle1\">{record.title}</Typography>\n *         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{record.description}</Typography>\n *       </>\n *     )}\n *     linkType=\"show\"\n *   />\n * </List>\n */\nconst MasonryList = ({ image, content, actions, breakpointCols, linkType }) => {\n  const classes = useStyles();\n  const { ids, data, basePath } = useListContext();\n  return (\n    <Masonry breakpointCols={breakpointCols} className={classes.grid} columnClassName={classes.column}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const imageUrl = typeof image === 'function' ? image(data[id]) : image;\n        return (\n          <Card key={id} className={classes.card}>\n            <Link to={linkToRecord(basePath, id) + '/' + linkType}>\n              <CardActionArea>\n                {imageUrl && <CardMedia className={classes.media} image={imageUrl} />}\n                {content && <CardContent>{content(data[id])}</CardContent>}\n              </CardActionArea>\n            </Link>\n            {actions && (\n              <CardActions>\n                {actions.map(action => React.createElement(action, { record: data[id], basePath }))}\n              </CardActions>\n            )}\n          </Card>\n        );\n      })}\n    </Masonry>\n  );\n};\n\nMasonryList.defaultProps = {\n  breakpointCols: { default: 3, 1050: 2, 700: 1 },\n  linkType: 'edit'\n};\n\nexport default MasonryList;\n","import React, { useEffect } from 'react';\nimport { FilterList, FilterListItem, useGetList, useResourceContext, useListContext, useResourceDefinition } from 'react-admin';\nimport { useContainers, useDataModel } from '@semapps/semantic-data-provider';\n\n/**\n * @example\n * const FilterAside = () => (\n *   <Card>\n *     <CardContent>\n *       <FilterLiveSearch source=\"pair:label\" />\n *       <ReferenceFilter reference=\"Theme\" source=\"pair:hasTopic\" inverseSource=\"pair:topicOf\" />\n *       <ReferenceFilter reference=\"Skill\" source=\"pair:offers\" inverseSource=\"pair:offeredBy\" />\n *     </CardContent>\n *   </Card>\n * );\n */\n\nconst ReferenceFilterCounter = ({ source, id }) => {\n  const resourceContext = useResourceContext();\n  const { data, isLoading } = useGetList(resourceContext);\n  return (\n    <>\n      &nbsp;\n      { ! isLoading &&\n        <span className=\"filter-count\">{'(' + Object.values(data).filter(d => ([].concat(d[source])).includes(id)).length + ')'}</span>\n      }\n    </>\n  );\n};\n\nconst ReferenceFilter = ({ reference, source, inverseSource, limit, sort, filter, label, icon, showCounters }) => {\n  const { data, isLoading } = useGetList(reference, { page: 1, perPage: limit }, sort, filter);\n  const currentResource = useResourceDefinition({resource: reference});\n  const resourceContext = useResourceContext();\n  const resourceContextDataModel = useDataModel(resourceContext);\n  const resourceContextContainers = useContainers(resourceContext);\n\n  const {\n    displayedFilters,\n    filterValues,\n    setFilters,\n    hideFilter\n  } = useListContext();\n  useEffect(() => {\n    // Needed when filter item is active and its last relation is removed\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n    if (! params.filter && ! isLoading) {\n      setFilters({});\n    }\n  }, []);\n  \n  const itemIsUsed = (itemData) => {\n    if (!inverseSource) {\n      return true;\n    }\n    if (!resourceContextContainers || !itemData) {\n      return false;\n    }\n    let itemIsUsed = false;\n    Object.values(resourceContextContainers).forEach(value => {\n      value.forEach(containerUrl => {\n        [].concat(itemData[inverseSource]).forEach(inverseSourceData => {\n          if (inverseSourceData?.startsWith(containerUrl)) {\n            itemIsUsed = true;\n          }\n        })\n      })\n    });\n    return itemIsUsed;\n  }\n  \n  return (\n    <FilterList\n      label={label || currentResource?.options?.label || ''}\n      icon={icon || currentResource?.icon ? React.createElement(currentResource.icon) : undefined}\n    >\n      {data && data\n        .filter(itemData => itemIsUsed(itemData))\n        .map(itemData => (\n          <FilterListItem\n            key={itemData.id}\n            label={\n              <span className=\"filter-label\">\n                {itemData['pair:label']}\n                {showCounters && <ReferenceFilterCounter source={source} id={itemData.id} />}\n              </span>\n            }\n            value={{ [source]: itemData.id }}\n          />\n        ))}\n    </FilterList>\n  );\n};\n\nReferenceFilter.defaultProps = {\n  limit: 25,\n  showCounters: true\n};\n\nexport default ReferenceFilter;\n","import React from 'react';\n\nconst ListViewContext = React.createContext({ views: null, currentView: null, setView: () => null });\n\nexport default ListViewContext;\n","import React from 'react';\nimport { Button, Link } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport ListViewContext from './ListViewContext';\n\nconst ViewsButtons = () => {\n  const query = new URLSearchParams(useLocation().search);\n  const { views, currentView, setView } = React.useContext(ListViewContext);\n  return views\n    ? Object.entries(views)\n        .filter(([key]) => key !== currentView)\n        .map(([key, view]) => {\n          query.set('view', key);\n          query.set('page', 1);\n          query.set('perPage', view.perPage);\n          if (view.sort) {\n            query.set('sort', view.sort.field);\n            query.set('order', view.sort.order);\n          }\n          return (\n            <Link key={key} to={'?' + query.toString()}>\n              <Button onClick={() => setView(key)} label={view.label}>\n                {React.createElement(view.icon)}\n              </Button>\n            </Link>\n          );\n        })\n    : null;\n};\n\nexport default ViewsButtons;\n","import React from 'react';\nimport { CreateButton, ExportButton, useResourceDefinition, TopToolbar } from 'react-admin';\nimport { useMediaQuery } from '@mui/material';\nimport ViewsButtons from './ViewsButtons';\nimport { useTheme } from 'react-admin';\n\nconst ListActionsWithViews = ({\n  bulkActions,\n  basePath,\n  currentSort,\n  displayedFilters,\n  exporter,\n  filters,\n  filterValues,\n  onUnselectItems,\n  resource,\n  selectedIds,\n  showFilter,\n  total,\n  ...rest\n}) => {\n  const [theme] = useTheme();\n  const xs = useMediaQuery(() => theme.breakpoints.down('sm'));\n  const resourceDefinition = useResourceDefinition(rest);\n  return (\n    <TopToolbar>\n      <ViewsButtons />\n      {filters &&\n        React.cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button'\n        })}\n      {resourceDefinition.hasCreate && <CreateButton basePath={basePath} />}\n      {!xs && exporter !== false && (\n        <ExportButton\n          disabled={total === 0}\n          resource={resource}\n          sort={currentSort}\n          filter={filterValues}\n          exporter={exporter}\n        />\n      )}\n      {bulkActions &&\n        React.cloneElement(bulkActions, {\n          basePath,\n          filterValues,\n          resource,\n          selectedIds,\n          onUnselectItems\n        })}\n    </TopToolbar>\n  );\n};\n\nexport default ListActionsWithViews;\n","import React, { useState } from 'react';\nimport { List } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport ListActionsWithViews from './ListActionsWithViews';\nimport ListViewContext from './ListViewContext';\n\nconst MultiViewsList = ({ children, actions, views, ListComponent, ...otherProps }) => {\n  const query = new URLSearchParams(useLocation().search);\n  const initialView = query.has('view') ? query.get('view') : Object.keys(views)[0];\n  const [currentView, setView] = useState(initialView);\n  return (\n    <ListViewContext.Provider value={{ views, currentView, setView }}>\n      <ListComponent\n        actions={actions}\n        pagination={views[currentView].pagination}\n        // Set initial values, but use the query string to change these values to avoid a complete refresh\n        perPage={views[initialView].perPage}\n        sort={views[initialView].sort}\n        {...otherProps}\n      >\n        {views[currentView].list}\n      </ListComponent>\n    </ListViewContext.Provider>\n  );\n};\n\nMultiViewsList.defaultProps = {\n  actions: <ListActionsWithViews />,\n  ListComponent: List\n};\n\nexport default MultiViewsList;\n"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","link","textDecoration","maxWidth","chipField","addIcon","cursor","fontSize","position","top","left","launchIcon","width","paddingRight","marginLeft","stopPropagation","e","handleClick","ImageList","_ref","children","linkType","externalLinks","spacing","xs","sm","md","lg","xl","_useListContext","useListContext","ids","data","basePath","getExternalLink","useGetExternalLink","React","Grid","container","map","id","child","externalLink","createElement","href","target","rel","onClick","cloneElement","Children","only","record","props","Link","to","linkToRecord","item","key","RecordContextProvider","value","defaultProps","grid","marginBottom","column","paddingLeft","backgroundClip","card","media","height","paddingTop","MasonryList","image","content","actions","breakpointCols","classes","Masonry","className","columnClassName","imageUrl","Card","CardActionArea","CardMedia","CardContent","CardActions","action","default","1050","700","ReferenceFilterCounter","source","resourceContext","useResourceContext","useGetList","isLoading","Fragment","Object","values","filter","d","concat","includes","length","ReferenceFilter","_ref2","_currentResource$opti","reference","inverseSource","limit","sort","label","icon","showCounters","page","perPage","currentResource","useResourceDefinition","resource","useDataModel","resourceContextContainers","useContainers","displayedFilters","filterValues","setFilters","hideFilter","useEffect","urlSearchParams","URLSearchParams","window","location","search","fromEntries","entries","FilterList","options","undefined","itemData","itemIsUsed","forEach","containerUrl","inverseSourceData","startsWith","FilterListItem","ListViewContext","createContext","views","currentView","setView","ViewsButtons","query","useLocation","_React$useContext","useContext","_slicedToArray","_ref3","_ref4","view","set","field","order","toString","Button","ListActionsWithViews","bulkActions","currentSort","exporter","filters","onUnselectItems","selectedIds","showFilter","total","rest","_objectWithoutProperties","_excluded","useTheme","useMediaQuery","breakpoints","down","resourceDefinition","TopToolbar","context","hasCreate","CreateButton","ExportButton","disabled","MultiViewsList","ListComponent","otherProps","initialView","has","get","keys","_useState2","useState","Provider","_extends","pagination","list","List","_props$linkType","component","_props$component","primaryText","appendLink","_props$externalLinks","Component","LinearProgress","sanitizeListRestProps","ChipField","color","deleteIcon","LaunchIcon","onDelete","AddCircleIcon"],"mappings":"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"}