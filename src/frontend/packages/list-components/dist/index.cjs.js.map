{"version":3,"file":"index.cjs.js","sources":["../src/ChipList.js","../src/GridList.js"],"sourcesContent":["import React from 'react';\nimport {\n  ChipField,\n  useResourceContext,\n  useListContext,\n  sanitizeListRestProps,\n  linkToRecord,\n  RecordContextProvider,\n  Link\n} from 'react-admin';\nimport { makeStyles, LinearProgress } from '@material-ui/core';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  link: {\n    textDecoration: 'none',\n    maxWidth: '100%'\n  },\n  chipField: {\n    maxWidth: '100%'\n  },\n  addIcon: {\n    cursor: 'pointer',\n    fontSize: 35,\n    position: 'relative',\n    top: -2,\n    left: -2\n  },\n  launchIcon: {\n    width: 16,\n    paddingRight: 6,\n    marginLeft: -10\n  }\n}));\n\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst ChipList = props => {\n  const {\n    classes: classesOverride,\n    className,\n    children,\n    linkType = 'edit',\n    component = 'div',\n    primaryText,\n    appendLink,\n    externalLinks = false,\n    ...rest\n  } = props;\n  const { ids, data, loaded, basePath } = useListContext(props);\n  const resource = useResourceContext(props);\n  const getExternalLink = useGetExternalLink(externalLinks);\n\n  const classes = useStyles(props);\n  const Component = component;\n\n  if (loaded === false) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <Component className={classes.root} {...sanitizeListRestProps(rest)}>\n      {ids.map(id => {\n        if (!data[id]) return null;\n        const externalLink = getExternalLink(data[id]);\n        if (externalLink) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <a\n                href={externalLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classes.link}\n                onClick={stopPropagation}\n              >\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  deleteIcon={<LaunchIcon className={classes.launchIcon} />}\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                  // Required to display the delete icon\n                  onDelete={handleClick}\n                />\n              </a>\n            </RecordContextProvider>\n          );\n        } else if (linkType) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <Link className={classes.link} to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                />\n              </Link>\n            </RecordContextProvider>\n          );\n        } else {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <ChipField\n                record={data[id]}\n                resource={resource}\n                basePath={basePath}\n                source={primaryText}\n                className={classes.chipField}\n                color=\"secondary\"\n                // Workaround to force ChipField to be clickable\n                onClick={handleClick}\n              />\n            </RecordContextProvider>\n          );\n        }\n      })}\n      {appendLink && <AddCircleIcon color=\"primary\" className={classes.addIcon} onClick={appendLink} />}\n    </Component>\n  );\n};\n\nexport default ChipList;\n","import * as React from 'react';\nimport { useListContext, linkToRecord, Link, RecordContextProvider } from 'react-admin';\nimport { Grid } from '@material-ui/core';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst GridList = ({ children, linkType, externalLinks, spacing, xs, sm, md, lg, xl }) => {\n  const { ids, data, basePath } = useListContext();\n  const getExternalLink = useGetExternalLink(externalLinks);\n  return (\n    <Grid container spacing={spacing}>\n      {ids.map(id => {\n        if (!data[id]) return null;\n        const externalLink = getExternalLink(data[id]);\n        let child;\n\n        if (externalLink) {\n          child = (\n            <a href={externalLink} target=\"_blank\" rel=\"noopener noreferrer\" onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath,\n                externalLink: true,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </a>\n          );\n        } else if (linkType) {\n          child = (\n            <Link to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </Link>\n          );\n        } else {\n          child = React.cloneElement(React.Children.only(children), {\n            record: data[id],\n            basePath\n          });\n        }\n\n        return (\n          <Grid item key={id} xs={xs} sm={sm} md={md} lg={lg} xl={xl}>\n            <RecordContextProvider value={data[id]} key={id}>\n              {child}\n            </RecordContextProvider>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nGridList.defaultProps = {\n  xs: 6,\n  spacing: 3,\n  linkType: 'edit',\n  externalLinks: false\n};\n\nexport default GridList;\n"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","link","textDecoration","maxWidth","chipField","addIcon","cursor","fontSize","position","top","left","launchIcon","width","paddingRight","marginLeft","stopPropagation","e","handleClick","GridList","children","linkType","externalLinks","spacing","xs","sm","md","lg","xl","useListContext","ids","data","basePath","getExternalLink","useGetExternalLink","React","Grid","container","map","id","child","externalLink","href","target","rel","onClick","cloneElement","Children","only","record","Link","to","linkToRecord","item","key","RecordContextProvider","value","defaultProps","props","classes","className","component","primaryText","appendLink","rest","loaded","resource","useResourceContext","Component","LinearProgress","sanitizeListRestProps","ChipField","source","color","deleteIcon","LaunchIcon","onDelete","AddCircleIcon"],"mappings":"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"}