{"version":3,"file":"index.es.js","sources":["../src/ChipList.js","../src/GridList.js","../src/MasonryList.js","../src/ReferenceFilter.js","../src/MultiViewsList/ListViewContext.js","../src/MultiViewsList/ViewsButtons.js","../src/MultiViewsList/ListActionsWithViews.js","../src/MultiViewsList/MultiViewsList.js"],"sourcesContent":["import React from 'react';\nimport {\n  ChipField,\n  useResourceContext,\n  useListContext,\n  sanitizeListRestProps,\n  linkToRecord,\n  RecordContextProvider,\n  Link\n} from 'react-admin';\nimport { LinearProgress } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport LaunchIcon from '@mui/icons-material/Launch';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  link: {\n    textDecoration: 'none',\n    maxWidth: '100%'\n  },\n  chipField: {\n    maxWidth: '100%'\n  },\n  addIcon: {\n    cursor: 'pointer',\n    fontSize: 35,\n    position: 'relative',\n    top: -2,\n    left: -2\n  },\n  launchIcon: {\n    width: 16,\n    paddingRight: 6,\n    marginLeft: -10\n  }\n}));\n\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst ChipList = props => {\n  const {\n    classes: classesOverride,\n    className,\n    children,\n    linkType = 'edit',\n    component = 'div',\n    primaryText,\n    appendLink,\n    externalLinks = false,\n    ...rest\n  } = props;\n  const { ids, data, isLoading, basePath } = useListContext(props);\n  const resource = useResourceContext(props);\n  const getExternalLink = useGetExternalLink(externalLinks);\n\n  const classes = useStyles(props);\n  const Component = component;\n\n  if (isLoading === true) {\n    return <LinearProgress />;\n  }\n\n  return (\n    <Component className={classes.root} {...sanitizeListRestProps(rest)}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const externalLink = getExternalLink(data[id]);\n        if (externalLink) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <a\n                href={externalLink}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className={classes.link}\n                onClick={stopPropagation}\n              >\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  deleteIcon={<LaunchIcon className={classes.launchIcon} />}\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                  // Required to display the delete icon\n                  onDelete={handleClick}\n                />\n              </a>\n            </RecordContextProvider>\n          );\n        } else if (linkType) {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <Link className={classes.link} to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n                <ChipField\n                  record={data[id]}\n                  resource={resource}\n                  basePath={basePath}\n                  source={primaryText}\n                  className={classes.chipField}\n                  color=\"secondary\"\n                  // Workaround to force ChipField to be clickable\n                  onClick={handleClick}\n                />\n              </Link>\n            </RecordContextProvider>\n          );\n        } else {\n          return (\n            <RecordContextProvider value={data[id]} key={id}>\n              <ChipField\n                record={data[id]}\n                resource={resource}\n                basePath={basePath}\n                source={primaryText}\n                className={classes.chipField}\n                color=\"secondary\"\n                // Workaround to force ChipField to be clickable\n                onClick={handleClick}\n              />\n            </RecordContextProvider>\n          );\n        }\n      })}\n      {appendLink && <AddCircleIcon color=\"primary\" className={classes.addIcon} onClick={appendLink} />}\n    </Component>\n  );\n};\n\nexport default ChipList;\n","import * as React from 'react';\nimport { useListContext, linkToRecord, Link, RecordContextProvider } from 'react-admin';\nimport { Grid } from '@mui/material';\nimport { useGetExternalLink } from '@semapps/semantic-data-provider';\n\n// useful to prevent click bubbling in a datagrid with rowClick\nconst stopPropagation = e => e.stopPropagation();\n\n// Our handleClick does nothing as we wrap the children inside a Link but it is\n// required by ChipField, which uses a Chip from material-ui.\n// The material-ui Chip requires an onClick handler to behave like a clickable element.\nconst handleClick = () => {};\n\nconst ImageList = ({ children, linkType, externalLinks, spacing, xs, sm, md, lg, xl }) => {\n  const { ids, data, basePath } = useListContext();\n  const getExternalLink = useGetExternalLink(externalLinks);\n  return (\n    <Grid container spacing={spacing}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const externalLink = getExternalLink(data[id]);\n        let child;\n\n        if (externalLink) {\n          child = (\n            <a href={externalLink} target=\"_blank\" rel=\"noopener noreferrer\" onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath: children.props.basePath || basePath,\n                externalLink: true,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </a>\n          );\n        } else if (linkType) {\n          child = (\n            <Link to={linkToRecord(basePath, id, linkType)} onClick={stopPropagation}>\n              {React.cloneElement(React.Children.only(children), {\n                record: data[id],\n                basePath: children.props.basePath || basePath,\n                // Workaround to force ChipField to be clickable\n                onClick: handleClick\n              })}\n            </Link>\n          );\n        } else {\n          child = React.cloneElement(React.Children.only(children), {\n            record: data[id],\n            basePath: children.props.basePath || basePath\n          });\n        }\n\n        return (\n          <Grid item key={id} xs={xs} sm={sm} md={md} lg={lg} xl={xl}>\n            <RecordContextProvider value={data[id]} key={id}>\n              {child}\n            </RecordContextProvider>\n          </Grid>\n        );\n      })}\n    </Grid>\n  );\n};\n\nImageList.defaultProps = {\n  xs: 6,\n  spacing: 3,\n  linkType: 'edit',\n  externalLinks: false\n};\n\nexport default ImageList;\n","import React from 'react';\nimport { useListContext, Link, linkToRecord } from 'react-admin';\nimport { Card, CardActionArea, CardMedia, CardContent, CardActions } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Masonry from 'react-masonry-css';\n\nconst useStyles = makeStyles(() => ({\n  grid: {\n    display: 'flex',\n    marginLeft: -20,\n    marginBottom: -20,\n    width: 'auto'\n  },\n  column: {\n    paddingLeft: 20,\n    backgroundClip: 'padding-box'\n  },\n  card: {\n    marginBottom: 20\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n  }\n}));\n\n/**\n * @example\n * <List component=\"div\" perPage={50} {...props}>\n *   <MasonryList\n *     image={record => record.image}\n *     content={record => (\n *       <>\n *         <Typography variant=\"subtitle1\">{record.title}</Typography>\n *         <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{record.description}</Typography>\n *       </>\n *     )}\n *     linkType=\"show\"\n *   />\n * </List>\n */\nconst MasonryList = ({ image, content, actions, breakpointCols, linkType }) => {\n  const classes = useStyles();\n  const { ids, data, basePath } = useListContext();\n  return (\n    <Masonry breakpointCols={breakpointCols} className={classes.grid} columnClassName={classes.column}>\n      {ids.map(id => {\n        if (!data[id] || data[id]['_error']) return null;\n        const imageUrl = typeof image === 'function' ? image(data[id]) : image;\n        return (\n          <Card key={id} className={classes.card}>\n            <Link to={linkToRecord(basePath, id) + '/' + linkType}>\n              <CardActionArea>\n                {imageUrl && <CardMedia className={classes.media} image={imageUrl} />}\n                {content && <CardContent>{content(data[id])}</CardContent>}\n              </CardActionArea>\n            </Link>\n            {actions && (\n              <CardActions>\n                {actions.map(action => React.createElement(action, { record: data[id], basePath }))}\n              </CardActions>\n            )}\n          </Card>\n        );\n      })}\n    </Masonry>\n  );\n};\n\nMasonryList.defaultProps = {\n  breakpointCols: { default: 3, 1050: 2, 700: 1 },\n  linkType: 'edit'\n};\n\nexport default MasonryList;\n","import React, { useEffect } from 'react';\nimport { FilterList, FilterListItem, useGetList, useResourceContext, useListContext, useResourceDefinition } from 'react-admin';\nimport { useContainers, useDataModel } from '@semapps/semantic-data-provider';\n\n/**\n * @example\n * const FilterAside = () => (\n *   <Card>\n *     <CardContent>\n *       <FilterLiveSearch source=\"pair:label\" />\n *       <ReferenceFilter reference=\"Theme\" source=\"pair:hasTopic\" inverseSource=\"pair:topicOf\" />\n *       <ReferenceFilter reference=\"Skill\" source=\"pair:offers\" inverseSource=\"pair:offeredBy\" />\n *     </CardContent>\n *   </Card>\n * );\n */\n\nconst ReferenceFilterCounter = ({ source, id }) => {\n  const resourceContext = useResourceContext();\n  const { data, isLoading } = useGetList(resourceContext);\n  return (\n    <>\n      &nbsp;\n      { ! isLoading &&\n        <span className=\"filter-count\">{'(' + Object.values(data).filter(d => ([].concat(d[source])).includes(id)).length + ')'}</span>\n      }\n    </>\n  );\n};\n\nconst ReferenceFilter = ({ reference, source, inverseSource, limit, sort, filter, label, icon, showCounters }) => {\n  const { data, isLoading } = useGetList(reference, { page: 1, perPage: limit }, sort, filter);\n  const currentResource = useResourceDefinition({resource: reference});\n  const resourceContext = useResourceContext();\n  const resourceContextDataModel = useDataModel(resourceContext);\n  const resourceContextContainers = useContainers(resourceContext);\n\n  const {\n    displayedFilters,\n    filterValues,\n    setFilters,\n    hideFilter\n  } = useListContext();\n  useEffect(() => {\n    // Needed when filter item is active and its last relation is removed\n    const urlSearchParams = new URLSearchParams(window.location.search);\n    const params = Object.fromEntries(urlSearchParams.entries());\n    if (! params.filter && ! isLoading) {\n      setFilters({});\n    }\n  }, []);\n  \n  const itemIsUsed = (itemData) => {\n    if (!inverseSource) {\n      return true;\n    }\n    if (!resourceContextContainers || !itemData) {\n      return false;\n    }\n    let itemIsUsed = false;\n    Object.values(resourceContextContainers).forEach(value => {\n      value.forEach(containerUrl => {\n        [].concat(itemData[inverseSource]).forEach(inverseSourceData => {\n          if (inverseSourceData?.startsWith(containerUrl)) {\n            itemIsUsed = true;\n          }\n        })\n      })\n    });\n    return itemIsUsed;\n  }\n  \n  return (\n    <FilterList\n      label={label || currentResource?.options?.label || ''}\n      icon={icon || currentResource?.icon ? React.createElement(currentResource.icon) : undefined}\n    >\n      {data && data\n        .filter(itemData => itemIsUsed(itemData))\n        .map(itemData => (\n          <FilterListItem\n            key={itemData.id}\n            label={\n              <span className=\"filter-label\">\n                {itemData['pair:label']}\n                {showCounters && <ReferenceFilterCounter source={source} id={itemData.id} />}\n              </span>\n            }\n            value={{ [source]: itemData.id }}\n          />\n        ))}\n    </FilterList>\n  );\n};\n\nReferenceFilter.defaultProps = {\n  limit: 25,\n  showCounters: true\n};\n\nexport default ReferenceFilter;\n","import React from 'react';\n\nconst ListViewContext = React.createContext({ views: null, currentView: null, setView: () => null });\n\nexport default ListViewContext;\n","import React from 'react';\nimport { Button, Link } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport ListViewContext from './ListViewContext';\n\nconst ViewsButtons = () => {\n  const query = new URLSearchParams(useLocation().search);\n  const { views, currentView, setView } = React.useContext(ListViewContext);\n  return views\n    ? Object.entries(views)\n        .filter(([key]) => key !== currentView)\n        .map(([key, view]) => {\n          query.set('view', key);\n          query.set('page', 1);\n          query.set('perPage', view.perPage);\n          if (view.sort) {\n            query.set('sort', view.sort.field);\n            query.set('order', view.sort.order);\n          }\n          return (\n            <Link key={key} to={'?' + query.toString()}>\n              <Button onClick={() => setView(key)} label={view.label}>\n                {React.createElement(view.icon)}\n              </Button>\n            </Link>\n          );\n        })\n    : null;\n};\n\nexport default ViewsButtons;\n","import React from 'react';\nimport { CreateButton, ExportButton, useResourceDefinition, TopToolbar } from 'react-admin';\nimport { useMediaQuery } from '@mui/material';\nimport ViewsButtons from './ViewsButtons';\nimport { useTheme } from 'react-admin';\n\nconst ListActionsWithViews = ({\n  bulkActions,\n  basePath,\n  currentSort,\n  displayedFilters,\n  exporter,\n  filters,\n  filterValues,\n  onUnselectItems,\n  resource,\n  selectedIds,\n  showFilter,\n  total,\n  ...rest\n}) => {\n  const [theme] = useTheme();\n  const xs = useMediaQuery(() => theme.breakpoints.down('sm'));\n  const resourceDefinition = useResourceDefinition(rest);\n  return (\n    <TopToolbar>\n      <ViewsButtons />\n      {filters &&\n        React.cloneElement(filters, {\n          resource,\n          showFilter,\n          displayedFilters,\n          filterValues,\n          context: 'button'\n        })}\n      {resourceDefinition.hasCreate && <CreateButton basePath={basePath} />}\n      {!xs && exporter !== false && (\n        <ExportButton\n          disabled={total === 0}\n          resource={resource}\n          sort={currentSort}\n          filter={filterValues}\n          exporter={exporter}\n        />\n      )}\n      {bulkActions &&\n        React.cloneElement(bulkActions, {\n          basePath,\n          filterValues,\n          resource,\n          selectedIds,\n          onUnselectItems\n        })}\n    </TopToolbar>\n  );\n};\n\nexport default ListActionsWithViews;\n","import React, { useState } from 'react';\nimport { List } from 'react-admin';\nimport { useLocation } from 'react-router';\nimport ListActionsWithViews from './ListActionsWithViews';\nimport ListViewContext from './ListViewContext';\n\nconst MultiViewsList = ({ children, actions, views, ListComponent, ...otherProps }) => {\n  const query = new URLSearchParams(useLocation().search);\n  const initialView = query.has('view') ? query.get('view') : Object.keys(views)[0];\n  const [currentView, setView] = useState(initialView);\n  return (\n    <ListViewContext.Provider value={{ views, currentView, setView }}>\n      <ListComponent\n        actions={actions}\n        pagination={views[currentView].pagination}\n        // Set initial values, but use the query string to change these values to avoid a complete refresh\n        perPage={views[initialView].perPage}\n        sort={views[initialView].sort}\n        {...otherProps}\n      >\n        {views[currentView].list}\n      </ListComponent>\n    </ListViewContext.Provider>\n  );\n};\n\nMultiViewsList.defaultProps = {\n  actions: <ListActionsWithViews />,\n  ListComponent: List\n};\n\nexport default MultiViewsList;\n"],"names":["useStyles","makeStyles","theme","root","display","flexWrap","link","textDecoration","maxWidth","chipField","addIcon","cursor","fontSize","position","top","left","launchIcon","width","paddingRight","marginLeft","stopPropagation","e","handleClick","ChipList","props","classes","className","children","linkType","_props$linkType","component","_props$component","primaryText","appendLink","externalLinks","_props$externalLinks","rest","_excluded","useListContext","ids","data","isLoading","basePath","resource","useResourceContext","getExternalLink","useGetExternalLink","Component","React","createElement","LinearProgress","_extends","sanitizeListRestProps","map","id","externalLink","RecordContextProvider","value","key","href","target","rel","onClick","ChipField","record","source","color","deleteIcon","LaunchIcon","onDelete","Link","to","linkToRecord","AddCircleIcon","ImageList","_ref","spacing","xs","sm","md","lg","xl","_useListContext","Grid","container","child","cloneElement","Children","only","item","defaultProps","grid","marginBottom","column","paddingLeft","backgroundClip","card","media","height","paddingTop","MasonryList","image","content","actions","breakpointCols","Masonry","columnClassName","imageUrl","Card","CardActionArea","CardMedia","CardContent","CardActions","action","default","1050","700","ReferenceFilterCounter","resourceContext","useGetList","Fragment","Object","values","filter","d","concat","includes","length","ReferenceFilter","_ref2","_currentResource$opti","reference","inverseSource","limit","sort","label","icon","showCounters","page","perPage","currentResource","useResourceDefinition","useDataModel","resourceContextContainers","useContainers","displayedFilters","filterValues","setFilters","hideFilter","useEffect","urlSearchParams","URLSearchParams","window","location","search","fromEntries","entries","FilterList","options","undefined","itemData","itemIsUsed","forEach","containerUrl","inverseSourceData","startsWith","FilterListItem","ListViewContext","createContext","views","currentView","setView","ViewsButtons","query","useLocation","_React$useContext","useContext","_slicedToArray","_ref3","_ref4","view","set","field","order","toString","Button","ListActionsWithViews","bulkActions","currentSort","exporter","filters","onUnselectItems","selectedIds","showFilter","total","_objectWithoutProperties","useTheme","useMediaQuery","breakpoints","down","resourceDefinition","TopToolbar","context","hasCreate","CreateButton","ExportButton","disabled","MultiViewsList","ListComponent","otherProps","initialView","has","get","keys","_useState2","useState","Provider","pagination","list","List"],"mappings":"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"}