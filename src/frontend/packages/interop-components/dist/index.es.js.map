{"version":3,"file":"index.es.js","sources":["../src/hooks/useFork.js","../src/hooks/useSync.js","../src/forms/ImportForm.js","../src/forms/CreateOrImportForm.js"],"sourcesContent":["import { useCallback } from 'react';\nimport { useDataProvider, useRedirect, useNotify } from \"react-admin\";\n\nconst useFork = () => {\n  const dataProvider = useDataProvider();\n  const redirect = useRedirect();\n  const notify = useNotify();\n\n  return useCallback(async (resourceId, remoteRecordUri, stripProperties = []) => {\n    const { data: remoteData } = await dataProvider.getOne(resourceId, { id: remoteRecordUri });\n\n    let strippedData = { ...remoteData };\n    strippedData['http://www.w3.org/ns/prov#wasDerivedFrom'] = strippedData.id;\n    delete strippedData.id;\n    delete strippedData['@context'];\n    stripProperties.forEach(prop => {\n      delete strippedData[prop];\n    });\n\n    const { data: localData } = await dataProvider.create(resourceId, { data: strippedData })\n\n    redirect('/' + resourceId + '/' + encodeURIComponent(localData.id) + '/show');\n    notify('La ressource a bien été copiée', { type: 'success' });\n  }, [dataProvider, redirect, notify]);\n};\n\nexport default useFork;\n","import { useCallback } from 'react';\nimport { useNotify } from \"react-admin\";\n\nconst useSync = () => {\n  const notify = useNotify();\n\n  return useCallback(async (resourceId, remoteRecordUri, localContainerUri) => {\n    notify(\"Cette méthode n'est pas disponible pour le moment\", { type: 'error' });\n  }, [notify]);\n};\n\nexport default useSync;\n","import React, { useCallback } from 'react';\nimport { FormInput, TextInput, RadioButtonGroupInput } from \"react-admin\";\nimport { Form } from 'react-final-form';\nimport createDecorator from 'final-form-calculate'\nimport { Box, Toolbar, makeStyles, Button } from '@material-ui/core';\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\nimport { ReferenceInput, useCreateContainer } from '@semapps/semantic-data-provider';\nimport { MultiServerAutocompleteInput } from '@semapps/input-components';\nimport useFork from \"../hooks/useFork\";\nimport useSync from \"../hooks/useSync\";\n\nconst useStyles = makeStyles(theme => ({\n  toolbar: {\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[900],\n    marginTop: theme.spacing(2),\n  },\n  field: {\n    marginBottom: 23,\n    minWidth: theme.spacing(20),\n  }\n}));\n\nconst decorator = createDecorator(\n  {\n    field: 'remoteUri',\n    updates: value => {\n      if( value ) {\n        return { plainUri: value };\n      }\n      return {};\n    }\n  },\n  {\n    field: 'plainUri',\n    updates: (value, name, allValues) => {\n        if( value !== allValues.remoteUri ) {\n          return { remoteUri: null };\n        }\n        return {};\n      }\n  }\n);\n\nconst ImportForm = ({ basePath, record, resource, stripProperties }) => {\n  const classes = useStyles();\n  const localContainerUri = useCreateContainer(resource);\n  const fork = useFork();\n  const sync = useSync();\n\n  const onSubmit = useCallback(async ({ plainUri, method }) => {\n    if( method === 'fork' ) {\n      await fork(resource, plainUri, stripProperties);\n    } else {\n      await sync(resource, plainUri, localContainerUri);\n    }\n  }, [fork, sync, resource, stripProperties, localContainerUri]);\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      decorators={[decorator]}\n      initialValues={{ method: 'fork' }}\n      render={({ handleSubmit, dirtyFields }) => (\n        <form onSubmit={handleSubmit}>\n          <Box m=\"1em\">\n            <FormInput\n              input={\n                <ReferenceInput source=\"remoteUri\" label=\"Rechercher...\" reference={resource} filter={{ _servers: '@remote' }} fullWidth>\n                  <MultiServerAutocompleteInput optionText=\"pair:label\" shouldRenderSuggestions={value => value.length > 1} resettable />\n                </ReferenceInput>\n              }\n              basePath={basePath}\n              record={record}\n              resource={resource}\n              variant=\"filled\"\n              margin=\"dense\"\n            />\n            <FormInput\n              input={\n                <TextInput source=\"plainUri\" label=\"URL de la ressource distante\" fullWidth />\n              }\n              basePath={basePath}\n              record={record}\n              resource={resource}\n              variant=\"filled\"\n              margin=\"dense\"\n            />\n            <FormInput\n              input={\n                <RadioButtonGroupInput source=\"method\" label=\"Méthode d'importation\" choices={[\n                  { id: 'fork', name: 'Créer une nouvelle version de la ressource (fork)' },\n                  { id: 'sync', name: 'Garder la ressource locale synchronisée avec la ressource distante' },\n                ]} />\n              }\n              basePath={basePath}\n              record={record}\n              resource={resource}\n              variant=\"filled\"\n              margin=\"dense\"\n            />\n          </Box>\n          <Toolbar className={classes.toolbar}>\n            <Button type=\"submit\" startIcon={<SaveAltIcon />} variant=\"contained\" color=\"primary\" disabled={!dirtyFields.remoteUri}>Importer</Button>\n          </Toolbar>\n        </form>\n      )}\n    />\n  );\n};\n\nexport default ImportForm;","import React, { useState } from 'react';\nimport { SimpleForm } from 'react-admin';\nimport { Box, Tab, Tabs, Divider, makeStyles, useMediaQuery } from \"@material-ui/core\";\nimport ImportForm from \"./ImportForm\";\n\nconst useStyles = makeStyles(theme => ({\n  tab: {\n    maxWidth: 'unset',\n    padding: '6px 24px'\n  },\n}));\n\nconst CreateOrImportForm = ({ stripProperties, ...rest }) => {\n  const [tab, setTab] = useState(0);\n  const xs = useMediaQuery((theme) => theme.breakpoints.down('xs'), { noSsr: true });\n  const classes = useStyles();\n  return (\n    <>\n      <Box pb={2} fullWidth>\n        <Tabs value={tab} onChange={(_, v) => setTab(v)} indicatorColor=\"primary\">\n          <Tab className={classes.tab} label=\"Créer\" />\n          <Tab className={classes.tab} label={xs ? \"Importer\" : \"Importer une ressource distante\"} />\n        </Tabs>\n        <Divider />\n      </Box>\n      {tab === 0 &&\n        <SimpleForm {...rest} />\n      }\n      {tab === 1 &&\n        <ImportForm stripProperties={stripProperties || []} {...rest} />\n      }\n    </>\n  );\n}\n\nexport default CreateOrImportForm;\n"],"names":["useFork","dataProvider","useDataProvider","redirect","useRedirect","notify","useNotify","useCallback","resourceId","remoteRecordUri","stripProperties","getOne","id","remoteData","data","strippedData","forEach","prop","create","localData","encodeURIComponent","type","useSync","localContainerUri","useStyles","makeStyles","theme","toolbar","backgroundColor","palette","grey","marginTop","spacing","field","marginBottom","minWidth","decorator","createDecorator","updates","value","plainUri","name","allValues","remoteUri","ImportForm","basePath","record","resource","classes","useCreateContainer","fork","sync","onSubmit","method","React","Form","decorators","initialValues","render","handleSubmit","dirtyFields","Box","m","FormInput","input","ReferenceInput","source","label","reference","filter","_servers","fullWidth","MultiServerAutocompleteInput","optionText","shouldRenderSuggestions","length","resettable","variant","margin","TextInput","RadioButtonGroupInput","choices","Toolbar","className","Button","startIcon","SaveAltIcon","color","disabled","tab","maxWidth","padding","CreateOrImportForm","rest","useState","setTab","xs","useMediaQuery","breakpoints","down","noSsr","pb","Tabs","onChange","_","v","indicatorColor","Tab","Divider","SimpleForm"],"mappings":"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"}