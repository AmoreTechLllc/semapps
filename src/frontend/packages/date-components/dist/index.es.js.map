{"mappings":"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","sources":["packages/date-components/src/index.js","packages/date-components/src/Picker.js","packages/date-components/src/utils.js","packages/date-components/src/CalendarList.js","packages/date-components/src/useFullCalendarProps.js","packages/date-components/src/DaysList.js"],"sourcesContent":["import React from 'react';\nimport { DatePicker } from '@mui/x-date-pickers/DatePicker';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport Picker from './Picker';\n\nconst DateInput = props => <Picker PickerComponent={DatePicker} {...props} />;\nconst TimeInput = props => <Picker PickerComponent={TimePicker} {...props} />;\nconst DateTimeInput = props => <Picker PickerComponent={DateTimePicker} {...props} />;\n\nexport { DateInput, TimeInput, DateTimeInput };\n\nexport { default as CalendarList } from './CalendarList';\nexport { default as DaysList } from './DaysList';\nexport { default as useFullCalendarProps } from './useFullCalendarProps';\n","import React, { useCallback } from 'react';\nimport { useInput, FieldTitle, InputHelperText } from 'react-admin';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { dateTimeFormatter, dateTimeParser } from './utils';\n\nconst Picker = ({\n  PickerComponent,\n  format = dateTimeFormatter,\n  label,\n  source,\n  helperText,\n  onBlur,\n  onChange,\n  onFocus,\n  parse = dateTimeParser,\n  validate,\n  defaultValue,\n  locale,\n  pickerVariant = 'dialog',\n  stringFormat = 'ISO',\n  allowClear,\n  ...rest\n}) => {\n  const {\n    field,\n    isRequired,\n    fieldState: { error, isTouched }\n  } = useInput({\n    format,\n    onBlur,\n    onChange,\n    onFocus,\n    parse,\n    source,\n    validate,\n    ...rest\n  });\n\n  const handleChange = useCallback(value => {\n    Date.parse(value)\n      ? field.onChange(stringFormat === 'ISO' ? value.toISOString() : value.toString())\n      : field.onChange(null);\n  }, []);\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns} adapterLocale={locale}>\n      <PickerComponent\n        label={<FieldTitle label={label} source={source} isRequired={isRequired} />}\n        error={!!(isTouched && error)}\n        slotProps={{\n          textField: {\n            helperText: <InputHelperText touched={isTouched} error={error} helperText={helperText} />\n          }\n        }}\n        {...sanitizeRestProps(rest)}\n        value={field.value ? new Date(field.value) : null}\n        onChange={handleChange}\n        onBlur={() =>\n          field.onBlur(\n            field.value\n              ? stringFormat === 'ISO'\n                ? new Date(field.value).toISOString()\n                : new Date(field.value).toString()\n              : null\n          )\n        }\n      />\n    </LocalizationProvider>\n  );\n};\n\nPicker.defaultProps = {\n  isRequired: false,\n  meta: { isTouched: false, error: false },\n  locale: undefined, // Default to english\n  parse: value => (value === '' ? null : value) // Avoid saving an empty string in the dataset\n};\n\nconst sanitizeRestProps = ({\n  allowEmpty,\n  alwaysOn,\n  component,\n  defaultValue,\n  format,\n  formClassName,\n  initialValue,\n  initializeForm,\n  input,\n  isRequired,\n  label,\n  limitChoicesToValue,\n  locale,\n  meta,\n  options,\n  optionText,\n  optionValue,\n  parse,\n  source,\n  textAlign,\n  translate,\n  translateChoice,\n  labelTime,\n  ...rest\n}) => rest;\n\nexport default Picker;\n","const leftPad =\n  (nb = 2) =>\n  value =>\n    ('0'.repeat(nb) + value).slice(-nb);\nconst leftPad4 = leftPad(4);\nconst leftPad2 = leftPad(2);\n\n// yyyy-MM-ddThh:mm\nconst dateTimeRegex = /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}$/;\n\n/**\n * @param {Date} value value to convert\n * @returns {string} A standardized datetime (yyyy-MM-ddThh:mm), to be passed to an <input type=\"datetime-local\" />\n */\nconst convertDateToString = value => {\n  if (!(value instanceof Date) || isNaN(value.getDate())) {\n    return '';\n  }\n\n  const yy = leftPad4(value.getFullYear());\n  const MM = leftPad2(value.getMonth() + 1);\n  const dd = leftPad2(value.getDate());\n  const hh = leftPad2(value.getHours());\n  const mm = leftPad2(value.getMinutes());\n  return `${yy}-${MM}-${dd}T${hh}:${mm}`;\n};\n\n/**\n * Converts a date from the Redux store, with timezone, to a date string\n * without timezone for use in an <input type=\"datetime-local\" />.\n * @param {Date | string} value date string or object\n */\nexport const dateTimeFormatter = value => {\n  // null, undefined and empty string values should not go through convertDateToString\n  // otherwise, it returns undefined and will make the input an uncontrolled one.\n  if (value == null || value === '') {\n    return '';\n  }\n\n  if (value instanceof Date) {\n    return convertDateToString(value);\n  }\n\n  // valid dates should not be converted\n  if (dateTimeRegex.test(value)) {\n    return value;\n  }\n\n  return convertDateToString(new Date(value));\n};\n\n/**\n * Converts a datetime string without timezone to a date object\n * with timezone, using the browser timezone.\n * @param {string} value Date string, formatted as yyyy-MM-ddThh:mm\n * @returns {Date}\n */\nexport const dateTimeParser = value => (value ? new Date(value) : '');\n","import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { useTheme } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport useFullCalendarProps from './useFullCalendarProps';\n\nconst useGlobalStyles = makeStyles(theme => ({\n  '@global': {\n    '.fc-button': {\n      backgroundColor: `${theme.palette.primary.main} !important`,\n      border: 'none !important',\n      opacity: '1 !important'\n    },\n    '.fc-day-today': {\n      backgroundColor: `${theme.palette.secondary.light} !important`\n    },\n    // Overwrite violet color of links\n    'a.fc-daygrid-dot-event': {\n      color: 'black !important'\n    }\n  }\n}));\n\nconst CalendarList = props => {\n  const theme = useTheme();\n  const fullCalendarProps = useFullCalendarProps(props);\n  useGlobalStyles();\n\n  return (\n    <FullCalendar\n      plugins={[dayGridPlugin]}\n      locale={props.locale}\n      initialView=\"dayGridMonth\"\n      eventBackgroundColor={theme.palette.primary.main}\n      {...fullCalendarProps}\n    />\n  );\n};\n\nCalendarList.defaultProps = {\n  linkType: 'edit'\n};\n\nexport default CalendarList;\n","import React, { useMemo, useCallback } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { useListContext, useCreatePath } from 'react-admin';\n\nconst useFullCalendarProps = ({ label, startDate, endDate, linkType }) => {\n  const { data, isLoading, resource } = useListContext();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const createPath = useCreatePath();\n\n  const query = new URLSearchParams(location.search);\n\n  // Bypass the link in order to use React-Router\n  const eventClick = useCallback(({ event, jsEvent }) => {\n    jsEvent.preventDefault();\n    navigate(event.url);\n  }, []);\n\n  // Change the query string when month change\n  const datesSet = useCallback(\n    ({ view }) => {\n      setSearchParams(params => ({\n        ...params,\n        month: view.currentStart.getMonth() + 1,\n        year: view.currentStart.getFullYear()\n      }));\n    },\n    [setSearchParams]\n  );\n\n  const events = useMemo(\n    () =>\n      !isLoading &&\n      data\n        .filter(record => record)\n        .map(record => ({\n          id: record.id,\n          title: typeof label === 'string' ? record[label] : label(record),\n          start: typeof startDate === 'string' ? record[startDate] : startDate(record),\n          end: typeof endDate === 'string' ? record[endDate] : endDate(record),\n          url: createPath({ resource, id: record.id, type: linkType })\n        })),\n    [isLoading, data, resource, createPath]\n  );\n\n  return {\n    initialDate: query.has('month') ? new Date(query.get('year'), query.get('month') - 1) : new Date(),\n    events,\n    datesSet,\n    eventClick\n  };\n};\n\nexport default useFullCalendarProps;\n","import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport listPlugin from '@fullcalendar/list';\nimport makeStyles from '@mui/styles/makeStyles';\nimport useFullCalendarProps from './useFullCalendarProps';\n\nconst useGlobalStyles = makeStyles(theme => ({\n  '@global': {\n    '.fc-button': {\n      backgroundColor: `${theme.palette.primary.main} !important`,\n      border: 'none !important',\n      opacity: '1 !important'\n    }\n  }\n}));\n\nconst DaysList = props => {\n  const fullCalendarProps = useFullCalendarProps(props);\n  useGlobalStyles();\n\n  return <FullCalendar plugins={[listPlugin]} locale={props.locale} initialView=\"listMonth\" {...fullCalendarProps} />;\n};\n\nDaysList.defaultProps = {\n  linkType: 'edit'\n};\n\nexport default DaysList;\n"],"names":[],"version":3,"file":"index.es.js.map"}