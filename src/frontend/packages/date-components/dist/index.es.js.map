{"version":3,"file":"index.es.js","sources":["../src/useFullCalendarProps.js","../src/CalendarList.js","../src/DaysList.js"],"sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport { useSearchParams, useNavigate } from 'react-router-dom';\nimport { useListContext, useCreatePath } from 'react-admin';\n\nconst useFullCalendarProps = ({ label, startDate, endDate, linkType }) => {\n  const { data, isLoading, resource } = useListContext();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const createPath = useCreatePath();\n\n  let query = new URLSearchParams(location.search);\n\n  // Bypass the link in order to use React-Router\n  const eventClick = useCallback(({ event, jsEvent }) => {\n    jsEvent.preventDefault();\n    navigate(event.url);\n  }, []);\n\n  // Change the query string when month change\n  const datesSet = useCallback(\n    ({ view }) => {\n      setSearchParams(params => ({ ...params, month: view.currentStart.getMonth() + 1, year: view.currentStart.getFullYear() }));\n    },\n    [setSearchParams]\n  );\n\n  const events = useMemo(\n    () =>\n      !isLoading &&\n      data\n        .filter(record => record)\n        .map(record => ({\n          id: record.id,\n          title: typeof label === 'string' ? record[label] : label(record),\n          start: typeof startDate === 'string' ? record[startDate] : startDate(record),\n          end: typeof endDate === 'string' ? record[endDate] : endDate(record),\n          url: createPath({ resource, id: record.id, type: linkType })\n        })),\n    [isLoading, data, resource, createPath]\n  );\n\n  return {\n    initialDate: query.has('month') ? new Date(query.get('year'), query.get('month') - 1) : new Date(),\n    events,\n    datesSet,\n    eventClick\n  };\n};\n\nexport default useFullCalendarProps;\n","import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport { useTheme } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\nimport useFullCalendarProps from './useFullCalendarProps';\n\nconst useGlobalStyles = makeStyles(theme => ({\n  '@global': {\n    '.fc-button': {\n      backgroundColor: theme.palette.primary.main + ' !important',\n      border: 'none !important',\n      opacity: '1 !important'\n    },\n    '.fc-day-today': {\n      backgroundColor: theme.palette.secondary.light + ' !important'\n    },\n    // Overwrite violet color of links\n    'a.fc-daygrid-dot-event': {\n      color: 'black !important'\n    }\n  }\n}));\n\nconst CalendarList = props => {\n  const theme = useTheme();\n  const fullCalendarProps = useFullCalendarProps(props);\n  useGlobalStyles();\n\n  return (\n    <FullCalendar\n      plugins={[dayGridPlugin]}\n      locale={props.locale}\n      initialView=\"dayGridMonth\"\n      eventBackgroundColor={theme.palette.primary.main}\n      {...fullCalendarProps}\n    />\n  );\n};\n\nCalendarList.defaultProps = {\n  linkType: 'edit'\n};\n\nexport default CalendarList;\n","import React from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport listPlugin from '@fullcalendar/list';\nimport makeStyles from '@mui/styles/makeStyles';\nimport useFullCalendarProps from './useFullCalendarProps';\n\nconst useGlobalStyles = makeStyles(theme => ({\n  '@global': {\n    '.fc-button': {\n      backgroundColor: theme.palette.primary.main + ' !important',\n      border: 'none !important',\n      opacity: '1 !important'\n    }\n  }\n}));\n\nconst DaysList = props => {\n  const fullCalendarProps = useFullCalendarProps(props);\n  useGlobalStyles();\n\n  return <FullCalendar plugins={[listPlugin]} locale={props.locale} initialView=\"listMonth\" {...fullCalendarProps} />;\n};\n\nDaysList.defaultProps = {\n  linkType: 'edit'\n};\n\nexport default DaysList;\n"],"names":["useFullCalendarProps","_ref","label","startDate","endDate","linkType","_useListContext","useListContext","data","isLoading","resource","_useSearchParams2","_slicedToArray","useSearchParams","setSearchParams","navigate","useNavigate","createPath","useCreatePath","query","URLSearchParams","location","search","eventClick","useCallback","_ref2","event","jsEvent","preventDefault","url","datesSet","_ref3","view","params","_objectSpread","month","currentStart","getMonth","year","getFullYear","events","useMemo","filter","record","map","id","title","start","end","type","initialDate","has","Date","get","useGlobalStyles","makeStyles","theme","@global",".fc-button","backgroundColor","palette","primary","main","border","opacity",".fc-day-today","secondary","light","a.fc-daygrid-dot-event","color","CalendarList","props","useTheme","fullCalendarProps","React","FullCalendar","_extends","plugins","dayGridPlugin","locale","initialView","eventBackgroundColor","defaultProps","DaysList","listPlugin"],"mappings":"2tEAIA,IAAMA,EAAuB,SAA6CC,GAAA,IAA1CC,IAAAA,MAAOC,IAAAA,UAAWC,IAAAA,QAASC,IAAAA,SACzDC,EAAsCC,IAA9BC,IAAAA,KAAMC,IAAAA,UAAWC,IAAAA,SACzBC,EAAAC,EAAwCC,IAAxC,GAAAF,EAAA,GAAA,IAAqBG,EAArBH,EAAA,GACMI,EAAWC,IACXC,EAAaC,IAEfC,EAAQ,IAAIC,gBAAgBC,SAASC,QAGnCC,EAAaC,GAAY,SAAwBC,GAAA,IAArBC,IAAAA,QAAOC,QAC/BC,iBACRb,EAASW,EAAMG,OACd,IAGGC,EAAWN,GACf,SAAcO,GAAA,IAAXC,IAAAA,KACDlB,GAAgB,SAAAmB,GAAM,OAAAC,EAAAA,EAAA,GAAUD,GAAV,GAAA,CAAkBE,MAAOH,EAAKI,aAAaC,WAAa,EAAGC,KAAMN,EAAKI,aAAaG,qBAE3G,CAACzB,IAGG0B,EAASC,GACb,WAAA,OACGhC,GACDD,EACGkC,QAAO,SAAAC,GAAM,OAAIA,KACjBC,KAAI,SAAAD,GAAM,MAAK,CACdE,GAAIF,EAAOE,GACXC,MAAwB,iBAAV5C,EAAqByC,EAAOzC,GAASA,EAAMyC,GACzDI,MAA4B,iBAAd5C,EAAyBwC,EAAOxC,GAAaA,EAAUwC,GACrEK,IAAwB,iBAAZ5C,EAAuBuC,EAAOvC,GAAWA,EAAQuC,GAC7Dd,IAAKZ,EAAW,CAAEP,SAAAA,EAAUmC,GAAIF,EAAOE,GAAII,KAAM5C,UAEvD,CAACI,EAAWD,EAAME,EAAUO,IAG9B,MAAO,CACLiC,YAAa/B,EAAMgC,IAAI,SAAW,IAAIC,KAAKjC,EAAMkC,IAAI,QAASlC,EAAMkC,IAAI,SAAW,GAAK,IAAID,KAC5FZ,OAAAA,EACAV,SAAAA,EACAP,WAAAA,ICtCE+B,EAAkBC,GAAW,SAAAC,GAAK,MAAK,CAC3CC,UAAW,CACTC,aAAc,CACZC,gBAAiBH,EAAMI,QAAQC,QAAQC,KAAO,cAC9CC,OAAQ,kBACRC,QAAS,gBAEXC,gBAAiB,CACfN,gBAAiBH,EAAMI,QAAQM,UAAUC,MAAQ,eAGnDC,yBAA0B,CACxBC,MAAO,yBAKPC,EAAe,SAAAC,GACnB,IAAMf,EAAQgB,IACRC,EAAoBzE,EAAqBuE,GAG/C,OAFAjB,IAGEoB,gBAACC,EAADC,EAAA,CACEC,QAAS,CAACC,GACVC,OAAQR,EAAMQ,OACdC,YAAY,eACZC,qBAAsBzB,EAAMI,QAAQC,QAAQC,MACxCW,KAKVH,EAAaY,aAAe,CAC1B7E,SAAU,QCnCZ,IAAMiD,EAAkBC,GAAW,SAAAC,GAAK,MAAK,CAC3CC,UAAW,CACTC,aAAc,CACZC,gBAAiBH,EAAMI,QAAQC,QAAQC,KAAO,cAC9CC,OAAQ,kBACRC,QAAS,qBAKTmB,EAAW,SAAAZ,GACf,IAAME,EAAoBzE,EAAqBuE,GAG/C,OAFAjB,IAEOoB,gBAACC,EAADC,EAAA,CAAcC,QAAS,CAACO,GAAaL,OAAQR,EAAMQ,OAAQC,YAAY,aAAgBP,KAGhGU,EAASD,aAAe,CACtB7E,SAAU"}