{"mappings":"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","sources":["packages/markdown-components/src/index.js","packages/markdown-components/src/MarkdownField.js","packages/markdown-components/src/MarkdownInput.js","packages/markdown-components/src/useLoadLinks.js"],"sourcesContent":["export { default as MarkdownField } from './MarkdownField';\nexport { default as MarkdownInput } from './MarkdownInput';\nexport { default as useLoadLinks } from './useLoadLinks';\n","import React from 'react';\nimport { useRecordContext } from 'react-admin';\nimport Markdown from 'markdown-to-jsx';\nimport get from 'lodash/get';\n\nconst MarkdownField = ({ source, LabelComponent, overrides = {}, ...rest }) => {\n  const record = useRecordContext();\n  if (!record || !get(record, source)) return null;\n\n  return (\n    <Markdown\n      options={{\n        createElement(type, props, children) {\n          if (props.label) {\n            return (\n              <>\n                <LabelComponent>{props.label}</LabelComponent>\n                {React.createElement(type, props, children)}\n              </>\n            );\n          }\n          return React.createElement(type, props, children);\n        },\n        overrides: {\n          h1: LabelComponent,\n          ...overrides\n        },\n        ...rest\n      }}\n    >\n      {get(record, source)}\n    </Markdown>\n  );\n};\n\nMarkdownField.defaultProps = {\n  LabelComponent: 'h2'\n};\n\nexport default MarkdownField;\n","import React, { useMemo, useState } from 'react';\nimport ReactMde from 'react-mde';\nimport Markdown from 'markdown-to-jsx';\nimport { useInput, InputHelperText, Labeled, required } from 'react-admin';\nimport { FormControl, FormHelperText } from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst StyledFormControl = styled(FormControl)(({ theme }) => ({\n  '&.validationError': {\n    '& p': {\n      color: theme.palette.error.main\n    },\n    '& .mde-text': {\n      outline: '-webkit-focus-ring-color auto 1px',\n      outlineOffset: 0,\n      outlineColor: theme.palette.error.main,\n      outlineStyle: 'auto',\n      outlineWidth: 1\n    },\n    '& p.MuiFormHelperText-root': {\n      color: theme.palette.error.main\n    }\n  }\n}));\n\nconst MarkdownInput = props => {\n  const { validate } = props;\n  const isRequired = useMemo(\n    () => !!validate && !![].concat(validate).find(v => v.toString() === required().toString()),\n    [validate]\n  );\n  const [tab, setTab] = useState('write');\n  const {\n    field: { value, onChange },\n    fieldState: { isDirty, invalid, error, isTouched }\n  } = useInput(props);\n\n  return (\n    <StyledFormControl fullWidth className={`ra-input-mde ${invalid ? 'validationError' : ''}`}>\n      <Labeled {...props} isRequired={isRequired}>\n        <ReactMde\n          value={value}\n          onChange={value => onChange(value)}\n          onTabChange={tab => setTab(tab)}\n          generateMarkdownPreview={async markdown => <Markdown>{markdown}</Markdown>}\n          selectedTab={tab}\n          {...props}\n        />\n      </Labeled>\n      <FormHelperText error={isDirty && invalid} margin=\"dense\" variant=\"outlined\">\n        <InputHelperText\n          error={isDirty && invalid && error}\n          helperText={props.helperText}\n          touched={error || isTouched}\n        />\n      </FormHelperText>\n    </StyledFormControl>\n  );\n};\n\nexport default MarkdownInput;\n","import { useDataProvider, useTranslate } from 'react-admin';\n\nconst useLoadLinks = (resourceType, labelProp) => {\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  return async keyword => {\n    if (keyword) {\n      const results = await dataProvider.getList(resourceType, {\n        pagination: {\n          page: 1,\n          perPage: 5\n        },\n        filter: { q: keyword }\n      });\n      if (results.total > 0) {\n        return results.data.map(record => ({\n          preview: record[labelProp],\n          value: `[${record[labelProp]}](/${resourceType}/${encodeURIComponent(record.id)}/show)`\n        }));\n      }\n      return [{ preview: translate('ra.navigation.no_results'), value: `[${keyword}` }];\n    }\n    return [{ preview: translate('ra.action.search'), value: `[${keyword}` }];\n  };\n};\n\nexport default useLoadLinks;\n"],"names":[],"version":3,"file":"index.es.js.map"}