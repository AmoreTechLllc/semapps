{"version":3,"file":"index.cjs.js","sources":["../src/MarkdownField.js","../src/MarkdownInput.js","../src/useLoadLinks.js"],"sourcesContent":["import React from 'react';\nimport Markdown from 'markdown-to-jsx';\n\nconst MarkdownField = ({ source, record, LabelComponent, overrides = {}, ...rest }) =>\n  record && record[source] ? (\n    <Markdown\n      options={{\n        createElement(type, props, children) {\n          if (props.label) {\n            return (\n              <>\n                <LabelComponent>{props.label}</LabelComponent>\n                {React.createElement(type, props, children)}\n              </>\n            );\n          } else {\n            return React.createElement(type, props, children);\n          }\n        },\n        overrides: {\n          h1: LabelComponent,\n          ...overrides\n        },\n        ...rest\n      }}\n    >\n      {record[source]}\n    </Markdown>\n  ) : null;\n\nMarkdownField.defaultProps = {\n  LabelComponent: 'h2',\n  addLabel: true\n};\n\nexport default MarkdownField;\n","import React, { useMemo, useState } from 'react';\nimport ReactMde from 'react-mde';\nimport Markdown from 'markdown-to-jsx';\nimport { useInput, InputHelperText, Labeled, required } from 'react-admin';\nimport { FormControl, FormHelperText } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles(theme => ({\n  validationError: {\n    '& label': {\n      color: theme.palette.error.main\n    },\n    '& .mde-text': {\n      outline: '-webkit-focus-ring-color auto 1px',\n      outlineOffset: 0,\n      outlineColor: theme.palette.error.main,\n      outlineStyle: 'auto',\n      outlineWidth: 1\n    },\n    '& p.MuiFormHelperText-root': {\n      color: theme.palette.error.main\n    }\n  }\n}));\n\nconst MarkdownInput = props => {\n  const classes = useStyles();\n  const { validate } = props;\n  const isRequired = useMemo(\n    () => !!validate && !![].concat(validate).find(v => v.toString() === required().toString()),\n    [validate]\n  );\n  const [tab, setTab] = useState('write');\n  const {\n    input: { value, onChange },\n    meta: { modified, invalid, error, touched }\n  } = useInput(props);\n\n  return (\n    <FormControl fullWidth className={`ra-input-mde ${modified && invalid ? classes.validationError : ''}`}>\n      <Labeled {...props} isRequired={isRequired}>\n        <ReactMde\n          value={value}\n          onChange={value => onChange(value)}\n          onTabChange={tab => setTab(tab)}\n          generateMarkdownPreview={async markdown => <Markdown>{markdown}</Markdown>}\n          selectedTab={tab}\n          {...props}\n        />\n      </Labeled>\n      <FormHelperText error={modified && invalid} margin=\"dense\" variant=\"outlined\">\n        <InputHelperText error={modified && invalid && error} helperText={props.helperText} touched={error || touched} />\n      </FormHelperText>\n    </FormControl>\n  );\n};\n\nexport default MarkdownInput;\n","import { useDataProvider, useTranslate } from 'react-admin';\n\nconst useLoadLinks = (resourceType, labelProp) => {\n  const dataProvider = useDataProvider();\n  const translate = useTranslate();\n  return async keyword => {\n    if (keyword) {\n      const results = await dataProvider.getList(resourceType, {\n        pagination: {\n          page: 1,\n          perPage: 5\n        },\n        filter: { q: keyword }\n      });\n      if (results.total > 0) {\n        return results.data.map(record => ({\n          preview: record[labelProp],\n          value: `[${record[labelProp]}](/${resourceType}/${encodeURIComponent(record.id)}/show)`\n        }));\n      } else {\n        return [{ preview: translate('ra.navigation.no_results'), value: '[' + keyword }];\n      }\n    }\n    return [{ preview: translate('ra.action.search'), value: '[' + keyword }];\n  };\n};\n\nexport default useLoadLinks;\n"],"names":["MarkdownField","_ref","source","record","LabelComponent","_ref$overrides","overrides","rest","_objectWithoutProperties","_excluded","React","Markdown","options","_objectSpread","createElement","type","props","children","label","h1","defaultProps","addLabel","useStyles","makeStyles","theme","validationError","& label","color","palette","error","main","& .mde-text","outline","outlineOffset","outlineColor","outlineStyle","outlineWidth","& p.MuiFormHelperText-root","classes","validate","isRequired","useMemo","concat","find","v","toString","required","_useState2","_slicedToArray","useState","tab","setTab","useInput","_useInput$input","_useInput","input","value","onChange","_useInput$meta","meta","modified","invalid","touched","FormControl","fullWidth","className","Labeled","_extends","ReactMde","onTabChange","generateMarkdownPreview","_asyncToGenerator","_regeneratorRuntime","mark","markdown","wrap","_context","prev","next","abrupt","stop","_callee","_x","apply","this","arguments","selectedTab","FormHelperText","margin","variant","InputHelperText","helperText","resourceType","labelProp","dataProvider","useDataProvider","translate","useTranslate","keyword","results","getList","pagination","page","perPage","filter","q","sent","total","data","map","preview","encodeURIComponent","id"],"mappings":"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"}