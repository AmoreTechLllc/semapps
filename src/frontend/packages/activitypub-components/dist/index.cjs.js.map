{"version":3,"file":"index.cjs.js","sources":["../src/constants.js","../src/hooks/useOutbox.js","../src/components/CommentsField/CustomMention.js","../src/components/CommentsField/PostCommentForm.js","../src/components/CommentsField/CommentsList.js","../src/hooks/useCollection.js","../src/components/CommentsField/CommentsField.js","../src/components/CollectionList.js","../src/components/ReferenceCollectionField.js","../src/hooks/useMentions/MentionsList.js","../src/hooks/useMentions/renderMentions.js","../src/hooks/useInbox.js","../src/hooks/useMentions/useMentions.js","../src/hooks/useWebfinger.js"],"sourcesContent":["export const ACTIVITY_TYPES = {\n  ACCEPT: 'Accept',\n  ADD: 'Add',\n  ANNOUNCE: 'Announce',\n  ARRIVE: 'Arrive',\n  BLOCK: 'Block',\n  CREATE: 'Create',\n  DELETE: 'Delete',\n  DISLIKE: 'Dislike',\n  FLAG: 'Flag',\n  FOLLOW: 'Follow',\n  IGNORE: 'Ignore',\n  INVITE: 'Invite',\n  JOIN: 'Join',\n  LEAVE: 'Leave',\n  LIKE: 'Like',\n  LISTEN: 'Listen',\n  MOVE: 'Move',\n  OFFER: 'Offer',\n  QUESTION: 'Question',\n  REJECT: 'Reject',\n  READ: 'Read',\n  REMOVE: 'Remove',\n  TENTATIVE_REJECT: 'TentativeReject',\n  TENTATIVE_ACCEPT: 'TentativeAccept',\n  TRAVAL: 'Travel',\n  UNDO: 'Undo',\n  UPDATE: 'Update',\n  VIEW: 'View'\n};\n\nexport const ACTOR_TYPES = {\n  APPLICATION: 'Application',\n  GROUP: 'Group',\n  ORGANIZATION: 'Organization',\n  PERSON: 'Person',\n  SERVICE: 'Service'\n};\n\nexport const OBJECT_TYPES = {\n  ARTICLE: 'Article',\n  AUDIO: 'Audio',\n  DOCUMENT: 'Document',\n  EVENT: 'Event',\n  IMAGE: 'Image',\n  NOTE: 'Note',\n  PAGE: 'Page',\n  PLACE: 'Place',\n  PROFILE: 'Profile',\n  RELATIONSHIP: 'Relationship',\n  TOMBSTONE: 'Tombstone',\n  VIDEO: 'Video'\n};\n\nexport const PUBLIC_URI = 'https://www.w3.org/ns/activitystreams#Public';\n","import { useCallback, useMemo } from 'react';\nimport { useGetIdentity, fetchUtils } from 'react-admin';\nimport { buildBlankNodesQuery } from '@semapps/semantic-data-provider';\n\nconst useOutbox = () => {\n  const { identity } = useGetIdentity();\n\n  const outboxUrl = useMemo(() => {\n    if (identity?.webIdData) {\n      return identity?.webIdData?.outbox;\n    }\n  }, [identity]);\n\n  const sparqlEndpoint = useMemo(() => {\n    if (identity?.webIdData) {\n      return identity?.webIdData?.endpoints?.['void:sparqlEndpoint'];\n    }\n  }, [identity]);\n\n  // Post an activity to the logged user's outbox and return its URI\n  const post = useCallback(\n    async activity => {\n      const token = localStorage.getItem('token');\n      const { headers } = await fetchUtils.fetchJson(outboxUrl, {\n        method: 'POST',\n        body: JSON.stringify({\n          '@context': 'https://www.w3.org/ns/activitystreams',\n          ...activity\n        }),\n        headers: new Headers({\n          'Content-Type': 'application/ld+json',\n          Authorization: `Bearer ${token}`\n        })\n      });\n      return headers.get('Location');\n    },\n    [outboxUrl]\n  );\n\n  const fetch = useCallback(async () => {\n    if (!sparqlEndpoint || !outboxUrl) return;\n\n    const token = localStorage.getItem('token');\n    const blankNodesQuery = buildBlankNodesQuery(['as:object']);\n\n    const query = `\n      PREFIX as: <https://www.w3.org/ns/activitystreams#>\n      CONSTRUCT {\n        ?s1 ?p1 ?o1 .\n        ${blankNodesQuery.construct}\n      }\n      WHERE {\n        <${outboxUrl}> as:items ?s1 .\n        ?s1 ?p1 ?o1 .\n        ${blankNodesQuery.where}\n      }\n    `;\n\n    const { json } = await fetchUtils.fetchJson(sparqlEndpoint, {\n      method: 'POST',\n      body: query,\n      headers: new Headers({\n        Accept: 'application/ld+json',\n        Authorization: 'Bearer ' + token\n      })\n    });\n\n    if (json['@graph']) {\n      return json['@graph'];\n    } else {\n      return null;\n    }\n  }, [sparqlEndpoint, outboxUrl]);\n\n  return { post, fetch, url: outboxUrl, owner: identity?.id };\n};\n\nexport default useOutbox;\n","import { mergeAttributes } from '@tiptap/core';\nimport Mention from '@tiptap/extension-mention';\n\n// Fix a bug in the current version of the mention extension\n// (The { id, label } object is located inside the id property)\n// See https://github.com/ueberdosis/tiptap/pull/1322\nconst CustomMention = Mention.extend({\n  renderHTML({ node, HTMLAttributes }) {\n    return ['span', mergeAttributes(this.options.HTMLAttributes, HTMLAttributes), `@${node.attrs.id.label}`];\n  },\n  addAttributes() {\n    return {\n      label: {\n        default: null,\n        parseHTML: element => {\n          return {\n            label: element.getAttribute('data-mention-label')\n          };\n        },\n        renderHTML: attributes => {\n          if (!attributes.id.label) {\n            return {};\n          }\n          return {\n            'data-mention-label': attributes.id.label\n          };\n        }\n      },\n      id: {\n        default: null,\n        parseHTML: element => {\n          return {\n            id: element.getAttribute('data-mention-id')\n          };\n        },\n        renderHTML: attributes => {\n          if (!attributes.id.id) {\n            return {};\n          }\n          return {\n            'data-mention-id': attributes.id.id\n          };\n        }\n      }\n    };\n  }\n});\n\nexport default CustomMention;\n","import React, { useState, useCallback } from 'react';\nimport { useGetIdentity, useNotify, useRecordContext } from 'react-admin';\nimport { RichTextInput, DefaultEditorOptions } from 'ra-richtext-tiptap';\nimport { Form } from 'react-final-form';\nimport { Button, Box, makeStyles, Avatar } from '@material-ui/core';\nimport SendIcon from '@material-ui/icons/Send';\nimport { useDataModel } from '@semapps/semantic-data-provider';\nimport { OBJECT_TYPES, PUBLIC_URI } from '../../constants';\nimport useOutbox from '../../hooks/useOutbox';\nimport CustomMention from './CustomMention';\n\nconst useStyles = makeStyles(theme => ({\n  form: {\n    marginTop: -12 // Negative margin to keep the form close to the label\n  },\n  container: {\n    paddingLeft: 80,\n    position: 'relative'\n  },\n  avatar: {\n    position: 'absolute',\n    top: 16,\n    left: 0,\n    bottom: 0,\n    width: 64,\n    height: 64\n  },\n  editorContent: {\n    '& > div': {\n      backgroundColor: 'rgba(0, 0, 0, 0.09)',\n      padding: '2px 12px',\n      borderWidth: '0px !important',\n      borderRadius: 0,\n      borderBottom: '1px solid #FFF',\n      minHeight: 60,\n      outline: 'unset !important'\n    },\n    '& > div > p': {\n      marginTop: 12,\n      marginBottom: 12,\n      fontFamily: theme.typography.body1.fontFamily,\n      marginBlockStart: '0.5em',\n      marginBlockEnd: '0.5em'\n    },\n    marginBottom: -19 // To hide helper text block\n  },\n  button: {\n    marginBottom: 15\n  }\n}));\n\nconst PostCommentForm = ({ context, helperText, mentions, userResource, addItem, removeItem }) => {\n  const record = useRecordContext();\n  const { identity } = useGetIdentity();\n  const userDataModel = useDataModel(userResource);\n  const classes = useStyles();\n  const notify = useNotify();\n  const outbox = useOutbox();\n  const [expanded, setExpanded] = useState(false);\n\n  const onSubmit = useCallback(\n    async (values, { reset }) => {\n      const document = new DOMParser().parseFromString(values.comment, 'text/html');\n      const mentions = Array.from(document.body.getElementsByClassName('mention'));\n      let mentionedUsersUris = [];\n\n      mentions.forEach(node => {\n        const userUri = node.attributes['data-mention-id'].value;\n        const userLabel = node.attributes['data-mention-label'].value;\n        const link = document.createElement('a');\n        link.setAttribute(\n          'href',\n          new URL(window.location.href).origin + '/' + userResource + '/' + encodeURIComponent(userUri) + '/show'\n        );\n        link.textContent = '@' + userLabel;\n        node.parentNode.replaceChild(link, node);\n        mentionedUsersUris.push(userUri);\n      });\n\n      if (document.body.innerHTML === 'undefined') {\n        notify('Votre commentaire est vide', 'error');\n      } else {\n        const tempId = Date.now();\n\n        const note = {\n          type: OBJECT_TYPES.NOTE,\n          attributedTo: outbox.owner,\n          content: document.body.innerHTML,\n          inReplyTo: record[context],\n          published: new Date().toISOString()\n        };\n\n        try {\n          addItem({ id: tempId, ...note });\n          reset();\n          setExpanded(false);\n          await outbox.post({ ...note, to: [...mentionedUsersUris, PUBLIC_URI] });\n          notify('Commentaire posté avec succès', 'success');\n        } catch (e) {\n          removeItem(tempId);\n          notify(e.message, 'error');\n        }\n      }\n    },\n    [outbox, notify, setExpanded, addItem, removeItem]\n  );\n\n  // Don't init the comment field until the mentions are loaded, as the suggestion field can only be initialized once\n  if (mentions && !mentions.items) return null;\n\n  return (\n    <Form\n      onSubmit={onSubmit}\n      subscription={{ submitting: true, pristine: true }}\n      render={({ handleSubmit, submitting, pristine }) => {\n        // Hack to clear comment input when form is reset\n        // TODO When we update to React-Admin 4, check if the new RichTextInput solves this bug\n        if (pristine) {\n          const commentElement = document.getElementById('comment');\n          if (commentElement) commentElement.innerHTML = '';\n        }\n\n        return (\n          <form onSubmit={handleSubmit} className={classes.form}>\n            <Box className={classes.container}>\n              <Avatar src={identity?.webIdData?.[userDataModel?.fieldsMapping?.image]} className={classes.avatar} />\n              <RichTextInput\n                source=\"comment\"\n                label=\"\"\n                toolbar={null}\n                fullWidth\n                classes={{ editorContent: classes.editorContent }}\n                editorOptions={{\n                  ...DefaultEditorOptions,\n                  onFocus() {\n                    setExpanded(true);\n                  },\n                  extensions: [\n                    ...DefaultEditorOptions.extensions,\n                    mentions\n                      ? CustomMention.configure({\n                          HTMLAttributes: {\n                            class: 'mention'\n                          },\n                          suggestion: mentions\n                        })\n                      : null\n                  ]\n                }}\n                helperText={helperText}\n              />\n              {expanded && (\n                <Button\n                  type=\"submit\"\n                  size=\"small\"\n                  variant=\"contained\"\n                  color=\"primary\"\n                  endIcon={<SendIcon />}\n                  disabled={submitting}\n                  className={classes.button}\n                >\n                  Envoyer\n                </Button>\n              )}\n            </Box>\n          </form>\n        );\n      }}\n    />\n  );\n};\n\nexport default PostCommentForm;\n","import React from 'react';\nimport { TextField, RichTextField, DateField } from 'react-admin';\nimport { Box, Typography, CircularProgress, makeStyles } from '@material-ui/core';\nimport { ReferenceField, useDataModel } from '@semapps/semantic-data-provider';\nimport { AvatarWithLabelField } from '@semapps/field-components';\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    paddingLeft: 80,\n    marginTop: 8,\n    minHeight: 80,\n    position: 'relative'\n  },\n  avatar: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    bottom: 0,\n    width: 64,\n    height: 64\n  },\n  text: {\n    paddingTop: 2,\n    paddingBottom: 8\n  },\n  label: {\n    fontWeight: 'bold'\n  },\n  content: {\n    '& p': {\n      marginBlockStart: '0.5em',\n      marginBlockEnd: '0.5em'\n    }\n  },\n  loading: {\n    zIndex: 1000,\n    backgroundColor: 'white',\n    opacity: 0.5,\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minHeight: 200,\n    marginTop: 5\n  }\n}));\n\nconst CommentsList = ({ comments, userResource, loading }) => {\n  const classes = useStyles();\n  const userDataModel = useDataModel(userResource);\n  return (\n    <Box position=\"relative\">\n      {comments &&\n        comments\n          .sort((a, b) => new Date(b.published) - new Date(a.published))\n          .map(comment => (\n            <Box className={classes.container}>\n              <Box className={classes.avatar}>\n                <ReferenceField record={comment} reference=\"Person\" source=\"attributedTo\" linkType={false}>\n                  <AvatarWithLabelField image={userDataModel?.fieldsMapping?.image} />\n                </ReferenceField>\n              </Box>\n              <Box className={classes.text}>\n                <Typography variant=\"body2\">\n                  <ReferenceField record={comment} reference=\"Person\" source=\"attributedTo\">\n                    <TextField variant=\"body2\" source={userDataModel?.fieldsMapping?.title} className={classes.label} />\n                  </ReferenceField>\n                  &nbsp;•&nbsp;\n                  <DateField record={comment} variant=\"body2\" source=\"published\" showTime />\n                </Typography>\n                <RichTextField record={comment} variant=\"body1\" source=\"content\" className={classes.content} />\n              </Box>\n            </Box>\n          ))}\n      {loading && (\n        <Box minHeight={200}>\n          <Box alignItems=\"center\" className={classes.loading}>\n            <CircularProgress size={60} thickness={6} />\n          </Box>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useMemo, useState, useEffect } from 'react';\nimport { useGetIdentity, fetchUtils } from 'react-admin';\n\nconst useCollection = predicateOrUrl => {\n  const { identity } = useGetIdentity();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n\n  const collectionUrl = useMemo(() => {\n    if (predicateOrUrl) {\n      if (predicateOrUrl.startsWith('http')) {\n        return predicateOrUrl;\n      } else if (identity?.webIdData) {\n        return identity?.webIdData?.[predicateOrUrl];\n      }\n    }\n  }, [identity, predicateOrUrl]);\n\n  const fetch = useCallback(async () => {\n    if (!collectionUrl) return;\n\n    setLoading(true);\n    const headers = new Headers({\n      Accept: 'application/ld+json',\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    });\n\n    fetchUtils\n      .fetchJson(collectionUrl, { headers })\n      .then(({ json }) => {\n        if (json && json.items) {\n          setItems(json.items);\n        } else if (json && json.orderedItems) {\n          setItems(json.orderedItems);\n        } else {\n          setItems([]);\n        }\n        setError(false);\n        setLoaded(true);\n        setLoading(false);\n      })\n      .catch(() => {\n        setError(true);\n        setLoaded(true);\n        setLoading(false);\n      });\n  }, [setItems, setLoaded, setLoading, setError, collectionUrl]);\n\n  useEffect(() => {\n    if (!loading && !loaded && !error) {\n      fetch();\n    }\n  }, [fetch, loading, loaded, error]);\n\n  const addItem = useCallback(\n    item => {\n      setItems(oldItems => [...oldItems, item]);\n    },\n    [setItems]\n  );\n\n  const removeItem = useCallback(\n    itemId => {\n      setItems(oldItems => oldItems.filter(item => (typeof item === 'string' ? item !== itemId : item.id !== itemId)));\n    },\n    [setItems]\n  );\n\n  return { items, loading, loaded, error, refetch: fetch, addItem, removeItem, url: collectionUrl };\n};\n\nexport default useCollection;\n","import React from 'react';\nimport { useRecordContext } from 'react-admin';\nimport PostCommentForm from './PostCommentForm';\nimport CommentsList from './CommentsList';\nimport useCollection from '../../hooks/useCollection';\n\nconst CommentsField = ({ source, context, helperText, userResource, mentions }) => {\n  const record = useRecordContext();\n  const { items: comments, loading, addItem, removeItem } = useCollection(record.replies);\n  if (!userResource) throw new Error('No userResource defined for CommentsField');\n  return (\n    <>\n      <PostCommentForm\n        context={context}\n        helperText={helperText}\n        userResource={userResource}\n        mentions={mentions}\n        addItem={addItem}\n        removeItem={removeItem}\n      />\n      <CommentsList comments={comments} loading={loading} userResource={userResource} />\n    </>\n  );\n};\n\nCommentsField.defaultProps = {\n  addLabel: true,\n  label: 'Commentaires',\n  source: 'id', // Ensure the field is always displayed\n  context: 'id'\n};\n\nexport default CommentsField;\n","import React from 'react';\nimport { useGetOne, LinearProgress } from 'react-admin';\nimport { ReferenceArrayField } from '@semapps/semantic-data-provider';\n\nconst CollectionList = ({ collectionUrl, resource, children, ...rest }) => {\n  if (React.Children.count(children) !== 1) {\n    throw new Error('<CollectionList> only accepts a single child');\n  }\n\n  // TODO use a simple fetch call, as the resource is not good and it is useless\n  const { data: collection, loading } = useGetOne(resource, collectionUrl, { enabled: !!collectionUrl });\n\n  if (loading) {\n    return (\n      <div style={{ marginTop: 8 }}>\n        <LinearProgress />\n      </div>\n    );\n  } else if (!collection) {\n    return null;\n  }\n\n  return (\n    <ReferenceArrayField reference={resource} record={collection} source=\"items\" {...rest}>\n      {children}\n    </ReferenceArrayField>\n  );\n};\n\nexport default CollectionList;\n","import React from 'react';\nimport CollectionList from './CollectionList';\n\nconst ReferenceCollectionField = ({ source, record, reference, children, ...rest }) => {\n  if (React.Children.count(children) !== 1) {\n    throw new Error('<ReferenceCollectionField> only accepts a single child');\n  }\n\n  if (!record || !record[source]) return null;\n\n  return (\n    <CollectionList resource={reference} collectionUrl={record[source]} {...rest}>\n      {children}\n    </CollectionList>\n  );\n};\n\nReferenceCollectionField.defaultProps = {\n  addLabel: true\n};\n\nexport default ReferenceCollectionField;\n","import React, { useState, useEffect, forwardRef, useImperativeHandle } from 'react';\nimport { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  items: {\n    background: '#fff',\n    borderRadius: '0.5rem',\n    boxShadow: '0 0 0 1px rgba(0, 0, 0, 0.05), 0px 10px 20px rgba(0, 0, 0, 0.1)',\n    color: 'rgba(0, 0, 0, 0.8)',\n    fontSize: '0.9rem',\n    overflow: 'hidden',\n    padding: '0.2rem',\n    position: 'relative'\n  },\n  item: {\n    background: 'transparent',\n    border: '1px solid transparent',\n    borderRadius: '0.4rem',\n    display: 'block',\n    margin: 0,\n    padding: '0.2rem 0.4rem',\n    textAlign: 'left',\n    width: '100%',\n    '&.selected': {\n      borderColor: '#000'\n    }\n  }\n}));\n\nexport default forwardRef((props, ref) => {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const classes = useStyles();\n\n  const selectItem = index => {\n    const item = props.items[index];\n\n    if (item) {\n      props.command({ id: item });\n    }\n  };\n\n  const upHandler = () => {\n    setSelectedIndex((selectedIndex + props.items.length - 1) % props.items.length);\n  };\n\n  const downHandler = () => {\n    setSelectedIndex((selectedIndex + 1) % props.items.length);\n  };\n\n  const enterHandler = () => {\n    selectItem(selectedIndex);\n  };\n\n  useEffect(() => setSelectedIndex(0), [props.items]);\n\n  useImperativeHandle(ref, () => ({\n    onKeyDown: ({ event }) => {\n      if (event.key === 'ArrowUp') {\n        upHandler();\n        return true;\n      }\n\n      if (event.key === 'ArrowDown') {\n        downHandler();\n        return true;\n      }\n\n      if (event.key === 'Enter') {\n        enterHandler();\n        return true;\n      }\n\n      return false;\n    }\n  }));\n\n  return (\n    <div className={classes.items}>\n      {props.items.length ? (\n        props.items.map((item, index) => (\n          <button\n            className={classes.item + (index === selectedIndex ? ' selected' : '')}\n            key={index}\n            onClick={() => selectItem(index)}\n          >\n            {item.label}\n          </button>\n        ))\n      ) : (\n        <div className={classes.item}>Aucun résultat</div>\n      )}\n    </div>\n  );\n});\n","import { ReactRenderer } from '@tiptap/react';\nimport tippy from 'tippy.js';\nimport MentionsList from './MentionsList';\n\nconst renderMentions = () => {\n  let component;\n  let popup;\n\n  return {\n    onStart: props => {\n      component = new ReactRenderer(MentionsList, {\n        props,\n        editor: props.editor\n      });\n\n      popup = tippy('body', {\n        getReferenceClientRect: props.clientRect,\n        appendTo: () => document.body,\n        content: component.element,\n        showOnCreate: true,\n        interactive: true,\n        trigger: 'manual',\n        placement: 'bottom-start'\n      });\n    },\n\n    onUpdate(props) {\n      component.updateProps(props);\n\n      popup[0].setProps({\n        getReferenceClientRect: props.clientRect\n      });\n    },\n\n    onKeyDown(props) {\n      if (props.event.key === 'Escape') {\n        popup[0].hide();\n\n        return true;\n      }\n\n      return component.ref?.onKeyDown(props);\n    },\n\n    onExit() {\n      popup[0].destroy();\n      component.destroy();\n    }\n  };\n};\n\nexport default renderMentions;\n","import { useCallback, useMemo } from 'react';\nimport { useGetIdentity, fetchUtils } from 'react-admin';\nimport { buildBlankNodesQuery } from '@semapps/semantic-data-provider';\n\nconst useInbox = () => {\n  const { identity } = useGetIdentity();\n\n  const inboxUrl = useMemo(() => {\n    if (identity?.webIdData) {\n      return identity?.webIdData?.inbox;\n    }\n  }, [identity]);\n\n  const sparqlEndpoint = useMemo(() => {\n    if (identity?.webIdData) {\n      return identity?.webIdData?.endpoints?.['void:sparqlEndpoint'];\n    }\n  }, [identity]);\n\n  const fetch = useCallback(\n    async ({ filters }) => {\n      if (!sparqlEndpoint || !inboxUrl) return;\n\n      const token = localStorage.getItem('token');\n      const blankNodesQuery = buildBlankNodesQuery(['as:object']);\n\n      let filtersWhereQuery = '';\n      if (filters) {\n        Object.keys(filters).forEach(predicate => {\n          if (filters[predicate]) {\n            const object = filters[predicate].startsWith('http') ? `<${filters[predicate]}>` : filters[predicate];\n            filtersWhereQuery += `?s1 ${predicate} ${object} .`;\n          }\n        });\n      }\n\n      const query = `\n        PREFIX as: <https://www.w3.org/ns/activitystreams#>\n        CONSTRUCT {\n          ?s1 ?p1 ?o1 .\n          ${blankNodesQuery.construct}\n        }\n        WHERE {\n          <${inboxUrl}> as:items ?s1 .\n          ?s1 ?p1 ?o1 .\n          FILTER( (isIRI(?s1)) ) .\n          ${filtersWhereQuery}\n          ${blankNodesQuery.where}\n        }\n      `;\n\n      const { json } = await fetchUtils.fetchJson(sparqlEndpoint, {\n        method: 'POST',\n        body: query,\n        headers: new Headers({\n          Accept: 'application/ld+json',\n          Authorization: 'Bearer ' + token\n        })\n      });\n\n      if (json['@graph']) {\n        return json['@graph'];\n      } else {\n        return null;\n      }\n    },\n    [sparqlEndpoint, inboxUrl]\n  );\n\n  return { fetch, url: inboxUrl, owner: identity?.id };\n};\n\nexport default useInbox;\n","import { useMemo } from 'react';\nimport { useQuery } from 'react-admin';\nimport renderMentions from './renderMentions';\nimport { useDataModel } from '@semapps/semantic-data-provider';\n\nconst useMentions = userResource => {\n  const userDataModel = useDataModel(userResource);\n\n  // The \"enabled\" option doesn't work with useQueryWithStore\n  const { data } = useQuery(\n    {\n      type: 'getList',\n      resource: userResource,\n      payload: {\n        filter: {\n          _predicates: [userDataModel?.fieldsMapping?.title],\n          blankNodes: []\n        }\n      }\n    },\n    {\n      enabled: !!userDataModel?.fieldsMapping?.title\n    }\n  );\n\n  const availableMentions = useMemo(() => {\n    if (data) {\n      return data.map(item => ({ id: item.id, label: item[userDataModel?.fieldsMapping?.title] }));\n    }\n  }, [data]);\n\n  const items = useMemo(() => {\n    if (availableMentions) {\n      return ({ query }) => {\n        return availableMentions.filter(({ label }) => label.toLowerCase().startsWith(query.toLowerCase())).slice(0, 5);\n      };\n    }\n  }, [availableMentions]);\n\n  return {\n    items,\n    render: renderMentions\n  };\n};\n\nexport default useMentions;\n","import { useCallback } from 'react';\nimport { fetchUtils } from 'react-admin';\n\nconst useWebfinger = () => {\n  // Post an activity to the logged user's outbox and return its URI\n  const fetch = useCallback(async id => {\n    // eslint-disable-next-line\n    const [_, username, host] = id.split('@');\n    if (host) {\n      const protocol = host.includes(':') ? 'http' : 'https'; // If the host has a port, we are most likely on localhost\n      const webfingerUrl = `${protocol}://${host}/.well-known/webfinger?resource=acct:${username}@${host}`;\n\n      try {\n        const { json } = await fetchUtils.fetchJson(webfingerUrl);\n\n        const link = json.links.find(l => l.type === 'application/activity+json');\n\n        return link ? link.href : null;\n      } catch (e) {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }, []);\n\n  return { fetch };\n};\n\nexport default useWebfinger;\n"],"names":["OBJECT_TYPES","ARTICLE","AUDIO","DOCUMENT","EVENT","IMAGE","NOTE","PAGE","PLACE","PROFILE","RELATIONSHIP","TOMBSTONE","VIDEO","PUBLIC_URI","useOutbox","identity","useGetIdentity","outboxUrl","useMemo","webIdData","_identity$webIdData","outbox","sparqlEndpoint","_identity$webIdData2","endpoints","_identity$webIdData2$","post","useCallback","activity","token","localStorage","getItem","fetchUtils","fetchJson","method","body","JSON","stringify","headers","Headers","Authorization","get","fetch","blankNodesQuery","buildBlankNodesQuery","query","construct","where","Accept","json","url","owner","id","CustomMention","Mention","extend","renderHTML","node","HTMLAttributes","mergeAttributes","this","options","attrs","label","addAttributes","parseHTML","element","getAttribute","attributes","useStyles","makeStyles","theme","form","marginTop","container","paddingLeft","position","avatar","top","left","bottom","width","height","editorContent","backgroundColor","padding","borderWidth","borderRadius","borderBottom","minHeight","outline","marginBottom","fontFamily","typography","body1","marginBlockStart","marginBlockEnd","button","PostCommentForm","context","helperText","mentions","userResource","addItem","removeItem","record","useRecordContext","userDataModel","useDataModel","classes","notify","useNotify","useState","expanded","setExpanded","onSubmit","values","reset","document","DOMParser","parseFromString","comment","Array","from","getElementsByClassName","mentionedUsersUris","forEach","userUri","value","userLabel","link","createElement","setAttribute","URL","window","location","href","origin","encodeURIComponent","textContent","parentNode","replaceChild","push","innerHTML","tempId","Date","now","note","type","attributedTo","content","inReplyTo","published","toISOString","to","_context","message","items","React","Form","subscription","submitting","pristine","render","handleSubmit","commentElement","getElementById","className","Box","Avatar","src","fieldsMapping","_userDataModel$fields","image","RichTextInput","source","toolbar","fullWidth","editorOptions","DefaultEditorOptions","onFocus","extensions","configure","suggestion","Button","size","variant","color","endIcon","SendIcon","disabled","text","paddingTop","paddingBottom","fontWeight","loading","zIndex","opacity","right","display","alignItems","justifyContent","CommentsList","comments","sort","a","b","map","ReferenceField","reference","linkType","AvatarWithLabelField","Typography","TextField","_userDataModel$fields2","title","DateField","showTime","RichTextField","CircularProgress","thickness","useCollection","predicateOrUrl","setItems","setLoading","loaded","setLoaded","error","setError","collectionUrl","startsWith","then","orderedItems","useEffect","item","oldItems","itemId","filter","refetch","CommentsField","replies","Error","defaultProps","addLabel","CollectionList","resource","children","rest","Children","count","useGetOne","enabled","collection","data","style","LinearProgress","ReferenceArrayField","ReferenceCollectionField","background","boxShadow","fontSize","overflow","border","margin","textAlign","borderColor","forwardRef","props","ref","selectedIndex","setSelectedIndex","selectItem","index","command","useImperativeHandle","onKeyDown","event","key","length","onClick","renderMentions","component","popup","onStart","ReactRenderer","MentionsList","editor","tippy","getReferenceClientRect","clientRect","appendTo","showOnCreate","interactive","trigger","placement","onUpdate","updateProps","setProps","hide","_component$ref","onExit","destroy","ACCEPT","ADD","ANNOUNCE","ARRIVE","BLOCK","CREATE","DELETE","DISLIKE","FLAG","FOLLOW","IGNORE","INVITE","JOIN","LEAVE","LIKE","LISTEN","MOVE","OFFER","QUESTION","REJECT","READ","REMOVE","TENTATIVE_REJECT","TENTATIVE_ACCEPT","TRAVAL","UNDO","UPDATE","VIEW","APPLICATION","GROUP","ORGANIZATION","PERSON","SERVICE","inboxUrl","inbox","filters","filtersWhereQuery","Object","keys","predicate","object","useQuery","payload","_predicates","blankNodes","availableMentions","_userDataModel$fields3","toLowerCase","slice","split","username","host","protocol","includes","webfingerUrl","links","find","l"],"mappings":"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"}